module android.java.android.telecom.ConnectionService_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl, JavaInterfaceMembers;
static import arsd.jni;

import import7 = android.java.java.util.Collection_d_interface;
import import19 = android.java.android.content.res.Resources_Theme_d_interface;
import import9 = android.java.android.app.Application_d_interface;
import import38 = android.java.android.content.ComponentName_d_interface;
import import40 = android.java.java.lang.Class_d_interface;
import import45 = android.java.android.content.res.ColorStateList_d_interface;
import import11 = android.java.android.app.Notification_d_interface;
import import36 = android.java.android.os.UserHandle_d_interface;
import import1 = android.java.android.content.Intent_d_interface;
import import24 = android.java.java.io.FileOutputStream_d_interface;
import import35 = android.java.android.os.Handler_d_interface;
import import39 = android.java.android.content.ServiceConnection_d_interface;
import import13 = android.java.android.content.res.AssetManager_d_interface;
import import2 = android.java.android.telecom.RemoteConnection_d_interface;
import import47 = android.java.android.util.AttributeSet_d_interface;
import import29 = android.java.android.graphics.drawable.Drawable_d_interface;
import import43 = android.java.android.content.ComponentCallbacks_d_interface;
import import32 = android.java.android.os.Bundle_d_interface;
import import18 = android.java.java.util.concurrent.Executor_d_interface;
import import28 = android.java.android.database.DatabaseErrorHandler_d_interface;
import import0 = android.java.android.os.IBinder_d_interface;
import import16 = android.java.android.content.ContentResolver_d_interface;
import import17 = android.java.android.os.Looper_d_interface;
import import25 = android.java.java.io.File_d_interface;
import import33 = android.java.android.content.IntentSender_d_interface;
import import37 = android.java.android.content.IntentFilter_d_interface;
import import31 = android.java.java.io.InputStream_d_interface;
import import20 = android.java.java.lang.ClassLoader_d_interface;
import import26 = android.java.android.database.sqlite.SQLiteDatabase_d_interface;
import import15 = android.java.android.content.pm.PackageManager_d_interface;
import import10 = android.java.android.content.res.Configuration_d_interface;
import import34 = android.java.android.content.BroadcastReceiver_d_interface;
import import23 = android.java.java.io.FileInputStream_d_interface;
import import5 = android.java.android.telecom.Conference_d_interface;
import import30 = android.java.android.graphics.Bitmap_d_interface;
import import27 = android.java.android.database.sqlite.SQLiteDatabase_CursorFactory_d_interface;
import import44 = android.java.java.lang.CharSequence_d_interface;
import import8 = android.java.android.telecom.RemoteConference_d_interface;
import import41 = android.java.android.net.Uri_d_interface;
import import14 = android.java.android.content.res.Resources_d_interface;
import import22 = android.java.android.content.SharedPreferences_d_interface;
import import3 = android.java.android.telecom.PhoneAccountHandle_d_interface;
import import42 = android.java.android.view.Display_d_interface;
import import46 = android.java.android.content.res.TypedArray_d_interface;
import import4 = android.java.android.telecom.ConnectionRequest_d_interface;
import import6 = android.java.android.telecom.Connection_d_interface;
import import21 = android.java.android.content.pm.ApplicationInfo_d_interface;
import import12 = android.java.android.content.Context_d_interface;

final class ConnectionService : IJavaObject {
	static immutable string[] _d_canCastTo = [
	];
	@Import this(arsd.jni.Default);
	@Import import0.IBinder onBind(import1.Intent);
	@Import bool onUnbind(import1.Intent);
	@Import import2.RemoteConnection createRemoteIncomingConnection(import3.PhoneAccountHandle, import4.ConnectionRequest);
	@Import import2.RemoteConnection createRemoteOutgoingConnection(import3.PhoneAccountHandle, import4.ConnectionRequest);
	@Import void conferenceRemoteConnections(import2.RemoteConnection, import2.RemoteConnection);
	@Import void addConference(import5.Conference);
	@Import void addExistingConnection(import3.PhoneAccountHandle, import6.Connection);
	@Import void connectionServiceFocusReleased();
	@Import import7.Collection getAllConnections();
	@Import import7.Collection getAllConferences();
	@Import import6.Connection onCreateIncomingConnection(import3.PhoneAccountHandle, import4.ConnectionRequest);
	@Import void onCreateIncomingConnectionFailed(import3.PhoneAccountHandle, import4.ConnectionRequest);
	@Import void onCreateOutgoingConnectionFailed(import3.PhoneAccountHandle, import4.ConnectionRequest);
	@Import import6.Connection onCreateOutgoingConnection(import3.PhoneAccountHandle, import4.ConnectionRequest);
	@Import import6.Connection onCreateOutgoingHandoverConnection(import3.PhoneAccountHandle, import4.ConnectionRequest);
	@Import import6.Connection onCreateIncomingHandoverConnection(import3.PhoneAccountHandle, import4.ConnectionRequest);
	@Import void onHandoverFailed(import4.ConnectionRequest, int);
	@Import void onConference(import6.Connection, import6.Connection);
	@Import void onRemoteConferenceAdded(import8.RemoteConference);
	@Import void onRemoteExistingConnectionAdded(import2.RemoteConnection);
	@Import void onConnectionServiceFocusLost();
	@Import void onConnectionServiceFocusGained();
	@Import import9.Application getApplication();
	@Import void onCreate();
	@Import void onStart(import1.Intent, int);
	@Import int onStartCommand(import1.Intent, int, int);
	@Import void onDestroy();
	@Import void onConfigurationChanged(import10.Configuration);
	@Import void onLowMemory();
	@Import void onTrimMemory(int);
	@Import void onRebind(import1.Intent);
	@Import void onTaskRemoved(import1.Intent);
	@Import void stopSelf();
	@Import void stopSelf(int);
	@Import bool stopSelfResult(int);
	@Import void startForeground(int, import11.Notification);
	@Import void startForeground(int, import11.Notification, int);
	@Import void stopForeground(bool);
	@Import void stopForeground(int);
	@Import int getForegroundServiceType();
	@Import import12.Context getBaseContext();
	@Import import13.AssetManager getAssets();
	@Import import14.Resources getResources();
	@Import import15.PackageManager getPackageManager();
	@Import import16.ContentResolver getContentResolver();
	@Import import17.Looper getMainLooper();
	@Import import18.Executor getMainExecutor();
	@Import import12.Context getApplicationContext();
	@Import void setTheme(int);
	@Import import19.Resources_Theme getTheme();
	@Import import20.ClassLoader getClassLoader();
	@Import string getPackageName();
	@Import string getOpPackageName();
	@Import import21.ApplicationInfo getApplicationInfo();
	@Import string getPackageResourcePath();
	@Import string getPackageCodePath();
	@Import import22.SharedPreferences getSharedPreferences(string, int);
	@Import bool moveSharedPreferencesFrom(import12.Context, string);
	@Import bool deleteSharedPreferences(string);
	@Import import23.FileInputStream openFileInput(string);
	@Import import24.FileOutputStream openFileOutput(string, int);
	@Import bool deleteFile(string);
	@Import import25.File getFileStreamPath(string);
	@Import string[] fileList();
	@Import import25.File getDataDir();
	@Import import25.File getFilesDir();
	@Import import25.File getNoBackupFilesDir();
	@Import import25.File getExternalFilesDir(string);
	@Import import25.File[] getExternalFilesDirs(string);
	@Import import25.File getObbDir();
	@Import import25.File[] getObbDirs();
	@Import import25.File getCacheDir();
	@Import import25.File getCodeCacheDir();
	@Import import25.File getExternalCacheDir();
	@Import import25.File[] getExternalCacheDirs();
	@Import import25.File[] getExternalMediaDirs();
	@Import import25.File getDir(string, int);
	@Import import26.SQLiteDatabase openOrCreateDatabase(string, int, import27.SQLiteDatabase_CursorFactory);
	@Import import26.SQLiteDatabase openOrCreateDatabase(string, int, import27.SQLiteDatabase_CursorFactory, import28.DatabaseErrorHandler);
	@Import bool moveDatabaseFrom(import12.Context, string);
	@Import bool deleteDatabase(string);
	@Import import25.File getDatabasePath(string);
	@Import string[] databaseList();
	@Import import29.Drawable getWallpaper();
	@Import import29.Drawable peekWallpaper();
	@Import int getWallpaperDesiredMinimumWidth();
	@Import int getWallpaperDesiredMinimumHeight();
	@Import void setWallpaper(import30.Bitmap);
	@Import void setWallpaper(import31.InputStream);
	@Import void clearWallpaper();
	@Import void startActivity(import1.Intent);
	@Import void startActivity(import1.Intent, import32.Bundle);
	@Import void startActivities(import1.Intent[]);
	@Import void startActivities(import1.Intent, import32.Bundle[]);
	@Import void startIntentSender(import33.IntentSender, import1.Intent, int, int, int);
	@Import void startIntentSender(import33.IntentSender, import1.Intent, int, int, int, import32.Bundle);
	@Import void sendBroadcast(import1.Intent);
	@Import void sendBroadcast(import1.Intent, string);
	@Import void sendOrderedBroadcast(import1.Intent, string);
	@Import void sendOrderedBroadcast(import1.Intent, string, import34.BroadcastReceiver, import35.Handler, int, string, import32.Bundle);
	@Import void sendBroadcastAsUser(import1.Intent, import36.UserHandle);
	@Import void sendBroadcastAsUser(import1.Intent, import36.UserHandle, string);
	@Import void sendOrderedBroadcastAsUser(import1.Intent, import36.UserHandle, string, import34.BroadcastReceiver, import35.Handler, int, string, import32.Bundle);
	@Import void sendStickyBroadcast(import1.Intent);
	@Import void sendStickyOrderedBroadcast(import1.Intent, import34.BroadcastReceiver, import35.Handler, int, string, import32.Bundle);
	@Import void removeStickyBroadcast(import1.Intent);
	@Import void sendStickyBroadcastAsUser(import1.Intent, import36.UserHandle);
	@Import void sendStickyOrderedBroadcastAsUser(import1.Intent, import36.UserHandle, import34.BroadcastReceiver, import35.Handler, int, string, import32.Bundle);
	@Import void removeStickyBroadcastAsUser(import1.Intent, import36.UserHandle);
	@Import import1.Intent registerReceiver(import34.BroadcastReceiver, import37.IntentFilter);
	@Import import1.Intent registerReceiver(import34.BroadcastReceiver, import37.IntentFilter, int);
	@Import import1.Intent registerReceiver(import34.BroadcastReceiver, import37.IntentFilter, string, import35.Handler);
	@Import import1.Intent registerReceiver(import34.BroadcastReceiver, import37.IntentFilter, string, import35.Handler, int);
	@Import void unregisterReceiver(import34.BroadcastReceiver);
	@Import import38.ComponentName startService(import1.Intent);
	@Import import38.ComponentName startForegroundService(import1.Intent);
	@Import bool stopService(import1.Intent);
	@Import bool bindService(import1.Intent, import39.ServiceConnection, int);
	@Import bool bindService(import1.Intent, int, import18.Executor, import39.ServiceConnection);
	@Import bool bindIsolatedService(import1.Intent, int, string, import18.Executor, import39.ServiceConnection);
	@Import void updateServiceGroup(import39.ServiceConnection, int, int);
	@Import void unbindService(import39.ServiceConnection);
	@Import bool startInstrumentation(import38.ComponentName, string, import32.Bundle);
	@Import IJavaObject getSystemService(string);
	@Import string getSystemServiceName(import40.Class);
	@Import int checkPermission(string, int, int);
	@Import int checkCallingPermission(string);
	@Import int checkCallingOrSelfPermission(string);
	@Import int checkSelfPermission(string);
	@Import void enforcePermission(string, int, int, string);
	@Import void enforceCallingPermission(string, string);
	@Import void enforceCallingOrSelfPermission(string, string);
	@Import void grantUriPermission(string, import41.Uri, int);
	@Import void revokeUriPermission(import41.Uri, int);
	@Import void revokeUriPermission(string, import41.Uri, int);
	@Import int checkUriPermission(import41.Uri, int, int, int);
	@Import int checkCallingUriPermission(import41.Uri, int);
	@Import int checkCallingOrSelfUriPermission(import41.Uri, int);
	@Import int checkUriPermission(import41.Uri, string, string, int, int, int);
	@Import void enforceUriPermission(import41.Uri, int, int, int, string);
	@Import void enforceCallingUriPermission(import41.Uri, int, string);
	@Import void enforceCallingOrSelfUriPermission(import41.Uri, int, string);
	@Import void enforceUriPermission(import41.Uri, string, string, int, int, int, string);
	@Import import12.Context createPackageContext(string, int);
	@Import import12.Context createContextForSplit(string);
	@Import import12.Context createConfigurationContext(import10.Configuration);
	@Import import12.Context createDisplayContext(import42.Display);
	@Import bool isRestricted();
	@Import import12.Context createDeviceProtectedStorageContext();
	@Import bool isDeviceProtectedStorage();
	@Import void registerComponentCallbacks(import43.ComponentCallbacks);
	@Import void unregisterComponentCallbacks(import43.ComponentCallbacks);
	@Import import44.CharSequence getText(int);
	@Import string getString(int);
	@Import string getString(int, IJavaObject[]);
	@Import int getColor(int);
	@Import import29.Drawable getDrawable(int);
	@Import import45.ColorStateList getColorStateList(int);
	@Import import46.TypedArray obtainStyledAttributes(int[]);
	@Import import46.TypedArray obtainStyledAttributes(int, int[]);
	@Import import46.TypedArray obtainStyledAttributes(import47.AttributeSet, int[]);
	@Import import46.TypedArray obtainStyledAttributes(import47.AttributeSet, int, int, int[]);
	@Import IJavaObject getSystemService(import40.Class);
	@Import import40.Class getClass();
	@Import int hashCode();
	@Import bool equals(IJavaObject);
	@Import @JavaName("toString") string toString_();
	override string toString() { return toString_(); }
	@Import void notify();
	@Import void notifyAll();
	@Import void wait(long);
	@Import void wait(long, int);
	@Import void wait();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/telecom/ConnectionService;";
}



