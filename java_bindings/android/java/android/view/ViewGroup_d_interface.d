module android.java.android.view.ViewGroup_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl;

import import8 = android.java.java.util.Collection_d_interface;
import import21 = android.java.android.view.ViewParent_d_interface;
import import14 = android.java.android.view.PointerIcon_d_interface;
import import6 = android.java.android.view.accessibility.AccessibilityEvent_d_interface;
import import5 = android.java.android.graphics.Rect_d_interface;
import import17 = android.java.android.view.ViewGroupOverlay_d_interface;
import import2 = android.java.android.view.View_d_interface;
import import19 = android.java.android.view.ViewGroup_OnHierarchyChangeListener_d_interface;
import import20 = android.java.android.animation.LayoutTransition_d_interface;
import import23 = android.java.android.view.animation.LayoutAnimationController_d_interface;
import import1 = android.java.android.util.AttributeSet_d_interface;
import import12 = android.java.android.view.KeyEvent_d_interface;
import import16 = android.java.android.os.Bundle_d_interface;
import import27 = android.java.android.view.ViewOverlay_d_interface;
import import3 = android.java.android.view.ActionMode_d_interface;
import import11 = android.java.android.view.DragEvent_d_interface;
import import4 = android.java.android.view.ActionMode_Callback_d_interface;
import import10 = android.java.android.content.res.Configuration_d_interface;
import import25 = android.java.android.view.WindowInsets_d_interface;
import import18 = android.java.android.view.ViewGroup_LayoutParams_d_interface;
import import22 = android.java.android.graphics.Point_d_interface;
import import9 = android.java.java.lang.CharSequence_d_interface;
import import26 = android.java.android.view.animation.Animation_AnimationListener_d_interface;
import import13 = android.java.android.view.MotionEvent_d_interface;
import import7 = android.java.java.util.ArrayList_d_interface;
import import15 = android.java.android.view.ViewStructure_d_interface;
import import24 = android.java.android.graphics.Region_d_interface;
import import0 = android.java.android.content.Context_d_interface;

final class ViewGroup : IJavaObject {
	@Import this(import0.Context);
	@Import this(import0.Context, import1.AttributeSet);
	@Import this(import0.Context, import1.AttributeSet, int);
	@Import this(import0.Context, import1.AttributeSet, int, int);
	@Import int getDescendantFocusability();
	@Import void setDescendantFocusability(int);
	@Import void requestChildFocus(import2.View, import2.View);
	@Import void focusableViewAvailable(import2.View);
	@Import bool showContextMenuForChild(import2.View);
	@Import bool showContextMenuForChild(import2.View, float, float);
	@Import import3.ActionMode startActionModeForChild(import2.View, import4.ActionMode_Callback);
	@Import import3.ActionMode startActionModeForChild(import2.View, import4.ActionMode_Callback, int);
	@Import import2.View focusSearch(import2.View, int);
	@Import bool requestChildRectangleOnScreen(import2.View, import5.Rect, bool);
	@Import bool requestSendAccessibilityEvent(import2.View, import6.AccessibilityEvent);
	@Import bool onRequestSendAccessibilityEvent(import2.View, import6.AccessibilityEvent);
	@Import void childHasTransientStateChanged(import2.View, bool);
	@Import bool hasTransientState();
	@Import bool dispatchUnhandledMove(import2.View, int);
	@Import void clearChildFocus(import2.View);
	@Import void clearFocus();
	@Import import2.View getFocusedChild();
	@Import bool hasFocus();
	@Import import2.View findFocus();
	@Import void addFocusables(import7.ArrayList, int, int);
	@Import void addKeyboardNavigationClusters(import8.Collection, int);
	@Import void setTouchscreenBlocksFocus(bool);
	@Import bool getTouchscreenBlocksFocus();
	@Import void findViewsWithText(import7.ArrayList, import9.CharSequence, int);
	@Import void dispatchWindowFocusChanged(bool);
	@Import void addTouchables(import7.ArrayList);
	@Import void dispatchDisplayHint(int);
	@Import void dispatchWindowVisibilityChanged(int);
	@Import void dispatchConfigurationChanged(import10.Configuration);
	@Import void recomputeViewAttributes(import2.View);
	@Import void bringChildToFront(import2.View);
	@Import bool dispatchDragEvent(import11.DragEvent);
	@Import void dispatchWindowSystemUiVisiblityChanged(int);
	@Import void dispatchSystemUiVisibilityChanged(int);
	@Import bool dispatchKeyEventPreIme(import12.KeyEvent);
	@Import bool dispatchKeyEvent(import12.KeyEvent);
	@Import bool dispatchKeyShortcutEvent(import12.KeyEvent);
	@Import bool dispatchTrackballEvent(import13.MotionEvent);
	@Import bool dispatchCapturedPointerEvent(import13.MotionEvent);
	@Import void dispatchPointerCaptureChanged(bool);
	@Import import14.PointerIcon onResolvePointerIcon(import13.MotionEvent, int);
	@Import void addChildrenForAccessibility(import7.ArrayList);
	@Import bool onInterceptHoverEvent(import13.MotionEvent);
	@Import bool dispatchTouchEvent(import13.MotionEvent);
	@Import void setMotionEventSplittingEnabled(bool);
	@Import bool isMotionEventSplittingEnabled();
	@Import bool isTransitionGroup();
	@Import void setTransitionGroup(bool);
	@Import void requestDisallowInterceptTouchEvent(bool);
	@Import bool onInterceptTouchEvent(import13.MotionEvent);
	@Import bool requestFocus(int, import5.Rect);
	@Import bool restoreDefaultFocus();
	@Import void dispatchStartTemporaryDetach();
	@Import void dispatchFinishTemporaryDetach();
	@Import void dispatchProvideStructure(import15.ViewStructure);
	@Import void dispatchProvideAutofillStructure(import15.ViewStructure, int);
	@Import import9.CharSequence getAccessibilityClassName();
	@Import void notifySubtreeAccessibilityStateChanged(import2.View, import2.View, int);
	@Import bool onNestedPrePerformAccessibilityAction(import2.View, int, import16.Bundle);
	@Import import17.ViewGroupOverlay getOverlay();
	@Import bool getClipChildren();
	@Import void setClipChildren(bool);
	@Import void setClipToPadding(bool);
	@Import bool getClipToPadding();
	@Import void dispatchSetSelected(bool);
	@Import void dispatchSetActivated(bool);
	@Import void dispatchDrawableHotspotChanged(float, float);
	@Import void addView(import2.View);
	@Import void addView(import2.View, int);
	@Import void addView(import2.View, int, int);
	@Import void addView(import2.View, import18.ViewGroup_LayoutParams);
	@Import void addView(import2.View, int, import18.ViewGroup_LayoutParams);
	@Import void updateViewLayout(import2.View, import18.ViewGroup_LayoutParams);
	@Import void setOnHierarchyChangeListener(import19.ViewGroup_OnHierarchyChangeListener);
	@Import void onViewAdded(import2.View);
	@Import void onViewRemoved(import2.View);
	@Import void removeView(import2.View);
	@Import void removeViewInLayout(import2.View);
	@Import void removeViewsInLayout(int, int);
	@Import void removeViewAt(int);
	@Import void removeViews(int, int);
	@Import void setLayoutTransition(import20.LayoutTransition);
	@Import import20.LayoutTransition getLayoutTransition();
	@Import void removeAllViews();
	@Import void removeAllViewsInLayout();
	@Import void onDescendantInvalidated(import2.View, import2.View);
	@Import void invalidateChild(import2.View, import5.Rect);
	@Import import21.ViewParent invalidateChildInParent(int, import5.Rect[]);
	@Import void offsetDescendantRectToMyCoords(import2.View, import5.Rect);
	@Import void offsetRectIntoDescendantCoords(import2.View, import5.Rect);
	@Import bool getChildVisibleRect(import2.View, import5.Rect, import22.Point);
	@Import void layout(int, int, int, int);
	@Import void startLayoutAnimation();
	@Import void scheduleLayoutAnimation();
	@Import void setLayoutAnimation(import23.LayoutAnimationController);
	@Import import23.LayoutAnimationController getLayoutAnimation();
	@Import bool isAnimationCacheEnabled();
	@Import void setAnimationCacheEnabled(bool);
	@Import bool isAlwaysDrawnWithCacheEnabled();
	@Import void setAlwaysDrawnWithCacheEnabled(bool);
	@Import int getPersistentDrawingCache();
	@Import void setPersistentDrawingCache(int);
	@Import int getLayoutMode();
	@Import void setLayoutMode(int);
	@Import import18.ViewGroup_LayoutParams generateLayoutParams(import1.AttributeSet);
	@Import int indexOfChild(import2.View);
	@Import int getChildCount();
	@Import import2.View getChildAt(int);
	@Import static int getChildMeasureSpec(int, int, int);
	@Import void clearDisappearingChildren();
	@Import void startViewTransition(import2.View);
	@Import void endViewTransition(import2.View);
	@Import bool gatherTransparentRegion(import24.Region);
	@Import void requestTransparentRegion(import2.View);
	@Import import25.WindowInsets dispatchApplyWindowInsets(import25.WindowInsets);
	@Import import26.Animation_AnimationListener getLayoutAnimationListener();
	@Import void jumpDrawablesToCurrentState();
	@Import void setAddStatesFromChildren(bool);
	@Import bool addStatesFromChildren();
	@Import void childDrawableStateChanged(import2.View);
	@Import void setLayoutAnimationListener(import26.Animation_AnimationListener);
	@Import bool shouldDelayChildPressedState();
	@Import bool onStartNestedScroll(import2.View, import2.View, int);
	@Import void onNestedScrollAccepted(import2.View, import2.View, int);
	@Import void onStopNestedScroll(import2.View);
	@Import void onNestedScroll(import2.View, int, int, int, int);
	@Import void onNestedPreScroll(import2.View, int, int, int[]);
	@Import bool onNestedFling(import2.View, float, float, bool);
	@Import bool onNestedPreFling(import2.View, float, float);
	@Import int getNestedScrollAxes();
	@Import import27.ViewOverlay getOverlay();
	mixin IJavaObjectImplementation!(false);
	mixin JavaPackageId!("android.view", "ViewGroup");
}
