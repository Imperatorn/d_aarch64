module android.java.android.app.backup.BackupAgent_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl, JavaInterfaceMembers;
static import arsd.jni;

import import12 = android.java.android.content.res.Resources_Theme_d_interface;
import import31 = android.java.android.content.ComponentName_d_interface;
import import33 = android.java.java.lang.Class_d_interface;
import import39 = android.java.android.content.res.ColorStateList_d_interface;
import import29 = android.java.android.os.UserHandle_d_interface;
import import24 = android.java.android.content.Intent_d_interface;
import import17 = android.java.java.io.FileOutputStream_d_interface;
import import28 = android.java.android.os.Handler_d_interface;
import import32 = android.java.android.content.ServiceConnection_d_interface;
import import2 = android.java.android.app.backup.BackupDataInput_d_interface;
import import6 = android.java.android.content.res.AssetManager_d_interface;
import import41 = android.java.android.util.AttributeSet_d_interface;
import import21 = android.java.android.graphics.drawable.Drawable_d_interface;
import import37 = android.java.android.content.ComponentCallbacks_d_interface;
import import25 = android.java.android.os.Bundle_d_interface;
import import11 = android.java.java.util.concurrent.Executor_d_interface;
import import20 = android.java.android.database.DatabaseErrorHandler_d_interface;
import import9 = android.java.android.content.ContentResolver_d_interface;
import import3 = android.java.android.app.backup.FullBackupDataOutput_d_interface;
import import10 = android.java.android.os.Looper_d_interface;
import import4 = android.java.java.io.File_d_interface;
import import26 = android.java.android.content.IntentSender_d_interface;
import import30 = android.java.android.content.IntentFilter_d_interface;
import import23 = android.java.java.io.InputStream_d_interface;
import import13 = android.java.java.lang.ClassLoader_d_interface;
import import18 = android.java.android.database.sqlite.SQLiteDatabase_d_interface;
import import8 = android.java.android.content.pm.PackageManager_d_interface;
import import0 = android.java.android.os.ParcelFileDescriptor_d_interface;
import import1 = android.java.android.app.backup.BackupDataOutput_d_interface;
import import35 = android.java.android.content.res.Configuration_d_interface;
import import27 = android.java.android.content.BroadcastReceiver_d_interface;
import import16 = android.java.java.io.FileInputStream_d_interface;
import import22 = android.java.android.graphics.Bitmap_d_interface;
import import19 = android.java.android.database.sqlite.SQLiteDatabase_CursorFactory_d_interface;
import import38 = android.java.java.lang.CharSequence_d_interface;
import import34 = android.java.android.net.Uri_d_interface;
import import7 = android.java.android.content.res.Resources_d_interface;
import import15 = android.java.android.content.SharedPreferences_d_interface;
import import36 = android.java.android.view.Display_d_interface;
import import40 = android.java.android.content.res.TypedArray_d_interface;
import import14 = android.java.android.content.pm.ApplicationInfo_d_interface;
import import5 = android.java.android.content.Context_d_interface;

final class BackupAgent : IJavaObject {
	static immutable string[] _d_canCastTo = [
	];
	@Import this(arsd.jni.Default);
	@Import void onCreate();
	@Import void onDestroy();
	@Import void onBackup(import0.ParcelFileDescriptor, import1.BackupDataOutput, import0.ParcelFileDescriptor);
	@Import void onRestore(import2.BackupDataInput, int, import0.ParcelFileDescriptor);
	@Import void onRestore(import2.BackupDataInput, long, import0.ParcelFileDescriptor);
	@Import void onFullBackup(import3.FullBackupDataOutput);
	@Import void onQuotaExceeded(long, long);
	@Import void fullBackupFile(import4.File, import3.FullBackupDataOutput);
	@Import void onRestoreFile(import0.ParcelFileDescriptor, long, import4.File, int, long, long);
	@Import void onRestoreFinished();
	@Import import5.Context getBaseContext();
	@Import import6.AssetManager getAssets();
	@Import import7.Resources getResources();
	@Import import8.PackageManager getPackageManager();
	@Import import9.ContentResolver getContentResolver();
	@Import import10.Looper getMainLooper();
	@Import import11.Executor getMainExecutor();
	@Import import5.Context getApplicationContext();
	@Import void setTheme(int);
	@Import import12.Resources_Theme getTheme();
	@Import import13.ClassLoader getClassLoader();
	@Import string getPackageName();
	@Import string getOpPackageName();
	@Import import14.ApplicationInfo getApplicationInfo();
	@Import string getPackageResourcePath();
	@Import string getPackageCodePath();
	@Import import15.SharedPreferences getSharedPreferences(string, int);
	@Import bool moveSharedPreferencesFrom(import5.Context, string);
	@Import bool deleteSharedPreferences(string);
	@Import import16.FileInputStream openFileInput(string);
	@Import import17.FileOutputStream openFileOutput(string, int);
	@Import bool deleteFile(string);
	@Import import4.File getFileStreamPath(string);
	@Import string[] fileList();
	@Import import4.File getDataDir();
	@Import import4.File getFilesDir();
	@Import import4.File getNoBackupFilesDir();
	@Import import4.File getExternalFilesDir(string);
	@Import import4.File[] getExternalFilesDirs(string);
	@Import import4.File getObbDir();
	@Import import4.File[] getObbDirs();
	@Import import4.File getCacheDir();
	@Import import4.File getCodeCacheDir();
	@Import import4.File getExternalCacheDir();
	@Import import4.File[] getExternalCacheDirs();
	@Import import4.File[] getExternalMediaDirs();
	@Import import4.File getDir(string, int);
	@Import import18.SQLiteDatabase openOrCreateDatabase(string, int, import19.SQLiteDatabase_CursorFactory);
	@Import import18.SQLiteDatabase openOrCreateDatabase(string, int, import19.SQLiteDatabase_CursorFactory, import20.DatabaseErrorHandler);
	@Import bool moveDatabaseFrom(import5.Context, string);
	@Import bool deleteDatabase(string);
	@Import import4.File getDatabasePath(string);
	@Import string[] databaseList();
	@Import import21.Drawable getWallpaper();
	@Import import21.Drawable peekWallpaper();
	@Import int getWallpaperDesiredMinimumWidth();
	@Import int getWallpaperDesiredMinimumHeight();
	@Import void setWallpaper(import22.Bitmap);
	@Import void setWallpaper(import23.InputStream);
	@Import void clearWallpaper();
	@Import void startActivity(import24.Intent);
	@Import void startActivity(import24.Intent, import25.Bundle);
	@Import void startActivities(import24.Intent[]);
	@Import void startActivities(import24.Intent, import25.Bundle[]);
	@Import void startIntentSender(import26.IntentSender, import24.Intent, int, int, int);
	@Import void startIntentSender(import26.IntentSender, import24.Intent, int, int, int, import25.Bundle);
	@Import void sendBroadcast(import24.Intent);
	@Import void sendBroadcast(import24.Intent, string);
	@Import void sendOrderedBroadcast(import24.Intent, string);
	@Import void sendOrderedBroadcast(import24.Intent, string, import27.BroadcastReceiver, import28.Handler, int, string, import25.Bundle);
	@Import void sendBroadcastAsUser(import24.Intent, import29.UserHandle);
	@Import void sendBroadcastAsUser(import24.Intent, import29.UserHandle, string);
	@Import void sendOrderedBroadcastAsUser(import24.Intent, import29.UserHandle, string, import27.BroadcastReceiver, import28.Handler, int, string, import25.Bundle);
	@Import void sendStickyBroadcast(import24.Intent);
	@Import void sendStickyOrderedBroadcast(import24.Intent, import27.BroadcastReceiver, import28.Handler, int, string, import25.Bundle);
	@Import void removeStickyBroadcast(import24.Intent);
	@Import void sendStickyBroadcastAsUser(import24.Intent, import29.UserHandle);
	@Import void sendStickyOrderedBroadcastAsUser(import24.Intent, import29.UserHandle, import27.BroadcastReceiver, import28.Handler, int, string, import25.Bundle);
	@Import void removeStickyBroadcastAsUser(import24.Intent, import29.UserHandle);
	@Import import24.Intent registerReceiver(import27.BroadcastReceiver, import30.IntentFilter);
	@Import import24.Intent registerReceiver(import27.BroadcastReceiver, import30.IntentFilter, int);
	@Import import24.Intent registerReceiver(import27.BroadcastReceiver, import30.IntentFilter, string, import28.Handler);
	@Import import24.Intent registerReceiver(import27.BroadcastReceiver, import30.IntentFilter, string, import28.Handler, int);
	@Import void unregisterReceiver(import27.BroadcastReceiver);
	@Import import31.ComponentName startService(import24.Intent);
	@Import import31.ComponentName startForegroundService(import24.Intent);
	@Import bool stopService(import24.Intent);
	@Import bool bindService(import24.Intent, import32.ServiceConnection, int);
	@Import bool bindService(import24.Intent, int, import11.Executor, import32.ServiceConnection);
	@Import bool bindIsolatedService(import24.Intent, int, string, import11.Executor, import32.ServiceConnection);
	@Import void updateServiceGroup(import32.ServiceConnection, int, int);
	@Import void unbindService(import32.ServiceConnection);
	@Import bool startInstrumentation(import31.ComponentName, string, import25.Bundle);
	@Import IJavaObject getSystemService(string);
	@Import string getSystemServiceName(import33.Class);
	@Import int checkPermission(string, int, int);
	@Import int checkCallingPermission(string);
	@Import int checkCallingOrSelfPermission(string);
	@Import int checkSelfPermission(string);
	@Import void enforcePermission(string, int, int, string);
	@Import void enforceCallingPermission(string, string);
	@Import void enforceCallingOrSelfPermission(string, string);
	@Import void grantUriPermission(string, import34.Uri, int);
	@Import void revokeUriPermission(import34.Uri, int);
	@Import void revokeUriPermission(string, import34.Uri, int);
	@Import int checkUriPermission(import34.Uri, int, int, int);
	@Import int checkCallingUriPermission(import34.Uri, int);
	@Import int checkCallingOrSelfUriPermission(import34.Uri, int);
	@Import int checkUriPermission(import34.Uri, string, string, int, int, int);
	@Import void enforceUriPermission(import34.Uri, int, int, int, string);
	@Import void enforceCallingUriPermission(import34.Uri, int, string);
	@Import void enforceCallingOrSelfUriPermission(import34.Uri, int, string);
	@Import void enforceUriPermission(import34.Uri, string, string, int, int, int, string);
	@Import import5.Context createPackageContext(string, int);
	@Import import5.Context createContextForSplit(string);
	@Import import5.Context createConfigurationContext(import35.Configuration);
	@Import import5.Context createDisplayContext(import36.Display);
	@Import bool isRestricted();
	@Import import5.Context createDeviceProtectedStorageContext();
	@Import bool isDeviceProtectedStorage();
	@Import void registerComponentCallbacks(import37.ComponentCallbacks);
	@Import void unregisterComponentCallbacks(import37.ComponentCallbacks);
	@Import import38.CharSequence getText(int);
	@Import string getString(int);
	@Import string getString(int, IJavaObject[]);
	@Import int getColor(int);
	@Import import21.Drawable getDrawable(int);
	@Import import39.ColorStateList getColorStateList(int);
	@Import import40.TypedArray obtainStyledAttributes(int[]);
	@Import import40.TypedArray obtainStyledAttributes(int, int[]);
	@Import import40.TypedArray obtainStyledAttributes(import41.AttributeSet, int[]);
	@Import import40.TypedArray obtainStyledAttributes(import41.AttributeSet, int, int, int[]);
	@Import IJavaObject getSystemService(import33.Class);
	@Import import33.Class getClass();
	@Import int hashCode();
	@Import bool equals(IJavaObject);
	@Import @JavaName("toString") string toString_();
	override string toString() { return toString_(); }
	@Import void notify();
	@Import void notifyAll();
	@Import void wait(long);
	@Import void wait(long, int);
	@Import void wait();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/app/backup/BackupAgent;";
}



