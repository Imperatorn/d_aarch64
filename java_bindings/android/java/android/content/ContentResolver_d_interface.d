module android.java.android.content.ContentResolver_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl, JavaInterfaceMembers;
static import arsd.jni;

import import0 = android.java.android.content.Context_d_interface;
import import22 = android.java.android.content.ContentResolver_MimeTypeInfo_d_interface;
import import18 = android.java.android.content.SyncRequest_d_interface;
import import25 = android.java.java.lang.Class_d_interface;
import import12 = android.java.android.content.ContentValues_d_interface;
import import9 = android.java.java.io.OutputStream_d_interface;
import import24 = android.java.android.util.Size_d_interface;
import import7 = android.java.android.os.Bundle_d_interface;
import import13 = android.java.android.content.ContentProviderResult_d_interface;
import import21 = android.java.android.content.SyncStatusObserver_d_interface;
import import15 = android.java.android.database.ContentObserver_d_interface;
import import5 = android.java.android.database.Cursor_d_interface;
import import1 = android.java.android.content.ContentResolver_d_interface;
import import8 = android.java.java.io.InputStream_d_interface;
import import6 = android.java.android.os.CancellationSignal_d_interface;
import import3 = android.java.android.content.ContentProviderClient_d_interface;
import import2 = android.java.android.content.ContentProvider_d_interface;
import import10 = android.java.android.os.ParcelFileDescriptor_d_interface;
import import23 = android.java.android.graphics.Bitmap_d_interface;
import import19 = android.java.android.content.SyncAdapterType_d_interface;
import import4 = android.java.android.net.Uri_d_interface;
import import17 = android.java.android.accounts.Account_d_interface;
import import20 = android.java.android.content.SyncInfo_d_interface;
import import14 = android.java.java.util.ArrayList_d_interface;
import import16 = android.java.java.util.List_d_interface;
import import11 = android.java.android.content.res.AssetFileDescriptor_d_interface;

final class ContentResolver : IJavaObject {
	static immutable string[] _d_canCastTo = [
	];
	@Import this(import0.Context);
	@Import static import1.ContentResolver wrap(import2.ContentProvider);
	@Import static import1.ContentResolver wrap(import3.ContentProviderClient);
	@Import string getType(import4.Uri);
	@Import string[] getStreamTypes(import4.Uri, string);
	@Import import5.Cursor query(import4.Uri, string, string, string, string[][]);
	@Import import5.Cursor query(import4.Uri, string, string, string, string, import6.CancellationSignal[][]);
	@Import import5.Cursor query(import4.Uri, string, import7.Bundle, import6.CancellationSignal[]);
	@Import import4.Uri canonicalize(import4.Uri);
	@Import import4.Uri uncanonicalize(import4.Uri);
	@Import bool refresh(import4.Uri, import7.Bundle, import6.CancellationSignal);
	@Import import8.InputStream openInputStream(import4.Uri);
	@Import import9.OutputStream openOutputStream(import4.Uri);
	@Import import9.OutputStream openOutputStream(import4.Uri, string);
	@Import import10.ParcelFileDescriptor openFile(import4.Uri, string, import6.CancellationSignal);
	@Import import10.ParcelFileDescriptor openFileDescriptor(import4.Uri, string);
	@Import import10.ParcelFileDescriptor openFileDescriptor(import4.Uri, string, import6.CancellationSignal);
	@Import import11.AssetFileDescriptor openAssetFile(import4.Uri, string, import6.CancellationSignal);
	@Import import11.AssetFileDescriptor openAssetFileDescriptor(import4.Uri, string);
	@Import import11.AssetFileDescriptor openAssetFileDescriptor(import4.Uri, string, import6.CancellationSignal);
	@Import import11.AssetFileDescriptor openTypedAssetFile(import4.Uri, string, import7.Bundle, import6.CancellationSignal);
	@Import import11.AssetFileDescriptor openTypedAssetFileDescriptor(import4.Uri, string, import7.Bundle);
	@Import import11.AssetFileDescriptor openTypedAssetFileDescriptor(import4.Uri, string, import7.Bundle, import6.CancellationSignal);
	@Import import4.Uri insert(import4.Uri, import12.ContentValues);
	@Import import13.ContentProviderResult[] applyBatch(string, import14.ArrayList);
	@Import int bulkInsert(import4.Uri, import12.ContentValues[]);
	@Import @JavaName("delete") int delete_(import4.Uri, string, string[]);
	@Import int update(import4.Uri, import12.ContentValues, string, string[]);
	@Import import7.Bundle call(import4.Uri, string, string, import7.Bundle);
	@Import import7.Bundle call(string, string, string, import7.Bundle);
	@Import import3.ContentProviderClient acquireContentProviderClient(import4.Uri);
	@Import import3.ContentProviderClient acquireContentProviderClient(string);
	@Import import3.ContentProviderClient acquireUnstableContentProviderClient(import4.Uri);
	@Import import3.ContentProviderClient acquireUnstableContentProviderClient(string);
	@Import void registerContentObserver(import4.Uri, bool, import15.ContentObserver);
	@Import void unregisterContentObserver(import15.ContentObserver);
	@Import void notifyChange(import4.Uri, import15.ContentObserver);
	@Import void notifyChange(import4.Uri, import15.ContentObserver, bool);
	@Import void notifyChange(import4.Uri, import15.ContentObserver, int);
	@Import void takePersistableUriPermission(import4.Uri, int);
	@Import void releasePersistableUriPermission(import4.Uri, int);
	@Import import16.List getPersistedUriPermissions();
	@Import import16.List getOutgoingPersistedUriPermissions();
	@Import void startSync(import4.Uri, import7.Bundle);
	@Import static void requestSync(import17.Account, string, import7.Bundle);
	@Import static void requestSync(import18.SyncRequest);
	@Import static void validateSyncExtrasBundle(import7.Bundle);
	@Import void cancelSync(import4.Uri);
	@Import static void cancelSync(import17.Account, string);
	@Import static import19.SyncAdapterType[] getSyncAdapterTypes();
	@Import static bool getSyncAutomatically(import17.Account, string);
	@Import static void setSyncAutomatically(import17.Account, string, bool);
	@Import static void addPeriodicSync(import17.Account, string, import7.Bundle, long);
	@Import static void removePeriodicSync(import17.Account, string, import7.Bundle);
	@Import static void cancelSync(import18.SyncRequest);
	@Import static import16.List getPeriodicSyncs(import17.Account, string);
	@Import static int getIsSyncable(import17.Account, string);
	@Import static void setIsSyncable(import17.Account, string, int);
	@Import static bool getMasterSyncAutomatically();
	@Import static void setMasterSyncAutomatically(bool);
	@Import static bool isSyncActive(import17.Account, string);
	@Import static import20.SyncInfo getCurrentSync();
	@Import static import16.List getCurrentSyncs();
	@Import static bool isSyncPending(import17.Account, string);
	@Import static IJavaObject addStatusChangeListener(int, import21.SyncStatusObserver);
	@Import static void removeStatusChangeListener(IJavaObject);
	@Import import22.ContentResolver_MimeTypeInfo getTypeInfo(string);
	@Import import23.Bitmap loadThumbnail(import4.Uri, import24.Size, import6.CancellationSignal);
	@Import import25.Class getClass();
	@Import int hashCode();
	@Import bool equals(IJavaObject);
	@Import @JavaName("toString") string toString_();
	override string toString() { return toString_(); }
	@Import void notify();
	@Import void notifyAll();
	@Import void wait(long);
	@Import void wait(long, int);
	@Import void wait();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/content/ContentResolver;";
}



