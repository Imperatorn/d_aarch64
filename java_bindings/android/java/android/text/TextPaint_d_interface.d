module android.java.android.text.TextPaint_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl, JavaInterfaceMembers;
static import arsd.jni;

import import1 = android.java.android.text.TextPaint_d_interface;
import import6 = android.java.android.graphics.Shader_d_interface;
import import17 = android.java.android.graphics.Paint_FontMetricsInt_d_interface;
import import3 = android.java.android.graphics.Paint_Cap_d_interface;
import import2 = android.java.android.graphics.Paint_Style_d_interface;
import import9 = android.java.android.graphics.BlendMode_d_interface;
import import12 = android.java.android.graphics.Typeface_d_interface;
import import14 = android.java.java.util.Locale_d_interface;
import import7 = android.java.android.graphics.ColorFilter_d_interface;
import import16 = android.java.android.graphics.Paint_FontMetrics_d_interface;
import import18 = android.java.java.lang.CharSequence_d_interface;
import import5 = android.java.android.graphics.Path_d_interface;
import import15 = android.java.android.os.LocaleList_d_interface;
import import19 = android.java.android.graphics.Rect_d_interface;
import import11 = android.java.android.graphics.MaskFilter_d_interface;
import import0 = android.java.android.graphics.Paint_d_interface;
import import13 = android.java.android.graphics.Paint_Align_d_interface;
import import4 = android.java.android.graphics.Paint_Join_d_interface;
import import20 = android.java.java.lang.Class_d_interface;
import import10 = android.java.android.graphics.PathEffect_d_interface;
import import8 = android.java.android.graphics.Xfermode_d_interface;

final class TextPaint : IJavaObject {
	static immutable string[] _d_canCastTo = [
	];
	@Import this(arsd.jni.Default);
	@Import this(int);
	@Import this(import0.Paint);
	@Import void set(import1.TextPaint);
	@Import float getUnderlineThickness();
	@Import void reset();
	@Import void set(import0.Paint);
	@Import int getFlags();
	@Import void setFlags(int);
	@Import int getHinting();
	@Import void setHinting(int);
	@Import bool isAntiAlias();
	@Import void setAntiAlias(bool);
	@Import bool isDither();
	@Import void setDither(bool);
	@Import bool isLinearText();
	@Import void setLinearText(bool);
	@Import bool isSubpixelText();
	@Import void setSubpixelText(bool);
	@Import bool isUnderlineText();
	@Import float getUnderlinePosition();
	@Import void setUnderlineText(bool);
	@Import bool isStrikeThruText();
	@Import float getStrikeThruPosition();
	@Import float getStrikeThruThickness();
	@Import void setStrikeThruText(bool);
	@Import bool isFakeBoldText();
	@Import void setFakeBoldText(bool);
	@Import bool isFilterBitmap();
	@Import void setFilterBitmap(bool);
	@Import import2.Paint_Style getStyle();
	@Import void setStyle(import2.Paint_Style);
	@Import int getColor();
	@Import long getColorLong();
	@Import void setColor(int);
	@Import void setColor(long);
	@Import int getAlpha();
	@Import void setAlpha(int);
	@Import void setARGB(int, int, int, int);
	@Import float getStrokeWidth();
	@Import void setStrokeWidth(float);
	@Import float getStrokeMiter();
	@Import void setStrokeMiter(float);
	@Import import3.Paint_Cap getStrokeCap();
	@Import void setStrokeCap(import3.Paint_Cap);
	@Import import4.Paint_Join getStrokeJoin();
	@Import void setStrokeJoin(import4.Paint_Join);
	@Import bool getFillPath(import5.Path, import5.Path);
	@Import import6.Shader getShader();
	@Import import6.Shader setShader(import6.Shader);
	@Import import7.ColorFilter getColorFilter();
	@Import import7.ColorFilter setColorFilter(import7.ColorFilter);
	@Import import8.Xfermode getXfermode();
	@Import import9.BlendMode getBlendMode();
	@Import import8.Xfermode setXfermode(import8.Xfermode);
	@Import void setBlendMode(import9.BlendMode);
	@Import import10.PathEffect getPathEffect();
	@Import import10.PathEffect setPathEffect(import10.PathEffect);
	@Import import11.MaskFilter getMaskFilter();
	@Import import11.MaskFilter setMaskFilter(import11.MaskFilter);
	@Import import12.Typeface getTypeface();
	@Import import12.Typeface setTypeface(import12.Typeface);
	@Import void setShadowLayer(float, float, float, int);
	@Import void setShadowLayer(float, float, float, long);
	@Import void clearShadowLayer();
	@Import float getShadowLayerRadius();
	@Import float getShadowLayerDx();
	@Import float getShadowLayerDy();
	@Import int getShadowLayerColor();
	@Import long getShadowLayerColorLong();
	@Import import13.Paint_Align getTextAlign();
	@Import void setTextAlign(import13.Paint_Align);
	@Import import14.Locale getTextLocale();
	@Import import15.LocaleList getTextLocales();
	@Import void setTextLocale(import14.Locale);
	@Import void setTextLocales(import15.LocaleList);
	@Import bool isElegantTextHeight();
	@Import void setElegantTextHeight(bool);
	@Import float getTextSize();
	@Import void setTextSize(float);
	@Import float getTextScaleX();
	@Import void setTextScaleX(float);
	@Import float getTextSkewX();
	@Import void setTextSkewX(float);
	@Import float getLetterSpacing();
	@Import void setLetterSpacing(float);
	@Import float getWordSpacing();
	@Import void setWordSpacing(float);
	@Import string getFontFeatureSettings();
	@Import void setFontFeatureSettings(string);
	@Import string getFontVariationSettings();
	@Import bool setFontVariationSettings(string);
	@Import int getStartHyphenEdit();
	@Import int getEndHyphenEdit();
	@Import void setStartHyphenEdit(int);
	@Import void setEndHyphenEdit(int);
	@Import float ascent();
	@Import float descent();
	@Import float getFontMetrics(import16.Paint_FontMetrics);
	@Import import16.Paint_FontMetrics getFontMetrics();
	@Import int getFontMetricsInt(import17.Paint_FontMetricsInt);
	@Import import17.Paint_FontMetricsInt getFontMetricsInt();
	@Import float getFontSpacing();
	@Import float measureText(wchar, int, int[]);
	@Import float measureText(string, int, int);
	@Import float measureText(string);
	@Import float measureText(import18.CharSequence, int, int);
	@Import int breakText(wchar, int, int, float, float[][]);
	@Import int breakText(import18.CharSequence, int, int, bool, float, float[]);
	@Import int breakText(string, bool, float, float[]);
	@Import int getTextWidths(wchar, int, int, float[][]);
	@Import int getTextWidths(import18.CharSequence, int, int, float[]);
	@Import int getTextWidths(string, int, int, float[]);
	@Import int getTextWidths(string, float[]);
	@Import float getTextRunAdvances(wchar, int, int, int, int, bool, float, int[][]);
	@Import int getTextRunCursor(wchar, int, int, bool, int, int[]);
	@Import int getTextRunCursor(import18.CharSequence, int, int, bool, int, int);
	@Import void getTextPath(wchar, int, int, float, float, import5.Path[]);
	@Import void getTextPath(string, int, int, float, float, import5.Path);
	@Import void getTextBounds(string, int, int, import19.Rect);
	@Import void getTextBounds(import18.CharSequence, int, int, import19.Rect);
	@Import void getTextBounds(wchar, int, int, import19.Rect[]);
	@Import bool hasGlyph(string);
	@Import float getRunAdvance(wchar, int, int, int, int, bool, int[]);
	@Import float getRunAdvance(import18.CharSequence, int, int, int, int, bool, int);
	@Import int getOffsetForAdvance(wchar, int, int, int, int, bool, float[]);
	@Import int getOffsetForAdvance(import18.CharSequence, int, int, int, int, bool, float);
	@Import bool equalsForTextMeasurement(import0.Paint);
	@Import import20.Class getClass();
	@Import int hashCode();
	@Import bool equals(IJavaObject);
	@Import @JavaName("toString") string toString_();
	override string toString() { return toString_(); }
	@Import void notify();
	@Import void notifyAll();
	@Import void wait(long);
	@Import void wait(long, int);
	@Import void wait();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/text/TextPaint;";
}



