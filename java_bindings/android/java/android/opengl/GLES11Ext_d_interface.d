module android.java.android.opengl.GLES11Ext_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl, JavaInterfaceMembers;
static import arsd.jni;

import import3 = android.java.java.nio.Buffer_d_interface;
import import4 = android.java.java.lang.Class_d_interface;
import import1 = android.java.java.nio.IntBuffer_d_interface;
import import2 = android.java.java.nio.FloatBuffer_d_interface;
import import0 = android.java.java.nio.ShortBuffer_d_interface;

final class GLES11Ext : IJavaObject {
	static immutable string[] _d_canCastTo = [
	];
	@Import this(arsd.jni.Default);
	@Import static void glBlendEquationSeparateOES(int, int);
	@Import static void glBlendFuncSeparateOES(int, int, int, int);
	@Import static void glBlendEquationOES(int);
	@Import static void glDrawTexsOES(short, short, short, short, short);
	@Import static void glDrawTexiOES(int, int, int, int, int);
	@Import static void glDrawTexxOES(int, int, int, int, int);
	@Import static void glDrawTexsvOES(short, int[]);
	@Import static void glDrawTexsvOES(import0.ShortBuffer);
	@Import static void glDrawTexivOES(int, int[]);
	@Import static void glDrawTexivOES(import1.IntBuffer);
	@Import static void glDrawTexxvOES(int, int[]);
	@Import static void glDrawTexxvOES(import1.IntBuffer);
	@Import static void glDrawTexfOES(float, float, float, float, float);
	@Import static void glDrawTexfvOES(float, int[]);
	@Import static void glDrawTexfvOES(import2.FloatBuffer);
	@Import static void glEGLImageTargetTexture2DOES(int, import3.Buffer);
	@Import static void glEGLImageTargetRenderbufferStorageOES(int, import3.Buffer);
	@Import static void glAlphaFuncxOES(int, int);
	@Import static void glClearColorxOES(int, int, int, int);
	@Import static void glClearDepthxOES(int);
	@Import static void glClipPlanexOES(int, int, int[]);
	@Import static void glClipPlanexOES(int, import1.IntBuffer);
	@Import static void glColor4xOES(int, int, int, int);
	@Import static void glDepthRangexOES(int, int);
	@Import static void glFogxOES(int, int);
	@Import static void glFogxvOES(int, int, int[]);
	@Import static void glFogxvOES(int, import1.IntBuffer);
	@Import static void glFrustumxOES(int, int, int, int, int, int);
	@Import static void glGetClipPlanexOES(int, int, int[]);
	@Import static void glGetClipPlanexOES(int, import1.IntBuffer);
	@Import static void glGetFixedvOES(int, int, int[]);
	@Import static void glGetFixedvOES(int, import1.IntBuffer);
	@Import static void glGetLightxvOES(int, int, int, int[]);
	@Import static void glGetLightxvOES(int, int, import1.IntBuffer);
	@Import static void glGetMaterialxvOES(int, int, int, int[]);
	@Import static void glGetMaterialxvOES(int, int, import1.IntBuffer);
	@Import static void glGetTexEnvxvOES(int, int, int, int[]);
	@Import static void glGetTexEnvxvOES(int, int, import1.IntBuffer);
	@Import static void glGetTexParameterxvOES(int, int, int, int[]);
	@Import static void glGetTexParameterxvOES(int, int, import1.IntBuffer);
	@Import static void glLightModelxOES(int, int);
	@Import static void glLightModelxvOES(int, int, int[]);
	@Import static void glLightModelxvOES(int, import1.IntBuffer);
	@Import static void glLightxOES(int, int, int);
	@Import static void glLightxvOES(int, int, int, int[]);
	@Import static void glLightxvOES(int, int, import1.IntBuffer);
	@Import static void glLineWidthxOES(int);
	@Import static void glLoadMatrixxOES(int, int[]);
	@Import static void glLoadMatrixxOES(import1.IntBuffer);
	@Import static void glMaterialxOES(int, int, int);
	@Import static void glMaterialxvOES(int, int, int, int[]);
	@Import static void glMaterialxvOES(int, int, import1.IntBuffer);
	@Import static void glMultMatrixxOES(int, int[]);
	@Import static void glMultMatrixxOES(import1.IntBuffer);
	@Import static void glMultiTexCoord4xOES(int, int, int, int, int);
	@Import static void glNormal3xOES(int, int, int);
	@Import static void glOrthoxOES(int, int, int, int, int, int);
	@Import static void glPointParameterxOES(int, int);
	@Import static void glPointParameterxvOES(int, int, int[]);
	@Import static void glPointParameterxvOES(int, import1.IntBuffer);
	@Import static void glPointSizexOES(int);
	@Import static void glPolygonOffsetxOES(int, int);
	@Import static void glRotatexOES(int, int, int, int);
	@Import static void glSampleCoveragexOES(int, bool);
	@Import static void glScalexOES(int, int, int);
	@Import static void glTexEnvxOES(int, int, int);
	@Import static void glTexEnvxvOES(int, int, int, int[]);
	@Import static void glTexEnvxvOES(int, int, import1.IntBuffer);
	@Import static void glTexParameterxOES(int, int, int);
	@Import static void glTexParameterxvOES(int, int, int, int[]);
	@Import static void glTexParameterxvOES(int, int, import1.IntBuffer);
	@Import static void glTranslatexOES(int, int, int);
	@Import static bool glIsRenderbufferOES(int);
	@Import static void glBindRenderbufferOES(int, int);
	@Import static void glDeleteRenderbuffersOES(int, int, int[]);
	@Import static void glDeleteRenderbuffersOES(int, import1.IntBuffer);
	@Import static void glGenRenderbuffersOES(int, int, int[]);
	@Import static void glGenRenderbuffersOES(int, import1.IntBuffer);
	@Import static void glRenderbufferStorageOES(int, int, int, int);
	@Import static void glGetRenderbufferParameterivOES(int, int, int, int[]);
	@Import static void glGetRenderbufferParameterivOES(int, int, import1.IntBuffer);
	@Import static bool glIsFramebufferOES(int);
	@Import static void glBindFramebufferOES(int, int);
	@Import static void glDeleteFramebuffersOES(int, int, int[]);
	@Import static void glDeleteFramebuffersOES(int, import1.IntBuffer);
	@Import static void glGenFramebuffersOES(int, int, int[]);
	@Import static void glGenFramebuffersOES(int, import1.IntBuffer);
	@Import static int glCheckFramebufferStatusOES(int);
	@Import static void glFramebufferRenderbufferOES(int, int, int, int);
	@Import static void glFramebufferTexture2DOES(int, int, int, int, int);
	@Import static void glGetFramebufferAttachmentParameterivOES(int, int, int, int, int[]);
	@Import static void glGetFramebufferAttachmentParameterivOES(int, int, int, import1.IntBuffer);
	@Import static void glGenerateMipmapOES(int);
	@Import static void glCurrentPaletteMatrixOES(int);
	@Import static void glLoadPaletteFromModelViewMatrixOES();
	@Import static void glMatrixIndexPointerOES(int, int, int, import3.Buffer);
	@Import static void glWeightPointerOES(int, int, int, import3.Buffer);
	@Import static void glDepthRangefOES(float, float);
	@Import static void glFrustumfOES(float, float, float, float, float, float);
	@Import static void glOrthofOES(float, float, float, float, float, float);
	@Import static void glClipPlanefOES(int, float, int[]);
	@Import static void glClipPlanefOES(int, import2.FloatBuffer);
	@Import static void glGetClipPlanefOES(int, float, int[]);
	@Import static void glGetClipPlanefOES(int, import2.FloatBuffer);
	@Import static void glClearDepthfOES(float);
	@Import static void glTexGenfOES(int, int, float);
	@Import static void glTexGenfvOES(int, int, float, int[]);
	@Import static void glTexGenfvOES(int, int, import2.FloatBuffer);
	@Import static void glTexGeniOES(int, int, int);
	@Import static void glTexGenivOES(int, int, int, int[]);
	@Import static void glTexGenivOES(int, int, import1.IntBuffer);
	@Import static void glTexGenxOES(int, int, int);
	@Import static void glTexGenxvOES(int, int, int, int[]);
	@Import static void glTexGenxvOES(int, int, import1.IntBuffer);
	@Import static void glGetTexGenfvOES(int, int, float, int[]);
	@Import static void glGetTexGenfvOES(int, int, import2.FloatBuffer);
	@Import static void glGetTexGenivOES(int, int, int, int[]);
	@Import static void glGetTexGenivOES(int, int, import1.IntBuffer);
	@Import static void glGetTexGenxvOES(int, int, int, int[]);
	@Import static void glGetTexGenxvOES(int, int, import1.IntBuffer);
	@Import import4.Class getClass();
	@Import int hashCode();
	@Import bool equals(IJavaObject);
	@Import @JavaName("toString") string toString_();
	override string toString() { return arsd.jni.javaObjectToString(this); }
	@Import void notify();
	@Import void notifyAll();
	@Import void wait(long);
	@Import void wait(long, int);
	@Import void wait();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/opengl/GLES11Ext;";
}



