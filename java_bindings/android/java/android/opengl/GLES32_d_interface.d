module android.java.android.opengl.GLES32_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl;

import import3 = android.java.java.nio.Buffer_d_interface;
import import0 = android.java.java.nio.IntBuffer_d_interface;
import import1 = android.java.android.opengl.GLES32_DebugProc_d_interface;
import import4 = android.java.java.nio.FloatBuffer_d_interface;
import import2 = android.java.java.nio.ByteBuffer_d_interface;

final class GLES32 : IJavaObject {
	@Import static void glBlendBarrier();
	@Import static void glCopyImageSubData(int, int, int, int, int, int, int, int, int, int, int, int, int, int, int);
	@Import static void glDebugMessageControl(int, int, int, int, int, int, bool[]);
	@Import static void glDebugMessageControl(int, int, int, int, import0.IntBuffer, bool);
	@Import static void glDebugMessageInsert(int, int, int, int, int, string);
	@Import static void glDebugMessageCallback(import1.GLES32_DebugProc);
	@Import static int glGetDebugMessageLog(int, int, int, int, int, int, int, int, int, int, int, int, byte, int[][][][][][]);
	@Import static int glGetDebugMessageLog(int, import0.IntBuffer, import0.IntBuffer, import0.IntBuffer, import0.IntBuffer, import0.IntBuffer, import2.ByteBuffer);
	@Import static string[] glGetDebugMessageLog(int, int, int, int, int, int, int, int, int[][][][]);
	@Import static string[] glGetDebugMessageLog(int, import0.IntBuffer, import0.IntBuffer, import0.IntBuffer, import0.IntBuffer);
	@Import static void glPushDebugGroup(int, int, int, string);
	@Import static void glPopDebugGroup();
	@Import static void glObjectLabel(int, int, int, string);
	@Import static string glGetObjectLabel(int, int);
	@Import static void glObjectPtrLabel(long, string);
	@Import static string glGetObjectPtrLabel(long);
	@Import static long glGetPointerv(int);
	@Import static void glEnablei(int, int);
	@Import static void glDisablei(int, int);
	@Import static void glBlendEquationi(int, int);
	@Import static void glBlendEquationSeparatei(int, int, int);
	@Import static void glBlendFunci(int, int, int);
	@Import static void glBlendFuncSeparatei(int, int, int, int, int);
	@Import static void glColorMaski(int, bool, bool, bool, bool);
	@Import static bool glIsEnabledi(int, int);
	@Import static void glDrawElementsBaseVertex(int, int, int, import3.Buffer, int);
	@Import static void glDrawRangeElementsBaseVertex(int, int, int, int, int, import3.Buffer, int);
	@Import static void glDrawElementsInstancedBaseVertex(int, int, int, import3.Buffer, int, int);
	@Import static void glDrawElementsInstancedBaseVertex(int, int, int, int, int, int);
	@Import static void glFramebufferTexture(int, int, int, int);
	@Import static void glPrimitiveBoundingBox(float, float, float, float, float, float, float, float);
	@Import static int glGetGraphicsResetStatus();
	@Import static void glReadnPixels(int, int, int, int, int, int, int, import3.Buffer);
	@Import static void glGetnUniformfv(int, int, int, float, int[]);
	@Import static void glGetnUniformfv(int, int, int, import4.FloatBuffer);
	@Import static void glGetnUniformiv(int, int, int, int, int[]);
	@Import static void glGetnUniformiv(int, int, int, import0.IntBuffer);
	@Import static void glGetnUniformuiv(int, int, int, int, int[]);
	@Import static void glGetnUniformuiv(int, int, int, import0.IntBuffer);
	@Import static void glMinSampleShading(float);
	@Import static void glPatchParameteri(int, int);
	@Import static void glTexParameterIiv(int, int, int, int[]);
	@Import static void glTexParameterIiv(int, int, import0.IntBuffer);
	@Import static void glTexParameterIuiv(int, int, int, int[]);
	@Import static void glTexParameterIuiv(int, int, import0.IntBuffer);
	@Import static void glGetTexParameterIiv(int, int, int, int[]);
	@Import static void glGetTexParameterIiv(int, int, import0.IntBuffer);
	@Import static void glGetTexParameterIuiv(int, int, int, int[]);
	@Import static void glGetTexParameterIuiv(int, int, import0.IntBuffer);
	@Import static void glSamplerParameterIiv(int, int, int, int[]);
	@Import static void glSamplerParameterIiv(int, int, import0.IntBuffer);
	@Import static void glSamplerParameterIuiv(int, int, int, int[]);
	@Import static void glSamplerParameterIuiv(int, int, import0.IntBuffer);
	@Import static void glGetSamplerParameterIiv(int, int, int, int[]);
	@Import static void glGetSamplerParameterIiv(int, int, import0.IntBuffer);
	@Import static void glGetSamplerParameterIuiv(int, int, int, int[]);
	@Import static void glGetSamplerParameterIuiv(int, int, import0.IntBuffer);
	@Import static void glTexBuffer(int, int, int);
	@Import static void glTexBufferRange(int, int, int, int, int);
	@Import static void glTexStorage3DMultisample(int, int, int, int, int, int, bool);
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/opengl/GLES32";
}
