module android.java.android.media.tv.TvView_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl, JavaInterfaceMembers;
static import arsd.jni;

import import56 = android.java.android.view.contentcapture.ContentCaptureSession_d_interface;
import import43 = android.java.android.view.View_OnClickListener_d_interface;
import import20 = android.java.java.util.Collection_d_interface;
import import59 = android.java.android.view.View_OnApplyWindowInsetsListener_d_interface;
import import58 = android.java.android.view.accessibility.AccessibilityNodeProvider_d_interface;
import import53 = android.java.android.view.autofill.AutofillValue_d_interface;
import import87 = android.java.android.view.View_OnUnhandledKeyEventListener_d_interface;
import import49 = android.java.android.view.View_OnGenericMotionListener_d_interface;
import import88 = android.java.java.lang.Class_d_interface;
import import48 = android.java.android.view.View_OnTouchListener_d_interface;
import import51 = android.java.android.view.View_OnDragListener_d_interface;
import import76 = android.java.android.content.res.ColorStateList_d_interface;
import import30 = android.java.android.view.ViewParent_d_interface;
import import24 = android.java.android.view.PointerIcon_d_interface;
import import71 = android.java.android.view.WindowId_d_interface;
import import18 = android.java.android.view.accessibility.AccessibilityEvent_d_interface;
import import7 = android.java.android.media.tv.TvView_TimeShiftPositionCallback_d_interface;
import import64 = android.java.android.view.TouchDelegate_d_interface;
import import66 = android.java.android.animation.StateListAnimator_d_interface;
import import17 = android.java.android.graphics.Rect_d_interface;
import import26 = android.java.android.view.ViewGroupOverlay_d_interface;
import import79 = android.java.android.view.ViewTreeObserver_d_interface;
import import13 = android.java.android.graphics.Canvas_d_interface;
import import68 = android.java.android.os.Handler_d_interface;
import import14 = android.java.android.view.View_d_interface;
import import28 = android.java.android.view.ViewGroup_OnHierarchyChangeListener_d_interface;
import import29 = android.java.android.animation.LayoutTransition_d_interface;
import import32 = android.java.android.view.animation.LayoutAnimationController_d_interface;
import import1 = android.java.android.util.AttributeSet_d_interface;
import import38 = android.java.android.graphics.drawable.Drawable_d_interface;
import import10 = android.java.android.view.KeyEvent_d_interface;
import import47 = android.java.android.view.View_OnKeyListener_d_interface;
import import46 = android.java.android.view.View_OnCreateContextMenuListener_d_interface;
import import50 = android.java.android.view.View_OnHoverListener_d_interface;
import import4 = android.java.android.os.Bundle_d_interface;
import import55 = android.java.android.view.autofill.AutofillId_d_interface;
import import57 = android.java.android.view.View_AccessibilityDelegate_d_interface;
import import86 = android.java.android.view.ViewPropertyAnimator_d_interface;
import import36 = android.java.java.util.Map_d_interface;
import import35 = android.java.android.view.ViewOverlay_d_interface;
import import69 = android.java.java.lang.Runnable_d_interface;
import import54 = android.java.android.util.SparseArray_d_interface;
import import73 = android.java.android.graphics.Paint_d_interface;
import import67 = android.java.android.view.ViewOutlineProvider_d_interface;
import import82 = android.java.android.content.ClipData_d_interface;
import import70 = android.java.android.os.IBinder_d_interface;
import import65 = android.java.android.graphics.Matrix_d_interface;
import import83 = android.java.android.view.View_DragShadowBuilder_d_interface;
import import60 = android.java.android.view.KeyEvent_DispatcherState_d_interface;
import import63 = android.java.android.view.ContextMenu_d_interface;
import import84 = android.java.android.view.ViewGroup_d_interface;
import import15 = android.java.android.view.ActionMode_d_interface;
import import6 = android.java.android.media.PlaybackParams_d_interface;
import import62 = android.java.android.view.inputmethod.EditorInfo_d_interface;
import import23 = android.java.android.view.DragEvent_d_interface;
import import16 = android.java.android.view.ActionMode_Callback_d_interface;
import import2 = android.java.android.media.tv.TvView_TvInputCallback_d_interface;
import import45 = android.java.android.view.View_OnContextClickListener_d_interface;
import import22 = android.java.android.content.res.Configuration_d_interface;
import import33 = android.java.android.view.WindowInsets_d_interface;
import import27 = android.java.android.view.ViewGroup_LayoutParams_d_interface;
import import80 = android.java.android.view.animation.Animation_d_interface;
import import85 = android.java.android.view.View_OnCapturedPointerListener_d_interface;
import import44 = android.java.android.view.View_OnLongClickListener_d_interface;
import import8 = android.java.android.view.InputEvent_d_interface;
import import81 = android.java.android.view.View_OnSystemUiVisibilityChangeListener_d_interface;
import import31 = android.java.android.graphics.Point_d_interface;
import import74 = android.java.android.graphics.Bitmap_d_interface;
import import21 = android.java.java.lang.CharSequence_d_interface;
import import52 = android.java.android.view.accessibility.AccessibilityNodeInfo_d_interface;
import import3 = android.java.android.net.Uri_d_interface;
import import78 = android.java.android.graphics.BlendMode_d_interface;
import import41 = android.java.android.view.View_OnLayoutChangeListener_d_interface;
import import75 = android.java.android.content.res.Resources_d_interface;
import import77 = android.java.android.graphics.PorterDuff_Mode_d_interface;
import import9 = android.java.android.media.tv.TvView_OnUnhandledInputEventListener_d_interface;
import import39 = android.java.android.view.View_OnScrollChangeListener_d_interface;
import import42 = android.java.android.view.View_OnAttachStateChangeListener_d_interface;
import import61 = android.java.android.view.inputmethod.InputConnection_d_interface;
import import34 = android.java.android.view.animation.Animation_AnimationListener_d_interface;
import import72 = android.java.android.view.Display_d_interface;
import import11 = android.java.android.view.MotionEvent_d_interface;
import import37 = android.java.android.content.res.TypedArray_d_interface;
import import19 = android.java.java.util.ArrayList_d_interface;
import import25 = android.java.android.view.ViewStructure_d_interface;
import import5 = android.java.java.util.List_d_interface;
import import40 = android.java.android.view.View_OnFocusChangeListener_d_interface;
import import12 = android.java.android.graphics.Region_d_interface;
import import0 = android.java.android.content.Context_d_interface;

final class TvView : IJavaObject {
	static immutable string[] _d_canCastTo = [
	];
	@Import this(import0.Context);
	@Import this(import0.Context, import1.AttributeSet);
	@Import this(import0.Context, import1.AttributeSet, int);
	@Import void setCallback(import2.TvView_TvInputCallback);
	@Import void setZOrderMediaOverlay(bool);
	@Import void setZOrderOnTop(bool);
	@Import void setStreamVolume(float);
	@Import void tune(string, import3.Uri);
	@Import void tune(string, import3.Uri, import4.Bundle);
	@Import void reset();
	@Import void setCaptionEnabled(bool);
	@Import void selectTrack(int, string);
	@Import import5.List getTracks(int);
	@Import string getSelectedTrack(int);
	@Import void timeShiftPlay(string, import3.Uri);
	@Import void timeShiftPause();
	@Import void timeShiftResume();
	@Import void timeShiftSeekTo(long);
	@Import void timeShiftSetPlaybackParams(import6.PlaybackParams);
	@Import void setTimeShiftPositionCallback(import7.TvView_TimeShiftPositionCallback);
	@Import void sendAppPrivateCommand(string, import4.Bundle);
	@Import bool dispatchUnhandledInputEvent(import8.InputEvent);
	@Import bool onUnhandledInputEvent(import8.InputEvent);
	@Import void setOnUnhandledInputEventListener(import9.TvView_OnUnhandledInputEventListener);
	@Import bool dispatchKeyEvent(import10.KeyEvent);
	@Import bool dispatchTouchEvent(import11.MotionEvent);
	@Import bool dispatchTrackballEvent(import11.MotionEvent);
	@Import bool dispatchGenericMotionEvent(import11.MotionEvent);
	@Import void dispatchWindowFocusChanged(bool);
	@Import bool gatherTransparentRegion(import12.Region);
	@Import void draw(import13.Canvas);
	@Import int getDescendantFocusability();
	@Import void setDescendantFocusability(int);
	@Import void requestChildFocus(import14.View, import14.View);
	@Import void focusableViewAvailable(import14.View);
	@Import bool showContextMenuForChild(import14.View);
	@Import bool showContextMenuForChild(import14.View, float, float);
	@Import import15.ActionMode startActionModeForChild(import14.View, import16.ActionMode_Callback);
	@Import import15.ActionMode startActionModeForChild(import14.View, import16.ActionMode_Callback, int);
	@Import import14.View focusSearch(import14.View, int);
	@Import bool requestChildRectangleOnScreen(import14.View, import17.Rect, bool);
	@Import bool requestSendAccessibilityEvent(import14.View, import18.AccessibilityEvent);
	@Import bool onRequestSendAccessibilityEvent(import14.View, import18.AccessibilityEvent);
	@Import void childHasTransientStateChanged(import14.View, bool);
	@Import bool hasTransientState();
	@Import bool dispatchUnhandledMove(import14.View, int);
	@Import void clearChildFocus(import14.View);
	@Import void clearFocus();
	@Import import14.View getFocusedChild();
	@Import bool hasFocus();
	@Import import14.View findFocus();
	@Import void addFocusables(import19.ArrayList, int, int);
	@Import void addKeyboardNavigationClusters(import20.Collection, int);
	@Import void setTouchscreenBlocksFocus(bool);
	@Import bool getTouchscreenBlocksFocus();
	@Import void findViewsWithText(import19.ArrayList, import21.CharSequence, int);
	@Import void addTouchables(import19.ArrayList);
	@Import void dispatchDisplayHint(int);
	@Import void dispatchWindowVisibilityChanged(int);
	@Import void dispatchConfigurationChanged(import22.Configuration);
	@Import void recomputeViewAttributes(import14.View);
	@Import void bringChildToFront(import14.View);
	@Import bool dispatchDragEvent(import23.DragEvent);
	@Import void dispatchWindowSystemUiVisiblityChanged(int);
	@Import void dispatchSystemUiVisibilityChanged(int);
	@Import bool dispatchKeyEventPreIme(import10.KeyEvent);
	@Import bool dispatchKeyShortcutEvent(import10.KeyEvent);
	@Import bool dispatchCapturedPointerEvent(import11.MotionEvent);
	@Import void dispatchPointerCaptureChanged(bool);
	@Import import24.PointerIcon onResolvePointerIcon(import11.MotionEvent, int);
	@Import void addChildrenForAccessibility(import19.ArrayList);
	@Import bool onInterceptHoverEvent(import11.MotionEvent);
	@Import void setMotionEventSplittingEnabled(bool);
	@Import bool isMotionEventSplittingEnabled();
	@Import bool isTransitionGroup();
	@Import void setTransitionGroup(bool);
	@Import void requestDisallowInterceptTouchEvent(bool);
	@Import bool onInterceptTouchEvent(import11.MotionEvent);
	@Import bool requestFocus(int, import17.Rect);
	@Import bool restoreDefaultFocus();
	@Import void dispatchStartTemporaryDetach();
	@Import void dispatchFinishTemporaryDetach();
	@Import void dispatchProvideStructure(import25.ViewStructure);
	@Import void dispatchProvideAutofillStructure(import25.ViewStructure, int);
	@Import import21.CharSequence getAccessibilityClassName();
	@Import void notifySubtreeAccessibilityStateChanged(import14.View, import14.View, int);
	@Import bool onNestedPrePerformAccessibilityAction(import14.View, int, import4.Bundle);
	@Import import26.ViewGroupOverlay getOverlay();
	@Import int getChildDrawingOrder(int);
	@Import bool getClipChildren();
	@Import void setClipChildren(bool);
	@Import void setClipToPadding(bool);
	@Import bool getClipToPadding();
	@Import void dispatchSetSelected(bool);
	@Import void dispatchSetActivated(bool);
	@Import void dispatchDrawableHotspotChanged(float, float);
	@Import void addView(import14.View);
	@Import void addView(import14.View, int);
	@Import void addView(import14.View, int, int);
	@Import void addView(import14.View, import27.ViewGroup_LayoutParams);
	@Import void addView(import14.View, int, import27.ViewGroup_LayoutParams);
	@Import void updateViewLayout(import14.View, import27.ViewGroup_LayoutParams);
	@Import void setOnHierarchyChangeListener(import28.ViewGroup_OnHierarchyChangeListener);
	@Import void onViewAdded(import14.View);
	@Import void onViewRemoved(import14.View);
	@Import void removeView(import14.View);
	@Import void removeViewInLayout(import14.View);
	@Import void removeViewsInLayout(int, int);
	@Import void removeViewAt(int);
	@Import void removeViews(int, int);
	@Import void setLayoutTransition(import29.LayoutTransition);
	@Import import29.LayoutTransition getLayoutTransition();
	@Import void removeAllViews();
	@Import void removeAllViewsInLayout();
	@Import void onDescendantInvalidated(import14.View, import14.View);
	@Import void invalidateChild(import14.View, import17.Rect);
	@Import import30.ViewParent invalidateChildInParent(int, import17.Rect[]);
	@Import void offsetDescendantRectToMyCoords(import14.View, import17.Rect);
	@Import void offsetRectIntoDescendantCoords(import14.View, import17.Rect);
	@Import bool getChildVisibleRect(import14.View, import17.Rect, import31.Point);
	@Import void layout(int, int, int, int);
	@Import void startLayoutAnimation();
	@Import void scheduleLayoutAnimation();
	@Import void setLayoutAnimation(import32.LayoutAnimationController);
	@Import import32.LayoutAnimationController getLayoutAnimation();
	@Import bool isAnimationCacheEnabled();
	@Import void setAnimationCacheEnabled(bool);
	@Import bool isAlwaysDrawnWithCacheEnabled();
	@Import void setAlwaysDrawnWithCacheEnabled(bool);
	@Import int getPersistentDrawingCache();
	@Import void setPersistentDrawingCache(int);
	@Import int getLayoutMode();
	@Import void setLayoutMode(int);
	@Import import27.ViewGroup_LayoutParams generateLayoutParams(import1.AttributeSet);
	@Import int indexOfChild(import14.View);
	@Import int getChildCount();
	@Import import14.View getChildAt(int);
	@Import static int getChildMeasureSpec(int, int, int);
	@Import void clearDisappearingChildren();
	@Import void startViewTransition(import14.View);
	@Import void endViewTransition(import14.View);
	@Import void suppressLayout(bool);
	@Import bool isLayoutSuppressed();
	@Import void requestTransparentRegion(import14.View);
	@Import import33.WindowInsets dispatchApplyWindowInsets(import33.WindowInsets);
	@Import import34.Animation_AnimationListener getLayoutAnimationListener();
	@Import void jumpDrawablesToCurrentState();
	@Import void setAddStatesFromChildren(bool);
	@Import bool addStatesFromChildren();
	@Import void childDrawableStateChanged(import14.View);
	@Import void setLayoutAnimationListener(import34.Animation_AnimationListener);
	@Import bool shouldDelayChildPressedState();
	@Import bool onStartNestedScroll(import14.View, import14.View, int);
	@Import void onNestedScrollAccepted(import14.View, import14.View, int);
	@Import void onStopNestedScroll(import14.View);
	@Import void onNestedScroll(import14.View, int, int, int, int);
	@Import void onNestedPreScroll(import14.View, int, int, int[]);
	@Import bool onNestedFling(import14.View, float, float, bool);
	@Import bool onNestedPreFling(import14.View, float, float);
	@Import int getNestedScrollAxes();
	@Import int[] getAttributeResolutionStack(int);
	@Import import36.Map getAttributeSourceResourceMap();
	@Import int getExplicitStyle();
	@Import void saveAttributeDataForStyleable(import0.Context, int, import1.AttributeSet, import37.TypedArray, int, int[]);
	@Import @JavaName("toString") string toString_();
	override string toString() { return arsd.jni.javaObjectToString(this); }
	@Import int getVerticalFadingEdgeLength();
	@Import void setFadingEdgeLength(int);
	@Import int getHorizontalFadingEdgeLength();
	@Import int getVerticalScrollbarWidth();
	@Import void setVerticalScrollbarThumbDrawable(import38.Drawable);
	@Import void setVerticalScrollbarTrackDrawable(import38.Drawable);
	@Import void setHorizontalScrollbarThumbDrawable(import38.Drawable);
	@Import void setHorizontalScrollbarTrackDrawable(import38.Drawable);
	@Import import38.Drawable getVerticalScrollbarThumbDrawable();
	@Import import38.Drawable getVerticalScrollbarTrackDrawable();
	@Import import38.Drawable getHorizontalScrollbarThumbDrawable();
	@Import import38.Drawable getHorizontalScrollbarTrackDrawable();
	@Import void setVerticalScrollbarPosition(int);
	@Import int getVerticalScrollbarPosition();
	@Import void setScrollIndicators(int);
	@Import void setScrollIndicators(int, int);
	@Import int getScrollIndicators();
	@Import void setOnScrollChangeListener(import39.View_OnScrollChangeListener);
	@Import void setOnFocusChangeListener(import40.View_OnFocusChangeListener);
	@Import void addOnLayoutChangeListener(import41.View_OnLayoutChangeListener);
	@Import void removeOnLayoutChangeListener(import41.View_OnLayoutChangeListener);
	@Import void addOnAttachStateChangeListener(import42.View_OnAttachStateChangeListener);
	@Import void removeOnAttachStateChangeListener(import42.View_OnAttachStateChangeListener);
	@Import import40.View_OnFocusChangeListener getOnFocusChangeListener();
	@Import void setOnClickListener(import43.View_OnClickListener);
	@Import bool hasOnClickListeners();
	@Import void setOnLongClickListener(import44.View_OnLongClickListener);
	@Import void setOnContextClickListener(import45.View_OnContextClickListener);
	@Import void setOnCreateContextMenuListener(import46.View_OnCreateContextMenuListener);
	@Import bool performClick();
	@Import bool callOnClick();
	@Import bool performLongClick();
	@Import bool performLongClick(float, float);
	@Import bool performContextClick(float, float);
	@Import bool performContextClick();
	@Import bool showContextMenu();
	@Import bool showContextMenu(float, float);
	@Import import15.ActionMode startActionMode(import16.ActionMode_Callback);
	@Import import15.ActionMode startActionMode(import16.ActionMode_Callback, int);
	@Import void setOnKeyListener(import47.View_OnKeyListener);
	@Import void setOnTouchListener(import48.View_OnTouchListener);
	@Import void setOnGenericMotionListener(import49.View_OnGenericMotionListener);
	@Import void setOnHoverListener(import50.View_OnHoverListener);
	@Import void setOnDragListener(import51.View_OnDragListener);
	@Import void setRevealOnFocusHint(bool);
	@Import bool getRevealOnFocusHint();
	@Import bool requestRectangleOnScreen(import17.Rect);
	@Import bool requestRectangleOnScreen(import17.Rect, bool);
	@Import bool hasFocusable();
	@Import bool hasExplicitFocusable();
	@Import void setAccessibilityPaneTitle(import21.CharSequence);
	@Import import21.CharSequence getAccessibilityPaneTitle();
	@Import void sendAccessibilityEvent(int);
	@Import void announceForAccessibility(import21.CharSequence);
	@Import void sendAccessibilityEventUnchecked(import18.AccessibilityEvent);
	@Import bool dispatchPopulateAccessibilityEvent(import18.AccessibilityEvent);
	@Import void onPopulateAccessibilityEvent(import18.AccessibilityEvent);
	@Import void onInitializeAccessibilityEvent(import18.AccessibilityEvent);
	@Import import52.AccessibilityNodeInfo createAccessibilityNodeInfo();
	@Import void onInitializeAccessibilityNodeInfo(import52.AccessibilityNodeInfo);
	@Import void onProvideStructure(import25.ViewStructure);
	@Import void onProvideAutofillStructure(import25.ViewStructure, int);
	@Import void onProvideVirtualStructure(import25.ViewStructure);
	@Import void onProvideAutofillVirtualStructure(import25.ViewStructure, int);
	@Import void autofill(import53.AutofillValue);
	@Import void autofill(import54.SparseArray);
	@Import import55.AutofillId getAutofillId();
	@Import void setAutofillId(import55.AutofillId);
	@Import int getAutofillType();
	@Import string[] getAutofillHints();
	@Import import53.AutofillValue getAutofillValue();
	@Import int getImportantForAutofill();
	@Import void setImportantForAutofill(int);
	@Import bool isImportantForAutofill();
	@Import void setContentCaptureSession(import56.ContentCaptureSession);
	@Import import56.ContentCaptureSession getContentCaptureSession();
	@Import void addExtraDataToAccessibilityNodeInfo(import52.AccessibilityNodeInfo, string, import4.Bundle);
	@Import bool isVisibleToUserForAutofill(int);
	@Import import57.View_AccessibilityDelegate getAccessibilityDelegate();
	@Import void setAccessibilityDelegate(import57.View_AccessibilityDelegate);
	@Import import58.AccessibilityNodeProvider getAccessibilityNodeProvider();
	@Import import21.CharSequence getContentDescription();
	@Import void setContentDescription(import21.CharSequence);
	@Import void setAccessibilityTraversalBefore(int);
	@Import int getAccessibilityTraversalBefore();
	@Import void setAccessibilityTraversalAfter(int);
	@Import int getAccessibilityTraversalAfter();
	@Import int getLabelFor();
	@Import void setLabelFor(int);
	@Import bool isFocused();
	@Import bool isScrollContainer();
	@Import void setScrollContainer(bool);
	@Import int getDrawingCacheQuality();
	@Import void setDrawingCacheQuality(int);
	@Import bool getKeepScreenOn();
	@Import void setKeepScreenOn(bool);
	@Import int getNextFocusLeftId();
	@Import void setNextFocusLeftId(int);
	@Import int getNextFocusRightId();
	@Import void setNextFocusRightId(int);
	@Import int getNextFocusUpId();
	@Import void setNextFocusUpId(int);
	@Import int getNextFocusDownId();
	@Import void setNextFocusDownId(int);
	@Import int getNextFocusForwardId();
	@Import void setNextFocusForwardId(int);
	@Import int getNextClusterForwardId();
	@Import void setNextClusterForwardId(int);
	@Import bool isShown();
	@Import import33.WindowInsets onApplyWindowInsets(import33.WindowInsets);
	@Import void setOnApplyWindowInsetsListener(import59.View_OnApplyWindowInsetsListener);
	@Import void setSystemGestureExclusionRects(import5.List);
	@Import import5.List getSystemGestureExclusionRects();
	@Import void getLocationInSurface(int[]);
	@Import import33.WindowInsets getRootWindowInsets();
	@Import import33.WindowInsets computeSystemWindowInsets(import33.WindowInsets, import17.Rect);
	@Import void setFitsSystemWindows(bool);
	@Import bool getFitsSystemWindows();
	@Import void requestFitSystemWindows();
	@Import void requestApplyInsets();
	@Import int getVisibility();
	@Import void setVisibility(int);
	@Import bool isEnabled();
	@Import void setEnabled(bool);
	@Import void setFocusable(bool);
	@Import void setFocusable(int);
	@Import void setFocusableInTouchMode(bool);
	@Import void setAutofillHints(string[]);
	@Import void setSoundEffectsEnabled(bool);
	@Import bool isSoundEffectsEnabled();
	@Import void setHapticFeedbackEnabled(bool);
	@Import bool isHapticFeedbackEnabled();
	@Import void setLayoutDirection(int);
	@Import int getLayoutDirection();
	@Import void setHasTransientState(bool);
	@Import bool isAttachedToWindow();
	@Import bool isLaidOut();
	@Import void setWillNotDraw(bool);
	@Import bool willNotDraw();
	@Import void setWillNotCacheDrawing(bool);
	@Import bool willNotCacheDrawing();
	@Import bool isClickable();
	@Import void setClickable(bool);
	@Import bool isLongClickable();
	@Import void setLongClickable(bool);
	@Import bool isContextClickable();
	@Import void setContextClickable(bool);
	@Import void setPressed(bool);
	@Import bool isPressed();
	@Import bool isSaveEnabled();
	@Import void setSaveEnabled(bool);
	@Import bool getFilterTouchesWhenObscured();
	@Import void setFilterTouchesWhenObscured(bool);
	@Import bool isSaveFromParentEnabled();
	@Import void setSaveFromParentEnabled(bool);
	@Import bool isFocusable();
	@Import int getFocusable();
	@Import bool isFocusableInTouchMode();
	@Import bool isScreenReaderFocusable();
	@Import void setScreenReaderFocusable(bool);
	@Import bool isAccessibilityHeading();
	@Import void setAccessibilityHeading(bool);
	@Import import14.View focusSearch(int);
	@Import bool isKeyboardNavigationCluster();
	@Import void setKeyboardNavigationCluster(bool);
	@Import bool isFocusedByDefault();
	@Import void setFocusedByDefault(bool);
	@Import import14.View keyboardNavigationClusterSearch(import14.View, int);
	@Import void setDefaultFocusHighlightEnabled(bool);
	@Import bool getDefaultFocusHighlightEnabled();
	@Import import19.ArrayList getFocusables(int);
	@Import void addFocusables(import19.ArrayList, int);
	@Import import19.ArrayList getTouchables();
	@Import bool isAccessibilityFocused();
	@Import bool requestFocus();
	@Import bool requestFocus(int);
	@Import bool requestFocusFromTouch();
	@Import int getImportantForAccessibility();
	@Import void setAccessibilityLiveRegion(int);
	@Import int getAccessibilityLiveRegion();
	@Import void setImportantForAccessibility(int);
	@Import bool isImportantForAccessibility();
	@Import import30.ViewParent getParentForAccessibility();
	@Import void setTransitionVisibility(int);
	@Import bool dispatchNestedPrePerformAccessibilityAction(int, import4.Bundle);
	@Import bool performAccessibilityAction(int, import4.Bundle);
	@Import bool isTemporarilyDetached();
	@Import void onStartTemporaryDetach();
	@Import void onFinishTemporaryDetach();
	@Import import60.KeyEvent_DispatcherState getKeyDispatcherState();
	@Import bool onFilterTouchEventForSecurity(import11.MotionEvent);
	@Import void onWindowFocusChanged(bool);
	@Import bool hasWindowFocus();
	@Import void onVisibilityAggregated(bool);
	@Import int getWindowVisibility();
	@Import void getWindowVisibleDisplayFrame(import17.Rect);
	@Import bool isInTouchMode();
	@Import import0.Context getContext();
	@Import bool onKeyPreIme(int, import10.KeyEvent);
	@Import bool onKeyDown(int, import10.KeyEvent);
	@Import bool onKeyLongPress(int, import10.KeyEvent);
	@Import bool onKeyUp(int, import10.KeyEvent);
	@Import bool onKeyMultiple(int, int, import10.KeyEvent);
	@Import bool onKeyShortcut(int, import10.KeyEvent);
	@Import bool onCheckIsTextEditor();
	@Import import61.InputConnection onCreateInputConnection(import62.EditorInfo);
	@Import bool checkInputConnectionProxy(import14.View);
	@Import void createContextMenu(import63.ContextMenu);
	@Import bool onTrackballEvent(import11.MotionEvent);
	@Import bool onGenericMotionEvent(import11.MotionEvent);
	@Import bool onHoverEvent(import11.MotionEvent);
	@Import bool isHovered();
	@Import void setHovered(bool);
	@Import void onHoverChanged(bool);
	@Import bool onTouchEvent(import11.MotionEvent);
	@Import void cancelLongPress();
	@Import void setTouchDelegate(import64.TouchDelegate);
	@Import import64.TouchDelegate getTouchDelegate();
	@Import void requestUnbufferedDispatch(import11.MotionEvent);
	@Import void bringToFront();
	@Import import30.ViewParent getParent();
	@Import void setScrollX(int);
	@Import void setScrollY(int);
	@Import int getScrollX();
	@Import int getScrollY();
	@Import int getWidth();
	@Import int getHeight();
	@Import void getDrawingRect(import17.Rect);
	@Import int getMeasuredWidth();
	@Import int getMeasuredWidthAndState();
	@Import int getMeasuredHeight();
	@Import int getMeasuredHeightAndState();
	@Import int getMeasuredState();
	@Import import65.Matrix getMatrix();
	@Import float getCameraDistance();
	@Import void setCameraDistance(float);
	@Import float getRotation();
	@Import void setRotation(float);
	@Import float getRotationY();
	@Import void setRotationY(float);
	@Import float getRotationX();
	@Import void setRotationX(float);
	@Import float getScaleX();
	@Import void setScaleX(float);
	@Import float getScaleY();
	@Import void setScaleY(float);
	@Import float getPivotX();
	@Import void setPivotX(float);
	@Import float getPivotY();
	@Import void setPivotY(float);
	@Import bool isPivotSet();
	@Import void resetPivot();
	@Import float getAlpha();
	@Import void forceHasOverlappingRendering(bool);
	@Import bool getHasOverlappingRendering();
	@Import bool hasOverlappingRendering();
	@Import void setAlpha(float);
	@Import void setTransitionAlpha(float);
	@Import float getTransitionAlpha();
	@Import void setForceDarkAllowed(bool);
	@Import bool isForceDarkAllowed();
	@Import int getTop();
	@Import void setTop(int);
	@Import int getBottom();
	@Import bool isDirty();
	@Import void setBottom(int);
	@Import int getLeft();
	@Import void setLeft(int);
	@Import int getRight();
	@Import void setRight(int);
	@Import float getX();
	@Import void setX(float);
	@Import float getY();
	@Import void setY(float);
	@Import float getZ();
	@Import void setZ(float);
	@Import float getElevation();
	@Import void setElevation(float);
	@Import float getTranslationX();
	@Import void setTranslationX(float);
	@Import float getTranslationY();
	@Import void setTranslationY(float);
	@Import float getTranslationZ();
	@Import void setTranslationZ(float);
	@Import void setAnimationMatrix(import65.Matrix);
	@Import import65.Matrix getAnimationMatrix();
	@Import import66.StateListAnimator getStateListAnimator();
	@Import void setStateListAnimator(import66.StateListAnimator);
	@Import bool getClipToOutline();
	@Import void setClipToOutline(bool);
	@Import void setOutlineProvider(import67.ViewOutlineProvider);
	@Import import67.ViewOutlineProvider getOutlineProvider();
	@Import void invalidateOutline();
	@Import void setOutlineSpotShadowColor(int);
	@Import int getOutlineSpotShadowColor();
	@Import void setOutlineAmbientShadowColor(int);
	@Import int getOutlineAmbientShadowColor();
	@Import void getHitRect(import17.Rect);
	@Import void getFocusedRect(import17.Rect);
	@Import bool getGlobalVisibleRect(import17.Rect, import31.Point);
	@Import bool getGlobalVisibleRect(import17.Rect);
	@Import bool getLocalVisibleRect(import17.Rect);
	@Import void offsetTopAndBottom(int);
	@Import void offsetLeftAndRight(int);
	@Import import27.ViewGroup_LayoutParams getLayoutParams();
	@Import void setLayoutParams(import27.ViewGroup_LayoutParams);
	@Import void scrollTo(int, int);
	@Import void scrollBy(int, int);
	@Import void invalidate(import17.Rect);
	@Import void invalidate(int, int, int, int);
	@Import void invalidate();
	@Import bool isOpaque();
	@Import import68.Handler getHandler();
	@Import bool post(import69.Runnable);
	@Import bool postDelayed(import69.Runnable, long);
	@Import void postOnAnimation(import69.Runnable);
	@Import void postOnAnimationDelayed(import69.Runnable, long);
	@Import bool removeCallbacks(import69.Runnable);
	@Import void postInvalidate();
	@Import void postInvalidate(int, int, int, int);
	@Import void postInvalidateDelayed(long);
	@Import void postInvalidateDelayed(long, int, int, int, int);
	@Import void postInvalidateOnAnimation();
	@Import void postInvalidateOnAnimation(int, int, int, int);
	@Import void computeScroll();
	@Import bool isHorizontalFadingEdgeEnabled();
	@Import void setHorizontalFadingEdgeEnabled(bool);
	@Import bool isVerticalFadingEdgeEnabled();
	@Import void setVerticalFadingEdgeEnabled(bool);
	@Import bool isHorizontalScrollBarEnabled();
	@Import void setHorizontalScrollBarEnabled(bool);
	@Import bool isVerticalScrollBarEnabled();
	@Import void setVerticalScrollBarEnabled(bool);
	@Import void setScrollbarFadingEnabled(bool);
	@Import bool isScrollbarFadingEnabled();
	@Import int getScrollBarDefaultDelayBeforeFade();
	@Import void setScrollBarDefaultDelayBeforeFade(int);
	@Import int getScrollBarFadeDuration();
	@Import void setScrollBarFadeDuration(int);
	@Import int getScrollBarSize();
	@Import void setScrollBarSize(int);
	@Import void setScrollBarStyle(int);
	@Import int getScrollBarStyle();
	@Import bool canScrollHorizontally(int);
	@Import bool canScrollVertically(int);
	@Import void onScreenStateChanged(int);
	@Import void onRtlPropertiesChanged(int);
	@Import bool canResolveLayoutDirection();
	@Import bool isLayoutDirectionResolved();
	@Import import70.IBinder getWindowToken();
	@Import import71.WindowId getWindowId();
	@Import import70.IBinder getApplicationWindowToken();
	@Import import72.Display getDisplay();
	@Import void cancelPendingInputEvents();
	@Import void onCancelPendingInputEvents();
	@Import void saveHierarchyState(import54.SparseArray);
	@Import void restoreHierarchyState(import54.SparseArray);
	@Import long getDrawingTime();
	@Import void setDuplicateParentStateEnabled(bool);
	@Import bool isDuplicateParentStateEnabled();
	@Import void setLayerType(int, import73.Paint);
	@Import void setLayerPaint(import73.Paint);
	@Import int getLayerType();
	@Import void buildLayer();
	@Import void setDrawingCacheEnabled(bool);
	@Import bool isDrawingCacheEnabled();
	@Import import74.Bitmap getDrawingCache();
	@Import import74.Bitmap getDrawingCache(bool);
	@Import void destroyDrawingCache();
	@Import void setDrawingCacheBackgroundColor(int);
	@Import int getDrawingCacheBackgroundColor();
	@Import void buildDrawingCache();
	@Import void buildDrawingCache(bool);
	@Import bool isInEditMode();
	@Import bool isHardwareAccelerated();
	@Import void setClipBounds(import17.Rect);
	@Import import17.Rect getClipBounds();
	@Import bool getClipBounds(import17.Rect);
	@Import int getSolidColor();
	@Import bool isLayoutRequested();
	@Import void setLeftTopRightBottom(int, int, int, int);
	@Import import75.Resources getResources();
	@Import void invalidateDrawable(import38.Drawable);
	@Import void scheduleDrawable(import38.Drawable, import69.Runnable, long);
	@Import void unscheduleDrawable(import38.Drawable, import69.Runnable);
	@Import void unscheduleDrawable(import38.Drawable);
	@Import void drawableHotspotChanged(float, float);
	@Import void refreshDrawableState();
	@Import int[] getDrawableState();
	@Import void setBackgroundColor(int);
	@Import void setBackgroundResource(int);
	@Import void setBackground(import38.Drawable);
	@Import void setBackgroundDrawable(import38.Drawable);
	@Import import38.Drawable getBackground();
	@Import void setBackgroundTintList(import76.ColorStateList);
	@Import import76.ColorStateList getBackgroundTintList();
	@Import void setBackgroundTintMode(import77.PorterDuff_Mode);
	@Import void setBackgroundTintBlendMode(import78.BlendMode);
	@Import import77.PorterDuff_Mode getBackgroundTintMode();
	@Import import78.BlendMode getBackgroundTintBlendMode();
	@Import import38.Drawable getForeground();
	@Import void setForeground(import38.Drawable);
	@Import int getForegroundGravity();
	@Import void setForegroundGravity(int);
	@Import void setForegroundTintList(import76.ColorStateList);
	@Import import76.ColorStateList getForegroundTintList();
	@Import void setForegroundTintMode(import77.PorterDuff_Mode);
	@Import void setForegroundTintBlendMode(import78.BlendMode);
	@Import import77.PorterDuff_Mode getForegroundTintMode();
	@Import import78.BlendMode getForegroundTintBlendMode();
	@Import void onDrawForeground(import13.Canvas);
	@Import void setPadding(int, int, int, int);
	@Import void setPaddingRelative(int, int, int, int);
	@Import int getSourceLayoutResId();
	@Import int getPaddingTop();
	@Import int getPaddingBottom();
	@Import int getPaddingLeft();
	@Import int getPaddingStart();
	@Import int getPaddingRight();
	@Import int getPaddingEnd();
	@Import bool isPaddingRelative();
	@Import void setSelected(bool);
	@Import bool isSelected();
	@Import void setActivated(bool);
	@Import bool isActivated();
	@Import import79.ViewTreeObserver getViewTreeObserver();
	@Import import14.View getRootView();
	@Import void transformMatrixToGlobal(import65.Matrix);
	@Import void transformMatrixToLocal(import65.Matrix);
	@Import void getLocationOnScreen(int[]);
	@Import void getLocationInWindow(int[]);
	@Import import14.View findViewById(int);
	@Import import14.View requireViewById(int);
	@Import import14.View findViewWithTag(IJavaObject);
	@Import void setId(int);
	@Import int getId();
	@Import long getUniqueDrawingId();
	@Import IJavaObject getTag();
	@Import void setTag(IJavaObject);
	@Import IJavaObject getTag(int);
	@Import void setTag(int, IJavaObject);
	@Import int getBaseline();
	@Import bool isInLayout();
	@Import void requestLayout();
	@Import void forceLayout();
	@Import void measure(int, int);
	@Import static int combineMeasuredStates(int, int);
	@Import static int resolveSize(int, int);
	@Import static int resolveSizeAndState(int, int, int);
	@Import static int getDefaultSize(int, int);
	@Import int getMinimumHeight();
	@Import void setMinimumHeight(int);
	@Import int getMinimumWidth();
	@Import void setMinimumWidth(int);
	@Import import80.Animation getAnimation();
	@Import void startAnimation(import80.Animation);
	@Import void clearAnimation();
	@Import void setAnimation(import80.Animation);
	@Import void playSoundEffect(int);
	@Import bool performHapticFeedback(int);
	@Import bool performHapticFeedback(int, int);
	@Import void setSystemUiVisibility(int);
	@Import int getSystemUiVisibility();
	@Import int getWindowSystemUiVisibility();
	@Import void onWindowSystemUiVisibilityChanged(int);
	@Import void setOnSystemUiVisibilityChangeListener(import81.View_OnSystemUiVisibilityChangeListener);
	@Import bool startDrag(import82.ClipData, import83.View_DragShadowBuilder, IJavaObject, int);
	@Import bool startDragAndDrop(import82.ClipData, import83.View_DragShadowBuilder, IJavaObject, int);
	@Import void cancelDragAndDrop();
	@Import void updateDragShadow(import83.View_DragShadowBuilder);
	@Import bool onDragEvent(import23.DragEvent);
	@Import static import14.View inflate(import0.Context, int, import84.ViewGroup);
	@Import int getOverScrollMode();
	@Import void setOverScrollMode(int);
	@Import void setNestedScrollingEnabled(bool);
	@Import bool isNestedScrollingEnabled();
	@Import bool startNestedScroll(int);
	@Import void stopNestedScroll();
	@Import bool hasNestedScrollingParent();
	@Import bool dispatchNestedScroll(int, int, int, int, int[]);
	@Import bool dispatchNestedPreScroll(int, int, int, int[][]);
	@Import bool dispatchNestedFling(float, float, bool);
	@Import bool dispatchNestedPreFling(float, float);
	@Import void setTextDirection(int);
	@Import int getTextDirection();
	@Import bool canResolveTextDirection();
	@Import bool isTextDirectionResolved();
	@Import void setTextAlignment(int);
	@Import int getTextAlignment();
	@Import bool canResolveTextAlignment();
	@Import bool isTextAlignmentResolved();
	@Import static int generateViewId();
	@Import void setPointerIcon(import24.PointerIcon);
	@Import import24.PointerIcon getPointerIcon();
	@Import bool hasPointerCapture();
	@Import void requestPointerCapture();
	@Import void releasePointerCapture();
	@Import void onPointerCaptureChange(bool);
	@Import bool onCapturedPointerEvent(import11.MotionEvent);
	@Import void setOnCapturedPointerListener(import85.View_OnCapturedPointerListener);
	@Import import86.ViewPropertyAnimator animate();
	@Import void setTransitionName(string);
	@Import string getTransitionName();
	@Import void setTooltipText(import21.CharSequence);
	@Import import21.CharSequence getTooltipText();
	@Import void addOnUnhandledKeyEventListener(import87.View_OnUnhandledKeyEventListener);
	@Import void removeOnUnhandledKeyEventListener(import87.View_OnUnhandledKeyEventListener);
	@Import import88.Class getClass();
	@Import int hashCode();
	@Import bool equals(IJavaObject);
	@Import void notify();
	@Import void notifyAll();
	@Import void wait(long);
	@Import void wait(long, int);
	@Import void wait();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/media/tv/TvView;";
}



