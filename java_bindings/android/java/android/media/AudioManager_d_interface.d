module android.java.android.media.AudioManager_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl;

import import2 = android.java.android.media.AudioFocusRequest_d_interface;
import import12 = android.java.android.media.AudioDeviceCallback_d_interface;
import import4 = android.java.android.app.PendingIntent_d_interface;
import import8 = android.java.android.os.Handler_d_interface;
import import3 = android.java.android.content.ComponentName_d_interface;
import import7 = android.java.android.media.AudioManager_AudioPlaybackCallback_d_interface;
import import10 = android.java.android.media.AudioManager_AudioRecordingCallback_d_interface;
import import0 = android.java.android.view.KeyEvent_d_interface;
import import11 = android.java.android.media.AudioDeviceInfo_d_interface;
import import1 = android.java.android.media.AudioManager_OnAudioFocusChangeListener_d_interface;
import import5 = android.java.android.media.RemoteControlClient_d_interface;
import import6 = android.java.android.media.RemoteController_d_interface;
import import9 = android.java.java.util.List_d_interface;

final class AudioManager : IJavaObject {
	@Import void dispatchMediaKeyEvent(import0.KeyEvent);
	@Import bool isVolumeFixed();
	@Import void adjustStreamVolume(int, int, int);
	@Import void adjustVolume(int, int);
	@Import void adjustSuggestedStreamVolume(int, int, int);
	@Import int getRingerMode();
	@Import int getStreamMaxVolume(int);
	@Import int getStreamMinVolume(int);
	@Import int getStreamVolume(int);
	@Import float getStreamVolumeDb(int, int, int);
	@Import void setRingerMode(int);
	@Import void setStreamVolume(int, int, int);
	@Import void setStreamSolo(int, bool);
	@Import void setStreamMute(int, bool);
	@Import bool isStreamMute(int);
	@Import bool shouldVibrate(int);
	@Import int getVibrateSetting(int);
	@Import void setVibrateSetting(int, int);
	@Import void setSpeakerphoneOn(bool);
	@Import bool isSpeakerphoneOn();
	@Import bool isBluetoothScoAvailableOffCall();
	@Import void startBluetoothSco();
	@Import void stopBluetoothSco();
	@Import void setBluetoothScoOn(bool);
	@Import bool isBluetoothScoOn();
	@Import void setBluetoothA2dpOn(bool);
	@Import bool isBluetoothA2dpOn();
	@Import void setWiredHeadsetOn(bool);
	@Import bool isWiredHeadsetOn();
	@Import void setMicrophoneMute(bool);
	@Import bool isMicrophoneMute();
	@Import void setMode(int);
	@Import int getMode();
	@Import void setRouting(int, int, int);
	@Import int getRouting(int);
	@Import bool isMusicActive();
	@Import int generateAudioSessionId();
	@Import void setParameters(string);
	@Import string getParameters(string);
	@Import void playSoundEffect(int);
	@Import void playSoundEffect(int, float);
	@Import void loadSoundEffects();
	@Import void unloadSoundEffects();
	@Import int requestAudioFocus(import1.AudioManager_OnAudioFocusChangeListener, int, int);
	@Import int requestAudioFocus(import2.AudioFocusRequest);
	@Import int abandonAudioFocusRequest(import2.AudioFocusRequest);
	@Import int abandonAudioFocus(import1.AudioManager_OnAudioFocusChangeListener);
	@Import void registerMediaButtonEventReceiver(import3.ComponentName);
	@Import void registerMediaButtonEventReceiver(import4.PendingIntent);
	@Import void unregisterMediaButtonEventReceiver(import3.ComponentName);
	@Import void unregisterMediaButtonEventReceiver(import4.PendingIntent);
	@Import void registerRemoteControlClient(import5.RemoteControlClient);
	@Import void unregisterRemoteControlClient(import5.RemoteControlClient);
	@Import bool registerRemoteController(import6.RemoteController);
	@Import void unregisterRemoteController(import6.RemoteController);
	@Import void registerAudioPlaybackCallback(import7.AudioManager_AudioPlaybackCallback, import8.Handler);
	@Import void unregisterAudioPlaybackCallback(import7.AudioManager_AudioPlaybackCallback);
	@Import import9.List getActivePlaybackConfigurations();
	@Import void registerAudioRecordingCallback(import10.AudioManager_AudioRecordingCallback, import8.Handler);
	@Import void unregisterAudioRecordingCallback(import10.AudioManager_AudioRecordingCallback);
	@Import import9.List getActiveRecordingConfigurations();
	@Import string getProperty(string);
	@Import import11.AudioDeviceInfo[] getDevices(int);
	@Import void registerAudioDeviceCallback(import12.AudioDeviceCallback, import8.Handler);
	@Import void unregisterAudioDeviceCallback(import12.AudioDeviceCallback);
	@Import import9.List getMicrophones();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/media/AudioManager";
}
