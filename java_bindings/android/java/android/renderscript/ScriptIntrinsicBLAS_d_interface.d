module android.java.android.renderscript.ScriptIntrinsicBLAS_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl, JavaInterfaceMembers;
static import arsd.jni;

import import3 = android.java.android.renderscript.Float2_d_interface;
import import1 = android.java.android.renderscript.RenderScript_d_interface;
import import5 = android.java.android.renderscript.BaseObj_d_interface;
import import0 = android.java.android.renderscript.ScriptIntrinsicBLAS_d_interface;
import import6 = android.java.android.renderscript.FieldPacker_d_interface;
import import8 = android.java.java.lang.Class_d_interface;
import import7 = android.java.android.renderscript.Element_d_interface;
import import2 = android.java.android.renderscript.Allocation_d_interface;
import import4 = android.java.android.renderscript.Double2_d_interface;

final class ScriptIntrinsicBLAS : IJavaObject {
	static immutable string[] _d_canCastTo = [
	];
	@Import static import0.ScriptIntrinsicBLAS create(import1.RenderScript);
	@Import void SGEMV(int, float, import2.Allocation, import2.Allocation, int, float, import2.Allocation, int);
	@Import void DGEMV(int, double, import2.Allocation, import2.Allocation, int, double, import2.Allocation, int);
	@Import void CGEMV(int, import3.Float2, import2.Allocation, import2.Allocation, int, import3.Float2, import2.Allocation, int);
	@Import void ZGEMV(int, import4.Double2, import2.Allocation, import2.Allocation, int, import4.Double2, import2.Allocation, int);
	@Import void SGBMV(int, int, int, float, import2.Allocation, import2.Allocation, int, float, import2.Allocation, int);
	@Import void DGBMV(int, int, int, double, import2.Allocation, import2.Allocation, int, double, import2.Allocation, int);
	@Import void CGBMV(int, int, int, import3.Float2, import2.Allocation, import2.Allocation, int, import3.Float2, import2.Allocation, int);
	@Import void ZGBMV(int, int, int, import4.Double2, import2.Allocation, import2.Allocation, int, import4.Double2, import2.Allocation, int);
	@Import void STRMV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void DTRMV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void CTRMV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void ZTRMV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void STBMV(int, int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void DTBMV(int, int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void CTBMV(int, int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void ZTBMV(int, int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void STPMV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void DTPMV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void CTPMV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void ZTPMV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void STRSV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void DTRSV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void CTRSV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void ZTRSV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void STBSV(int, int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void DTBSV(int, int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void CTBSV(int, int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void ZTBSV(int, int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void STPSV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void DTPSV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void CTPSV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void ZTPSV(int, int, int, import2.Allocation, import2.Allocation, int);
	@Import void SSYMV(int, float, import2.Allocation, import2.Allocation, int, float, import2.Allocation, int);
	@Import void SSBMV(int, int, float, import2.Allocation, import2.Allocation, int, float, import2.Allocation, int);
	@Import void SSPMV(int, float, import2.Allocation, import2.Allocation, int, float, import2.Allocation, int);
	@Import void SGER(float, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void SSYR(int, float, import2.Allocation, int, import2.Allocation);
	@Import void SSPR(int, float, import2.Allocation, int, import2.Allocation);
	@Import void SSYR2(int, float, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void SSPR2(int, float, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void DSYMV(int, double, import2.Allocation, import2.Allocation, int, double, import2.Allocation, int);
	@Import void DSBMV(int, int, double, import2.Allocation, import2.Allocation, int, double, import2.Allocation, int);
	@Import void DSPMV(int, double, import2.Allocation, import2.Allocation, int, double, import2.Allocation, int);
	@Import void DGER(double, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void DSYR(int, double, import2.Allocation, int, import2.Allocation);
	@Import void DSPR(int, double, import2.Allocation, int, import2.Allocation);
	@Import void DSYR2(int, double, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void DSPR2(int, double, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void CHEMV(int, import3.Float2, import2.Allocation, import2.Allocation, int, import3.Float2, import2.Allocation, int);
	@Import void CHBMV(int, int, import3.Float2, import2.Allocation, import2.Allocation, int, import3.Float2, import2.Allocation, int);
	@Import void CHPMV(int, import3.Float2, import2.Allocation, import2.Allocation, int, import3.Float2, import2.Allocation, int);
	@Import void CGERU(import3.Float2, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void CGERC(import3.Float2, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void CHER(int, float, import2.Allocation, int, import2.Allocation);
	@Import void CHPR(int, float, import2.Allocation, int, import2.Allocation);
	@Import void CHER2(int, import3.Float2, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void CHPR2(int, import3.Float2, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void ZHEMV(int, import4.Double2, import2.Allocation, import2.Allocation, int, import4.Double2, import2.Allocation, int);
	@Import void ZHBMV(int, int, import4.Double2, import2.Allocation, import2.Allocation, int, import4.Double2, import2.Allocation, int);
	@Import void ZHPMV(int, import4.Double2, import2.Allocation, import2.Allocation, int, import4.Double2, import2.Allocation, int);
	@Import void ZGERU(import4.Double2, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void ZGERC(import4.Double2, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void ZHER(int, double, import2.Allocation, int, import2.Allocation);
	@Import void ZHPR(int, double, import2.Allocation, int, import2.Allocation);
	@Import void ZHER2(int, import4.Double2, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void ZHPR2(int, import4.Double2, import2.Allocation, int, import2.Allocation, int, import2.Allocation);
	@Import void SGEMM(int, int, float, import2.Allocation, import2.Allocation, float, import2.Allocation);
	@Import void DGEMM(int, int, double, import2.Allocation, import2.Allocation, double, import2.Allocation);
	@Import void CGEMM(int, int, import3.Float2, import2.Allocation, import2.Allocation, import3.Float2, import2.Allocation);
	@Import void ZGEMM(int, int, import4.Double2, import2.Allocation, import2.Allocation, import4.Double2, import2.Allocation);
	@Import void SSYMM(int, int, float, import2.Allocation, import2.Allocation, float, import2.Allocation);
	@Import void DSYMM(int, int, double, import2.Allocation, import2.Allocation, double, import2.Allocation);
	@Import void CSYMM(int, int, import3.Float2, import2.Allocation, import2.Allocation, import3.Float2, import2.Allocation);
	@Import void ZSYMM(int, int, import4.Double2, import2.Allocation, import2.Allocation, import4.Double2, import2.Allocation);
	@Import void SSYRK(int, int, float, import2.Allocation, float, import2.Allocation);
	@Import void DSYRK(int, int, double, import2.Allocation, double, import2.Allocation);
	@Import void CSYRK(int, int, import3.Float2, import2.Allocation, import3.Float2, import2.Allocation);
	@Import void ZSYRK(int, int, import4.Double2, import2.Allocation, import4.Double2, import2.Allocation);
	@Import void SSYR2K(int, int, float, import2.Allocation, import2.Allocation, float, import2.Allocation);
	@Import void DSYR2K(int, int, double, import2.Allocation, import2.Allocation, double, import2.Allocation);
	@Import void CSYR2K(int, int, import3.Float2, import2.Allocation, import2.Allocation, import3.Float2, import2.Allocation);
	@Import void ZSYR2K(int, int, import4.Double2, import2.Allocation, import2.Allocation, import4.Double2, import2.Allocation);
	@Import void STRMM(int, int, int, int, float, import2.Allocation, import2.Allocation);
	@Import void DTRMM(int, int, int, int, double, import2.Allocation, import2.Allocation);
	@Import void CTRMM(int, int, int, int, import3.Float2, import2.Allocation, import2.Allocation);
	@Import void ZTRMM(int, int, int, int, import4.Double2, import2.Allocation, import2.Allocation);
	@Import void STRSM(int, int, int, int, float, import2.Allocation, import2.Allocation);
	@Import void DTRSM(int, int, int, int, double, import2.Allocation, import2.Allocation);
	@Import void CTRSM(int, int, int, int, import3.Float2, import2.Allocation, import2.Allocation);
	@Import void ZTRSM(int, int, int, int, import4.Double2, import2.Allocation, import2.Allocation);
	@Import void CHEMM(int, int, import3.Float2, import2.Allocation, import2.Allocation, import3.Float2, import2.Allocation);
	@Import void ZHEMM(int, int, import4.Double2, import2.Allocation, import2.Allocation, import4.Double2, import2.Allocation);
	@Import void CHERK(int, int, float, import2.Allocation, float, import2.Allocation);
	@Import void ZHERK(int, int, double, import2.Allocation, double, import2.Allocation);
	@Import void CHER2K(int, int, import3.Float2, import2.Allocation, import2.Allocation, float, import2.Allocation);
	@Import void ZHER2K(int, int, import4.Double2, import2.Allocation, import2.Allocation, double, import2.Allocation);
	@Import void BNNM(import2.Allocation, int, import2.Allocation, int, import2.Allocation, int, int);
	@Import void bindAllocation(import2.Allocation, int);
	@Import void setVar(int, float);
	@Import float getVarF(int);
	@Import void setVar(int, double);
	@Import double getVarD(int);
	@Import void setVar(int, int);
	@Import int getVarI(int);
	@Import void setVar(int, long);
	@Import long getVarJ(int);
	@Import void setVar(int, bool);
	@Import bool getVarB(int);
	@Import void setVar(int, import5.BaseObj);
	@Import void setVar(int, import6.FieldPacker);
	@Import void setVar(int, import6.FieldPacker, import7.Element, int[]);
	@Import void getVarV(int, import6.FieldPacker);
	@Import void setTimeZone(string);
	@Import void setName(string);
	@Import string getName();
	@Import void destroy();
	@Import int hashCode();
	@Import bool equals(IJavaObject);
	@Import import8.Class getClass();
	@Import @JavaName("toString") string toString_();
	override string toString() { return arsd.jni.javaObjectToString(this); }
	@Import void notify();
	@Import void notifyAll();
	@Import void wait(long);
	@Import void wait(long, int);
	@Import void wait();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/renderscript/ScriptIntrinsicBLAS;";
}



