module android.java.android.widget.AutoCompleteTextView_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl, JavaInterfaceMembers;
static import arsd.jni;

import import83 = android.java.android.view.TouchDelegate_d_interface;
import import44 = android.java.android.widget.Scroller_d_interface;
import import41 = android.java.android.view.inputmethod.ExtractedText_d_interface;
import import85 = android.java.android.animation.StateListAnimator_d_interface;
import import94 = android.java.android.graphics.Paint_d_interface;
import import19 = android.java.android.text.method.MovementMethod_d_interface;
import import90 = android.java.java.lang.Runnable_d_interface;
import import86 = android.java.android.view.ViewOutlineProvider_d_interface;
import import82 = android.java.android.view.ContextMenu_d_interface;
import import17 = android.java.android.text.Layout_d_interface;
import import60 = android.java.android.view.View_OnContextClickListener_d_interface;
import import81 = android.java.android.content.res.Configuration_d_interface;
import import9 = android.java.android.widget.ListAdapter_d_interface;
import import101 = android.java.android.view.View_OnSystemUiVisibilityChangeListener_d_interface;
import import87 = android.java.android.graphics.Point_d_interface;
import import4 = android.java.java.lang.CharSequence_d_interface;
import import71 = android.java.android.view.contentcapture.ContentCaptureSession_d_interface;
import import3 = android.java.android.view.View_OnClickListener_d_interface;
import import11 = android.java.android.view.inputmethod.CompletionInfo_d_interface;
import import2 = android.java.android.content.res.Resources_Theme_d_interface;
import import79 = android.java.android.view.ViewParent_d_interface;
import import36 = android.java.android.view.PointerIcon_d_interface;
import import43 = android.java.android.text.TextWatcher_d_interface;
import import96 = android.java.android.graphics.Canvas_d_interface;
import import89 = android.java.android.os.Handler_d_interface;
import import14 = android.java.android.widget.TextView_BufferType_d_interface;
import import1 = android.java.android.util.AttributeSet_d_interface;
import import5 = android.java.android.graphics.drawable.Drawable_d_interface;
import import61 = android.java.android.view.View_OnCreateContextMenuListener_d_interface;
import import72 = android.java.android.view.View_AccessibilityDelegate_d_interface;
import import63 = android.java.android.view.View_OnKeyListener_d_interface;
import import97 = android.java.android.view.ViewOverlay_d_interface;
import import52 = android.java.android.text.TextDirectionHeuristic_d_interface;
import import62 = android.java.android.view.ActionMode_d_interface;
import import51 = android.java.android.view.DragEvent_d_interface;
import import12 = android.java.android.widget.AutoCompleteTextView_Validator_d_interface;
import import47 = android.java.android.view.accessibility.AccessibilityNodeInfo_d_interface;
import import23 = android.java.android.graphics.BlendMode_d_interface;
import import98 = android.java.android.content.res.Resources_d_interface;
import import93 = android.java.android.view.Display_d_interface;
import import37 = android.java.android.view.MotionEvent_d_interface;
import import45 = android.java.java.util.ArrayList_d_interface;
import import77 = android.java.java.util.List_d_interface;
import import56 = android.java.android.view.View_OnFocusChangeListener_d_interface;
import import0 = android.java.android.content.Context_d_interface;
import import27 = android.java.android.text.TextPaint_d_interface;
import import78 = android.java.java.util.Collection_d_interface;
import import31 = android.java.android.text.Spannable_Factory_d_interface;
import import46 = android.java.android.view.autofill.AutofillValue_d_interface;
import import65 = android.java.android.view.View_OnGenericMotionListener_d_interface;
import import67 = android.java.android.view.View_OnDragListener_d_interface;
import import21 = android.java.android.content.res.ColorStateList_d_interface;
import import92 = android.java.android.view.WindowId_d_interface;
import import34 = android.java.android.text.InputFilter_d_interface;
import import35 = android.java.android.graphics.Rect_d_interface;
import import99 = android.java.android.view.ViewTreeObserver_d_interface;
import import20 = android.java.android.text.method.TransformationMethod_d_interface;
import import7 = android.java.android.widget.AdapterView_OnItemSelectedListener_d_interface;
import import10 = android.java.android.view.KeyEvent_d_interface;
import import70 = android.java.android.view.autofill.AutofillId_d_interface;
import import106 = android.java.android.view.ViewPropertyAnimator_d_interface;
import import53 = android.java.java.util.Map_d_interface;
import import102 = android.java.android.content.ClipData_d_interface;
import import91 = android.java.android.os.IBinder_d_interface;
import import84 = android.java.android.graphics.Matrix_d_interface;
import import103 = android.java.android.view.View_DragShadowBuilder_d_interface;
import import24 = android.java.java.util.Locale_d_interface;
import import25 = android.java.android.os.LocaleList_d_interface;
import import104 = android.java.android.view.ViewGroup_d_interface;
import import15 = android.java.android.text.TextUtils_TruncateAt_d_interface;
import import42 = android.java.android.view.inputmethod.CorrectionInfo_d_interface;
import import88 = android.java.android.view.ViewGroup_LayoutParams_d_interface;
import import59 = android.java.android.view.View_OnLongClickListener_d_interface;
import import95 = android.java.android.graphics.Bitmap_d_interface;
import import8 = android.java.android.widget.AutoCompleteTextView_OnDismissListener_d_interface;
import import57 = android.java.android.view.View_OnLayoutChangeListener_d_interface;
import import55 = android.java.android.view.View_OnScrollChangeListener_d_interface;
import import58 = android.java.android.view.View_OnAttachStateChangeListener_d_interface;
import import54 = android.java.android.content.res.TypedArray_d_interface;
import import73 = android.java.android.view.accessibility.AccessibilityNodeProvider_d_interface;
import import108 = android.java.java.lang.Class_d_interface;
import import64 = android.java.android.view.View_OnTouchListener_d_interface;
import import48 = android.java.android.view.accessibility.AccessibilityEvent_d_interface;
import import30 = android.java.android.text.Editable_Factory_d_interface;
import import50 = android.java.android.view.textclassifier.TextClassifier_d_interface;
import import18 = android.java.android.text.method.KeyListener_d_interface;
import import29 = android.java.android.os.Parcelable_d_interface;
import import74 = android.java.android.view.View_d_interface;
import import13 = android.java.android.text.Editable_d_interface;
import import28 = android.java.android.text.style.URLSpan_d_interface;
import import66 = android.java.android.view.View_OnHoverListener_d_interface;
import import33 = android.java.android.os.Bundle_d_interface;
import import69 = android.java.android.util.SparseArray_d_interface;
import import80 = android.java.android.view.KeyEvent_DispatcherState_d_interface;
import import6 = android.java.android.widget.AdapterView_OnItemClickListener_d_interface;
import import39 = android.java.android.view.inputmethod.EditorInfo_d_interface;
import import32 = android.java.android.widget.TextView_OnEditorActionListener_d_interface;
import import49 = android.java.android.view.ActionMode_Callback_d_interface;
import import75 = android.java.android.view.WindowInsets_d_interface;
import import100 = android.java.android.view.animation.Animation_d_interface;
import import105 = android.java.android.view.View_OnCapturedPointerListener_d_interface;
import import16 = android.java.android.graphics.Typeface_d_interface;
import import22 = android.java.android.graphics.PorterDuff_Mode_d_interface;
import import38 = android.java.android.view.inputmethod.InputConnection_d_interface;
import import107 = android.java.android.view.View_OnUnhandledKeyEventListener_d_interface;
import import68 = android.java.android.view.ViewStructure_d_interface;
import import40 = android.java.android.view.inputmethod.ExtractedTextRequest_d_interface;
import import76 = android.java.android.view.View_OnApplyWindowInsetsListener_d_interface;
import import26 = android.java.android.text.PrecomputedText_Params_d_interface;

final class AutoCompleteTextView : IJavaObject {
	static immutable string[] _d_canCastTo = [
		"android/widget/Filter$FilterListener",
	];
	@Import this(import0.Context);
	@Import this(import0.Context, import1.AttributeSet);
	@Import this(import0.Context, import1.AttributeSet, int);
	@Import this(import0.Context, import1.AttributeSet, int, int);
	@Import this(import0.Context, import1.AttributeSet, int, int, import2.Resources_Theme);
	@Import void setOnClickListener(import3.View_OnClickListener);
	@Import void setCompletionHint(import4.CharSequence);
	@Import import4.CharSequence getCompletionHint();
	@Import int getDropDownWidth();
	@Import void setDropDownWidth(int);
	@Import int getDropDownHeight();
	@Import void setDropDownHeight(int);
	@Import int getDropDownAnchor();
	@Import void setDropDownAnchor(int);
	@Import import5.Drawable getDropDownBackground();
	@Import void setDropDownBackgroundDrawable(import5.Drawable);
	@Import void setDropDownBackgroundResource(int);
	@Import void setDropDownVerticalOffset(int);
	@Import int getDropDownVerticalOffset();
	@Import void setDropDownHorizontalOffset(int);
	@Import int getDropDownHorizontalOffset();
	@Import int getThreshold();
	@Import void setThreshold(int);
	@Import void setOnItemClickListener(import6.AdapterView_OnItemClickListener);
	@Import void setOnItemSelectedListener(import7.AdapterView_OnItemSelectedListener);
	@Import import6.AdapterView_OnItemClickListener getItemClickListener();
	@Import import7.AdapterView_OnItemSelectedListener getItemSelectedListener();
	@Import import6.AdapterView_OnItemClickListener getOnItemClickListener();
	@Import import7.AdapterView_OnItemSelectedListener getOnItemSelectedListener();
	@Import void setOnDismissListener(import8.AutoCompleteTextView_OnDismissListener);
	@Import import9.ListAdapter getAdapter();
	@Import void setAdapter(import9.ListAdapter);
	@Import bool onKeyPreIme(int, import10.KeyEvent);
	@Import bool onKeyUp(int, import10.KeyEvent);
	@Import bool onKeyDown(int, import10.KeyEvent);
	@Import bool enoughToFilter();
	@Import void refreshAutoCompleteResults();
	@Import bool isPopupShowing();
	@Import void clearListSelection();
	@Import void setListSelection(int);
	@Import int getListSelection();
	@Import void performCompletion();
	@Import void onCommitCompletion(import11.CompletionInfo);
	@Import bool isPerformingCompletion();
	@Import void setText(import4.CharSequence, bool);
	@Import void onFilterComplete(int);
	@Import void onWindowFocusChanged(bool);
	@Import void dismissDropDown();
	@Import int getInputMethodMode();
	@Import void setInputMethodMode(int);
	@Import void showDropDown();
	@Import void setValidator(import12.AutoCompleteTextView_Validator);
	@Import import12.AutoCompleteTextView_Validator getValidator();
	@Import void performValidation();
	@Import bool getFreezesText();
	@Import import13.Editable getText();
	@Import void setText(import4.CharSequence, import14.TextView_BufferType);
	@Import void setSelection(int, int);
	@Import void setSelection(int);
	@Import void selectAll();
	@Import void extendSelection(int);
	@Import void setEllipsize(import15.TextUtils_TruncateAt);
	@Import import4.CharSequence getAccessibilityClassName();
	@Import void setAutoSizeTextTypeWithDefaults(int);
	@Import void setAutoSizeTextTypeUniformWithConfiguration(int, int, int, int);
	@Import void setAutoSizeTextTypeUniformWithPresetSizes(int, int[]);
	@Import int getAutoSizeTextType();
	@Import int getAutoSizeStepGranularity();
	@Import int getAutoSizeMinTextSize();
	@Import int getAutoSizeMaxTextSize();
	@Import int[] getAutoSizeTextAvailableSizes();
	@Import void setEnabled(bool);
	@Import void setTypeface(import16.Typeface, int);
	@Import int length();
	@Import import13.Editable getEditableText();
	@Import int getLineHeight();
	@Import import17.Layout getLayout();
	@Import import18.KeyListener getKeyListener();
	@Import void setKeyListener(import18.KeyListener);
	@Import import19.MovementMethod getMovementMethod();
	@Import void setMovementMethod(import19.MovementMethod);
	@Import import20.TransformationMethod getTransformationMethod();
	@Import void setTransformationMethod(import20.TransformationMethod);
	@Import int getCompoundPaddingTop();
	@Import int getCompoundPaddingBottom();
	@Import int getCompoundPaddingLeft();
	@Import int getCompoundPaddingRight();
	@Import int getCompoundPaddingStart();
	@Import int getCompoundPaddingEnd();
	@Import int getExtendedPaddingTop();
	@Import int getExtendedPaddingBottom();
	@Import int getTotalPaddingLeft();
	@Import int getTotalPaddingRight();
	@Import int getTotalPaddingStart();
	@Import int getTotalPaddingEnd();
	@Import int getTotalPaddingTop();
	@Import int getTotalPaddingBottom();
	@Import void setCompoundDrawables(import5.Drawable, import5.Drawable, import5.Drawable, import5.Drawable);
	@Import void setCompoundDrawablesWithIntrinsicBounds(int, int, int, int);
	@Import void setCompoundDrawablesWithIntrinsicBounds(import5.Drawable, import5.Drawable, import5.Drawable, import5.Drawable);
	@Import void setCompoundDrawablesRelative(import5.Drawable, import5.Drawable, import5.Drawable, import5.Drawable);
	@Import void setCompoundDrawablesRelativeWithIntrinsicBounds(int, int, int, int);
	@Import void setCompoundDrawablesRelativeWithIntrinsicBounds(import5.Drawable, import5.Drawable, import5.Drawable, import5.Drawable);
	@Import import5.Drawable[] getCompoundDrawables();
	@Import import5.Drawable[] getCompoundDrawablesRelative();
	@Import void setCompoundDrawablePadding(int);
	@Import int getCompoundDrawablePadding();
	@Import void setCompoundDrawableTintList(import21.ColorStateList);
	@Import import21.ColorStateList getCompoundDrawableTintList();
	@Import void setCompoundDrawableTintMode(import22.PorterDuff_Mode);
	@Import void setCompoundDrawableTintBlendMode(import23.BlendMode);
	@Import import22.PorterDuff_Mode getCompoundDrawableTintMode();
	@Import import23.BlendMode getCompoundDrawableTintBlendMode();
	@Import void setPadding(int, int, int, int);
	@Import void setPaddingRelative(int, int, int, int);
	@Import void setFirstBaselineToTopHeight(int);
	@Import void setLastBaselineToBottomHeight(int);
	@Import int getFirstBaselineToTopHeight();
	@Import int getLastBaselineToBottomHeight();
	@Import int getAutoLinkMask();
	@Import void setTextSelectHandle(import5.Drawable);
	@Import void setTextSelectHandle(int);
	@Import import5.Drawable getTextSelectHandle();
	@Import void setTextSelectHandleLeft(import5.Drawable);
	@Import void setTextSelectHandleLeft(int);
	@Import import5.Drawable getTextSelectHandleLeft();
	@Import void setTextSelectHandleRight(import5.Drawable);
	@Import void setTextSelectHandleRight(int);
	@Import import5.Drawable getTextSelectHandleRight();
	@Import void setTextCursorDrawable(import5.Drawable);
	@Import void setTextCursorDrawable(int);
	@Import import5.Drawable getTextCursorDrawable();
	@Import void setTextAppearance(int);
	@Import void setTextAppearance(import0.Context, int);
	@Import import24.Locale getTextLocale();
	@Import import25.LocaleList getTextLocales();
	@Import void setTextLocale(import24.Locale);
	@Import void setTextLocales(import25.LocaleList);
	@Import float getTextSize();
	@Import void setTextSize(float);
	@Import void setTextSize(int, float);
	@Import float getTextScaleX();
	@Import void setTextScaleX(float);
	@Import void setTypeface(import16.Typeface);
	@Import import16.Typeface getTypeface();
	@Import void setElegantTextHeight(bool);
	@Import void setFallbackLineSpacing(bool);
	@Import bool isFallbackLineSpacing();
	@Import bool isElegantTextHeight();
	@Import float getLetterSpacing();
	@Import void setLetterSpacing(float);
	@Import string getFontFeatureSettings();
	@Import string getFontVariationSettings();
	@Import void setBreakStrategy(int);
	@Import int getBreakStrategy();
	@Import void setHyphenationFrequency(int);
	@Import int getHyphenationFrequency();
	@Import import26.PrecomputedText_Params getTextMetricsParams();
	@Import void setTextMetricsParams(import26.PrecomputedText_Params);
	@Import void setJustificationMode(int);
	@Import int getJustificationMode();
	@Import void setFontFeatureSettings(string);
	@Import bool setFontVariationSettings(string);
	@Import void setTextColor(int);
	@Import void setTextColor(import21.ColorStateList);
	@Import import21.ColorStateList getTextColors();
	@Import int getCurrentTextColor();
	@Import void setHighlightColor(int);
	@Import int getHighlightColor();
	@Import void setShowSoftInputOnFocus(bool);
	@Import bool getShowSoftInputOnFocus();
	@Import void setShadowLayer(float, float, float, int);
	@Import float getShadowRadius();
	@Import float getShadowDx();
	@Import float getShadowDy();
	@Import int getShadowColor();
	@Import import27.TextPaint getPaint();
	@Import void setAutoLinkMask(int);
	@Import void setLinksClickable(bool);
	@Import bool getLinksClickable();
	@Import import28.URLSpan[] getUrls();
	@Import void setHintTextColor(int);
	@Import void setHintTextColor(import21.ColorStateList);
	@Import import21.ColorStateList getHintTextColors();
	@Import int getCurrentHintTextColor();
	@Import void setLinkTextColor(int);
	@Import void setLinkTextColor(import21.ColorStateList);
	@Import import21.ColorStateList getLinkTextColors();
	@Import void setGravity(int);
	@Import int getGravity();
	@Import int getPaintFlags();
	@Import void setPaintFlags(int);
	@Import void setHorizontallyScrolling(bool);
	@Import bool isHorizontallyScrollable();
	@Import void setMinLines(int);
	@Import int getMinLines();
	@Import void setMinHeight(int);
	@Import int getMinHeight();
	@Import void setMaxLines(int);
	@Import int getMaxLines();
	@Import void setMaxHeight(int);
	@Import int getMaxHeight();
	@Import void setLines(int);
	@Import void setHeight(int);
	@Import void setMinEms(int);
	@Import int getMinEms();
	@Import void setMinWidth(int);
	@Import int getMinWidth();
	@Import void setMaxEms(int);
	@Import int getMaxEms();
	@Import void setMaxWidth(int);
	@Import int getMaxWidth();
	@Import void setEms(int);
	@Import void setWidth(int);
	@Import void setLineSpacing(float, float);
	@Import float getLineSpacingMultiplier();
	@Import float getLineSpacingExtra();
	@Import void setLineHeight(int);
	@Import void append(import4.CharSequence);
	@Import void append(import4.CharSequence, int, int);
	@Import void drawableHotspotChanged(float, float);
	@Import import29.Parcelable onSaveInstanceState();
	@Import void onRestoreInstanceState(import29.Parcelable);
	@Import void setFreezesText(bool);
	@Import void setEditableFactory(import30.Editable_Factory);
	@Import void setSpannableFactory(import31.Spannable_Factory);
	@Import void setText(import4.CharSequence);
	@Import void setTextKeepState(import4.CharSequence);
	@Import void setText(wchar, int, int[]);
	@Import void setTextKeepState(import4.CharSequence, import14.TextView_BufferType);
	@Import void setText(int);
	@Import void setText(int, import14.TextView_BufferType);
	@Import void setHint(import4.CharSequence);
	@Import void setHint(int);
	@Import import4.CharSequence getHint();
	@Import bool isSingleLine();
	@Import void setInputType(int);
	@Import void setRawInputType(int);
	@Import int getInputType();
	@Import void setImeOptions(int);
	@Import int getImeOptions();
	@Import void setImeActionLabel(import4.CharSequence, int);
	@Import import4.CharSequence getImeActionLabel();
	@Import int getImeActionId();
	@Import void setOnEditorActionListener(import32.TextView_OnEditorActionListener);
	@Import void onEditorAction(int);
	@Import void setPrivateImeOptions(string);
	@Import string getPrivateImeOptions();
	@Import void setInputExtras(int);
	@Import import33.Bundle getInputExtras(bool);
	@Import void setImeHintLocales(import25.LocaleList);
	@Import import25.LocaleList getImeHintLocales();
	@Import import4.CharSequence getError();
	@Import void setError(import4.CharSequence);
	@Import void setError(import4.CharSequence, import5.Drawable);
	@Import void setFilters(import34.InputFilter[]);
	@Import import34.InputFilter[] getFilters();
	@Import bool onPreDraw();
	@Import void onScreenStateChanged(int);
	@Import void jumpDrawablesToCurrentState();
	@Import void invalidateDrawable(import5.Drawable);
	@Import bool hasOverlappingRendering();
	@Import bool isTextSelectable();
	@Import void setTextIsSelectable(bool);
	@Import void getFocusedRect(import35.Rect);
	@Import int getLineCount();
	@Import int getLineBounds(int, import35.Rect);
	@Import int getBaseline();
	@Import import36.PointerIcon onResolvePointerIcon(import37.MotionEvent, int);
	@Import bool onKeyMultiple(int, int, import10.KeyEvent);
	@Import bool onCheckIsTextEditor();
	@Import import38.InputConnection onCreateInputConnection(import39.EditorInfo);
	@Import bool extractText(import40.ExtractedTextRequest, import41.ExtractedText);
	@Import void setExtractedText(import41.ExtractedText);
	@Import void onCommitCorrection(import42.CorrectionInfo);
	@Import void beginBatchEdit();
	@Import void endBatchEdit();
	@Import void onBeginBatchEdit();
	@Import void onEndBatchEdit();
	@Import bool onPrivateIMECommand(string, import33.Bundle);
	@Import void setIncludeFontPadding(bool);
	@Import bool getIncludeFontPadding();
	@Import bool bringPointIntoView(int);
	@Import bool moveCursorToVisibleOffset();
	@Import void computeScroll();
	@Import @JavaName("debug") void debug_(int);
	@Import int getSelectionStart();
	@Import int getSelectionEnd();
	@Import bool hasSelection();
	@Import void setSingleLine();
	@Import void setAllCaps(bool);
	@Import bool isAllCaps();
	@Import void setSingleLine(bool);
	@Import void setMarqueeRepeatLimit(int);
	@Import int getMarqueeRepeatLimit();
	@Import import15.TextUtils_TruncateAt getEllipsize();
	@Import void setSelectAllOnFocus(bool);
	@Import void setCursorVisible(bool);
	@Import bool isCursorVisible();
	@Import void addTextChangedListener(import43.TextWatcher);
	@Import void removeTextChangedListener(import43.TextWatcher);
	@Import void clearComposingText();
	@Import void setSelected(bool);
	@Import bool onTouchEvent(import37.MotionEvent);
	@Import bool onGenericMotionEvent(import37.MotionEvent);
	@Import bool showContextMenu();
	@Import bool showContextMenu(float, float);
	@Import bool didTouchFocusSelect();
	@Import void cancelLongPress();
	@Import bool onTrackballEvent(import37.MotionEvent);
	@Import void setScroller(import44.Scroller);
	@Import void findViewsWithText(import45.ArrayList, import4.CharSequence, int);
	@Import bool onKeyShortcut(int, import10.KeyEvent);
	@Import void autofill(import46.AutofillValue);
	@Import int getAutofillType();
	@Import import46.AutofillValue getAutofillValue();
	@Import void addExtraDataToAccessibilityNodeInfo(import47.AccessibilityNodeInfo, string, import33.Bundle);
	@Import void sendAccessibilityEventUnchecked(import48.AccessibilityEvent);
	@Import bool isInputMethodTarget();
	@Import bool onTextContextMenuItem(int);
	@Import bool performLongClick();
	@Import bool isSuggestionsEnabled();
	@Import void setCustomSelectionActionModeCallback(import49.ActionMode_Callback);
	@Import import49.ActionMode_Callback getCustomSelectionActionModeCallback();
	@Import void setCustomInsertionActionModeCallback(import49.ActionMode_Callback);
	@Import import49.ActionMode_Callback getCustomInsertionActionModeCallback();
	@Import void setTextClassifier(import50.TextClassifier);
	@Import import50.TextClassifier getTextClassifier();
	@Import int getOffsetForPosition(float, float);
	@Import bool onDragEvent(import51.DragEvent);
	@Import void onRtlPropertiesChanged(int);
	@Import import52.TextDirectionHeuristic getTextDirectionHeuristic();
	@Import int[] getAttributeResolutionStack(int);
	@Import import53.Map getAttributeSourceResourceMap();
	@Import int getExplicitStyle();
	@Import void saveAttributeDataForStyleable(import0.Context, int, import1.AttributeSet, import54.TypedArray, int, int[]);
	@Import @JavaName("toString") string toString_();
	override string toString() { return toString_(); }
	@Import int getVerticalFadingEdgeLength();
	@Import void setFadingEdgeLength(int);
	@Import int getHorizontalFadingEdgeLength();
	@Import int getVerticalScrollbarWidth();
	@Import void setVerticalScrollbarThumbDrawable(import5.Drawable);
	@Import void setVerticalScrollbarTrackDrawable(import5.Drawable);
	@Import void setHorizontalScrollbarThumbDrawable(import5.Drawable);
	@Import void setHorizontalScrollbarTrackDrawable(import5.Drawable);
	@Import import5.Drawable getVerticalScrollbarThumbDrawable();
	@Import import5.Drawable getVerticalScrollbarTrackDrawable();
	@Import import5.Drawable getHorizontalScrollbarThumbDrawable();
	@Import import5.Drawable getHorizontalScrollbarTrackDrawable();
	@Import void setVerticalScrollbarPosition(int);
	@Import int getVerticalScrollbarPosition();
	@Import void setScrollIndicators(int);
	@Import void setScrollIndicators(int, int);
	@Import int getScrollIndicators();
	@Import void setOnScrollChangeListener(import55.View_OnScrollChangeListener);
	@Import void setOnFocusChangeListener(import56.View_OnFocusChangeListener);
	@Import void addOnLayoutChangeListener(import57.View_OnLayoutChangeListener);
	@Import void removeOnLayoutChangeListener(import57.View_OnLayoutChangeListener);
	@Import void addOnAttachStateChangeListener(import58.View_OnAttachStateChangeListener);
	@Import void removeOnAttachStateChangeListener(import58.View_OnAttachStateChangeListener);
	@Import import56.View_OnFocusChangeListener getOnFocusChangeListener();
	@Import bool hasOnClickListeners();
	@Import void setOnLongClickListener(import59.View_OnLongClickListener);
	@Import void setOnContextClickListener(import60.View_OnContextClickListener);
	@Import void setOnCreateContextMenuListener(import61.View_OnCreateContextMenuListener);
	@Import bool performClick();
	@Import bool callOnClick();
	@Import bool performLongClick(float, float);
	@Import bool performContextClick(float, float);
	@Import bool performContextClick();
	@Import import62.ActionMode startActionMode(import49.ActionMode_Callback);
	@Import import62.ActionMode startActionMode(import49.ActionMode_Callback, int);
	@Import void setOnKeyListener(import63.View_OnKeyListener);
	@Import void setOnTouchListener(import64.View_OnTouchListener);
	@Import void setOnGenericMotionListener(import65.View_OnGenericMotionListener);
	@Import void setOnHoverListener(import66.View_OnHoverListener);
	@Import void setOnDragListener(import67.View_OnDragListener);
	@Import void setRevealOnFocusHint(bool);
	@Import bool getRevealOnFocusHint();
	@Import bool requestRectangleOnScreen(import35.Rect);
	@Import bool requestRectangleOnScreen(import35.Rect, bool);
	@Import void clearFocus();
	@Import bool hasFocus();
	@Import bool hasFocusable();
	@Import bool hasExplicitFocusable();
	@Import void setAccessibilityPaneTitle(import4.CharSequence);
	@Import import4.CharSequence getAccessibilityPaneTitle();
	@Import void sendAccessibilityEvent(int);
	@Import void announceForAccessibility(import4.CharSequence);
	@Import bool dispatchPopulateAccessibilityEvent(import48.AccessibilityEvent);
	@Import void onPopulateAccessibilityEvent(import48.AccessibilityEvent);
	@Import void onInitializeAccessibilityEvent(import48.AccessibilityEvent);
	@Import import47.AccessibilityNodeInfo createAccessibilityNodeInfo();
	@Import void onInitializeAccessibilityNodeInfo(import47.AccessibilityNodeInfo);
	@Import void onProvideStructure(import68.ViewStructure);
	@Import void onProvideAutofillStructure(import68.ViewStructure, int);
	@Import void onProvideVirtualStructure(import68.ViewStructure);
	@Import void onProvideAutofillVirtualStructure(import68.ViewStructure, int);
	@Import void autofill(import69.SparseArray);
	@Import import70.AutofillId getAutofillId();
	@Import void setAutofillId(import70.AutofillId);
	@Import string[] getAutofillHints();
	@Import int getImportantForAutofill();
	@Import void setImportantForAutofill(int);
	@Import bool isImportantForAutofill();
	@Import void setContentCaptureSession(import71.ContentCaptureSession);
	@Import import71.ContentCaptureSession getContentCaptureSession();
	@Import void dispatchProvideStructure(import68.ViewStructure);
	@Import void dispatchProvideAutofillStructure(import68.ViewStructure, int);
	@Import bool isVisibleToUserForAutofill(int);
	@Import import72.View_AccessibilityDelegate getAccessibilityDelegate();
	@Import void setAccessibilityDelegate(import72.View_AccessibilityDelegate);
	@Import import73.AccessibilityNodeProvider getAccessibilityNodeProvider();
	@Import import4.CharSequence getContentDescription();
	@Import void setContentDescription(import4.CharSequence);
	@Import void setAccessibilityTraversalBefore(int);
	@Import int getAccessibilityTraversalBefore();
	@Import void setAccessibilityTraversalAfter(int);
	@Import int getAccessibilityTraversalAfter();
	@Import int getLabelFor();
	@Import void setLabelFor(int);
	@Import bool isFocused();
	@Import import74.View findFocus();
	@Import bool isScrollContainer();
	@Import void setScrollContainer(bool);
	@Import int getDrawingCacheQuality();
	@Import void setDrawingCacheQuality(int);
	@Import bool getKeepScreenOn();
	@Import void setKeepScreenOn(bool);
	@Import int getNextFocusLeftId();
	@Import void setNextFocusLeftId(int);
	@Import int getNextFocusRightId();
	@Import void setNextFocusRightId(int);
	@Import int getNextFocusUpId();
	@Import void setNextFocusUpId(int);
	@Import int getNextFocusDownId();
	@Import void setNextFocusDownId(int);
	@Import int getNextFocusForwardId();
	@Import void setNextFocusForwardId(int);
	@Import int getNextClusterForwardId();
	@Import void setNextClusterForwardId(int);
	@Import bool isShown();
	@Import import75.WindowInsets onApplyWindowInsets(import75.WindowInsets);
	@Import void setOnApplyWindowInsetsListener(import76.View_OnApplyWindowInsetsListener);
	@Import import75.WindowInsets dispatchApplyWindowInsets(import75.WindowInsets);
	@Import void setSystemGestureExclusionRects(import77.List);
	@Import import77.List getSystemGestureExclusionRects();
	@Import void getLocationInSurface(int[]);
	@Import import75.WindowInsets getRootWindowInsets();
	@Import import75.WindowInsets computeSystemWindowInsets(import75.WindowInsets, import35.Rect);
	@Import void setFitsSystemWindows(bool);
	@Import bool getFitsSystemWindows();
	@Import void requestFitSystemWindows();
	@Import void requestApplyInsets();
	@Import int getVisibility();
	@Import void setVisibility(int);
	@Import bool isEnabled();
	@Import void setFocusable(bool);
	@Import void setFocusable(int);
	@Import void setFocusableInTouchMode(bool);
	@Import void setAutofillHints(string[]);
	@Import void setSoundEffectsEnabled(bool);
	@Import bool isSoundEffectsEnabled();
	@Import void setHapticFeedbackEnabled(bool);
	@Import bool isHapticFeedbackEnabled();
	@Import void setLayoutDirection(int);
	@Import int getLayoutDirection();
	@Import bool hasTransientState();
	@Import void setHasTransientState(bool);
	@Import bool isAttachedToWindow();
	@Import bool isLaidOut();
	@Import void setWillNotDraw(bool);
	@Import bool willNotDraw();
	@Import void setWillNotCacheDrawing(bool);
	@Import bool willNotCacheDrawing();
	@Import bool isClickable();
	@Import void setClickable(bool);
	@Import bool isLongClickable();
	@Import void setLongClickable(bool);
	@Import bool isContextClickable();
	@Import void setContextClickable(bool);
	@Import void setPressed(bool);
	@Import bool isPressed();
	@Import bool isSaveEnabled();
	@Import void setSaveEnabled(bool);
	@Import bool getFilterTouchesWhenObscured();
	@Import void setFilterTouchesWhenObscured(bool);
	@Import bool isSaveFromParentEnabled();
	@Import void setSaveFromParentEnabled(bool);
	@Import bool isFocusable();
	@Import int getFocusable();
	@Import bool isFocusableInTouchMode();
	@Import bool isScreenReaderFocusable();
	@Import void setScreenReaderFocusable(bool);
	@Import bool isAccessibilityHeading();
	@Import void setAccessibilityHeading(bool);
	@Import import74.View focusSearch(int);
	@Import bool isKeyboardNavigationCluster();
	@Import void setKeyboardNavigationCluster(bool);
	@Import bool isFocusedByDefault();
	@Import void setFocusedByDefault(bool);
	@Import import74.View keyboardNavigationClusterSearch(import74.View, int);
	@Import bool dispatchUnhandledMove(import74.View, int);
	@Import void setDefaultFocusHighlightEnabled(bool);
	@Import bool getDefaultFocusHighlightEnabled();
	@Import import45.ArrayList getFocusables(int);
	@Import void addFocusables(import45.ArrayList, int);
	@Import void addFocusables(import45.ArrayList, int, int);
	@Import void addKeyboardNavigationClusters(import78.Collection, int);
	@Import import45.ArrayList getTouchables();
	@Import void addTouchables(import45.ArrayList);
	@Import bool isAccessibilityFocused();
	@Import bool requestFocus();
	@Import bool restoreDefaultFocus();
	@Import bool requestFocus(int);
	@Import bool requestFocus(int, import35.Rect);
	@Import bool requestFocusFromTouch();
	@Import int getImportantForAccessibility();
	@Import void setAccessibilityLiveRegion(int);
	@Import int getAccessibilityLiveRegion();
	@Import void setImportantForAccessibility(int);
	@Import bool isImportantForAccessibility();
	@Import import79.ViewParent getParentForAccessibility();
	@Import void addChildrenForAccessibility(import45.ArrayList);
	@Import void setTransitionVisibility(int);
	@Import bool dispatchNestedPrePerformAccessibilityAction(int, import33.Bundle);
	@Import bool performAccessibilityAction(int, import33.Bundle);
	@Import bool isTemporarilyDetached();
	@Import void dispatchStartTemporaryDetach();
	@Import void onStartTemporaryDetach();
	@Import void dispatchFinishTemporaryDetach();
	@Import void onFinishTemporaryDetach();
	@Import import80.KeyEvent_DispatcherState getKeyDispatcherState();
	@Import bool dispatchKeyEventPreIme(import10.KeyEvent);
	@Import bool dispatchKeyEvent(import10.KeyEvent);
	@Import bool dispatchKeyShortcutEvent(import10.KeyEvent);
	@Import bool dispatchTouchEvent(import37.MotionEvent);
	@Import bool onFilterTouchEventForSecurity(import37.MotionEvent);
	@Import bool dispatchTrackballEvent(import37.MotionEvent);
	@Import bool dispatchCapturedPointerEvent(import37.MotionEvent);
	@Import bool dispatchGenericMotionEvent(import37.MotionEvent);
	@Import void dispatchWindowFocusChanged(bool);
	@Import bool hasWindowFocus();
	@Import void dispatchDisplayHint(int);
	@Import void dispatchWindowVisibilityChanged(int);
	@Import void onVisibilityAggregated(bool);
	@Import int getWindowVisibility();
	@Import void getWindowVisibleDisplayFrame(import35.Rect);
	@Import void dispatchConfigurationChanged(import81.Configuration);
	@Import bool isInTouchMode();
	@Import import0.Context getContext();
	@Import bool onKeyLongPress(int, import10.KeyEvent);
	@Import bool checkInputConnectionProxy(import74.View);
	@Import void createContextMenu(import82.ContextMenu);
	@Import bool onHoverEvent(import37.MotionEvent);
	@Import bool isHovered();
	@Import void setHovered(bool);
	@Import void onHoverChanged(bool);
	@Import void setTouchDelegate(import83.TouchDelegate);
	@Import import83.TouchDelegate getTouchDelegate();
	@Import void requestUnbufferedDispatch(import37.MotionEvent);
	@Import void bringToFront();
	@Import import79.ViewParent getParent();
	@Import void setScrollX(int);
	@Import void setScrollY(int);
	@Import int getScrollX();
	@Import int getScrollY();
	@Import int getWidth();
	@Import int getHeight();
	@Import void getDrawingRect(import35.Rect);
	@Import int getMeasuredWidth();
	@Import int getMeasuredWidthAndState();
	@Import int getMeasuredHeight();
	@Import int getMeasuredHeightAndState();
	@Import int getMeasuredState();
	@Import import84.Matrix getMatrix();
	@Import float getCameraDistance();
	@Import void setCameraDistance(float);
	@Import float getRotation();
	@Import void setRotation(float);
	@Import float getRotationY();
	@Import void setRotationY(float);
	@Import float getRotationX();
	@Import void setRotationX(float);
	@Import float getScaleX();
	@Import void setScaleX(float);
	@Import float getScaleY();
	@Import void setScaleY(float);
	@Import float getPivotX();
	@Import void setPivotX(float);
	@Import float getPivotY();
	@Import void setPivotY(float);
	@Import bool isPivotSet();
	@Import void resetPivot();
	@Import float getAlpha();
	@Import void forceHasOverlappingRendering(bool);
	@Import bool getHasOverlappingRendering();
	@Import void setAlpha(float);
	@Import void setTransitionAlpha(float);
	@Import float getTransitionAlpha();
	@Import void setForceDarkAllowed(bool);
	@Import bool isForceDarkAllowed();
	@Import int getTop();
	@Import void setTop(int);
	@Import int getBottom();
	@Import bool isDirty();
	@Import void setBottom(int);
	@Import int getLeft();
	@Import void setLeft(int);
	@Import int getRight();
	@Import void setRight(int);
	@Import float getX();
	@Import void setX(float);
	@Import float getY();
	@Import void setY(float);
	@Import float getZ();
	@Import void setZ(float);
	@Import float getElevation();
	@Import void setElevation(float);
	@Import float getTranslationX();
	@Import void setTranslationX(float);
	@Import float getTranslationY();
	@Import void setTranslationY(float);
	@Import float getTranslationZ();
	@Import void setTranslationZ(float);
	@Import void setAnimationMatrix(import84.Matrix);
	@Import import84.Matrix getAnimationMatrix();
	@Import import85.StateListAnimator getStateListAnimator();
	@Import void setStateListAnimator(import85.StateListAnimator);
	@Import bool getClipToOutline();
	@Import void setClipToOutline(bool);
	@Import void setOutlineProvider(import86.ViewOutlineProvider);
	@Import import86.ViewOutlineProvider getOutlineProvider();
	@Import void invalidateOutline();
	@Import void setOutlineSpotShadowColor(int);
	@Import int getOutlineSpotShadowColor();
	@Import void setOutlineAmbientShadowColor(int);
	@Import int getOutlineAmbientShadowColor();
	@Import void getHitRect(import35.Rect);
	@Import bool getGlobalVisibleRect(import35.Rect, import87.Point);
	@Import bool getGlobalVisibleRect(import35.Rect);
	@Import bool getLocalVisibleRect(import35.Rect);
	@Import void offsetTopAndBottom(int);
	@Import void offsetLeftAndRight(int);
	@Import import88.ViewGroup_LayoutParams getLayoutParams();
	@Import void setLayoutParams(import88.ViewGroup_LayoutParams);
	@Import void scrollTo(int, int);
	@Import void scrollBy(int, int);
	@Import void invalidate(import35.Rect);
	@Import void invalidate(int, int, int, int);
	@Import void invalidate();
	@Import bool isOpaque();
	@Import import89.Handler getHandler();
	@Import bool post(import90.Runnable);
	@Import bool postDelayed(import90.Runnable, long);
	@Import void postOnAnimation(import90.Runnable);
	@Import void postOnAnimationDelayed(import90.Runnable, long);
	@Import bool removeCallbacks(import90.Runnable);
	@Import void postInvalidate();
	@Import void postInvalidate(int, int, int, int);
	@Import void postInvalidateDelayed(long);
	@Import void postInvalidateDelayed(long, int, int, int, int);
	@Import void postInvalidateOnAnimation();
	@Import void postInvalidateOnAnimation(int, int, int, int);
	@Import bool isHorizontalFadingEdgeEnabled();
	@Import void setHorizontalFadingEdgeEnabled(bool);
	@Import bool isVerticalFadingEdgeEnabled();
	@Import void setVerticalFadingEdgeEnabled(bool);
	@Import bool isHorizontalScrollBarEnabled();
	@Import void setHorizontalScrollBarEnabled(bool);
	@Import bool isVerticalScrollBarEnabled();
	@Import void setVerticalScrollBarEnabled(bool);
	@Import void setScrollbarFadingEnabled(bool);
	@Import bool isScrollbarFadingEnabled();
	@Import int getScrollBarDefaultDelayBeforeFade();
	@Import void setScrollBarDefaultDelayBeforeFade(int);
	@Import int getScrollBarFadeDuration();
	@Import void setScrollBarFadeDuration(int);
	@Import int getScrollBarSize();
	@Import void setScrollBarSize(int);
	@Import void setScrollBarStyle(int);
	@Import int getScrollBarStyle();
	@Import bool canScrollHorizontally(int);
	@Import bool canScrollVertically(int);
	@Import bool canResolveLayoutDirection();
	@Import bool isLayoutDirectionResolved();
	@Import import91.IBinder getWindowToken();
	@Import import92.WindowId getWindowId();
	@Import import91.IBinder getApplicationWindowToken();
	@Import import93.Display getDisplay();
	@Import void cancelPendingInputEvents();
	@Import void onCancelPendingInputEvents();
	@Import void saveHierarchyState(import69.SparseArray);
	@Import void restoreHierarchyState(import69.SparseArray);
	@Import long getDrawingTime();
	@Import void setDuplicateParentStateEnabled(bool);
	@Import bool isDuplicateParentStateEnabled();
	@Import void setLayerType(int, import94.Paint);
	@Import void setLayerPaint(import94.Paint);
	@Import int getLayerType();
	@Import void buildLayer();
	@Import void setDrawingCacheEnabled(bool);
	@Import bool isDrawingCacheEnabled();
	@Import import95.Bitmap getDrawingCache();
	@Import import95.Bitmap getDrawingCache(bool);
	@Import void destroyDrawingCache();
	@Import void setDrawingCacheBackgroundColor(int);
	@Import int getDrawingCacheBackgroundColor();
	@Import void buildDrawingCache();
	@Import void buildDrawingCache(bool);
	@Import bool isInEditMode();
	@Import bool isHardwareAccelerated();
	@Import void setClipBounds(import35.Rect);
	@Import import35.Rect getClipBounds();
	@Import bool getClipBounds(import35.Rect);
	@Import void draw(import96.Canvas);
	@Import import97.ViewOverlay getOverlay();
	@Import int getSolidColor();
	@Import bool isLayoutRequested();
	@Import void layout(int, int, int, int);
	@Import void setLeftTopRightBottom(int, int, int, int);
	@Import import98.Resources getResources();
	@Import void scheduleDrawable(import5.Drawable, import90.Runnable, long);
	@Import void unscheduleDrawable(import5.Drawable, import90.Runnable);
	@Import void unscheduleDrawable(import5.Drawable);
	@Import void dispatchDrawableHotspotChanged(float, float);
	@Import void refreshDrawableState();
	@Import int[] getDrawableState();
	@Import void setBackgroundColor(int);
	@Import void setBackgroundResource(int);
	@Import void setBackground(import5.Drawable);
	@Import void setBackgroundDrawable(import5.Drawable);
	@Import import5.Drawable getBackground();
	@Import void setBackgroundTintList(import21.ColorStateList);
	@Import import21.ColorStateList getBackgroundTintList();
	@Import void setBackgroundTintMode(import22.PorterDuff_Mode);
	@Import void setBackgroundTintBlendMode(import23.BlendMode);
	@Import import22.PorterDuff_Mode getBackgroundTintMode();
	@Import import23.BlendMode getBackgroundTintBlendMode();
	@Import import5.Drawable getForeground();
	@Import void setForeground(import5.Drawable);
	@Import int getForegroundGravity();
	@Import void setForegroundGravity(int);
	@Import void setForegroundTintList(import21.ColorStateList);
	@Import import21.ColorStateList getForegroundTintList();
	@Import void setForegroundTintMode(import22.PorterDuff_Mode);
	@Import void setForegroundTintBlendMode(import23.BlendMode);
	@Import import22.PorterDuff_Mode getForegroundTintMode();
	@Import import23.BlendMode getForegroundTintBlendMode();
	@Import void onDrawForeground(import96.Canvas);
	@Import int getSourceLayoutResId();
	@Import int getPaddingTop();
	@Import int getPaddingBottom();
	@Import int getPaddingLeft();
	@Import int getPaddingStart();
	@Import int getPaddingRight();
	@Import int getPaddingEnd();
	@Import bool isPaddingRelative();
	@Import bool isSelected();
	@Import void setActivated(bool);
	@Import bool isActivated();
	@Import import99.ViewTreeObserver getViewTreeObserver();
	@Import import74.View getRootView();
	@Import void transformMatrixToGlobal(import84.Matrix);
	@Import void transformMatrixToLocal(import84.Matrix);
	@Import void getLocationOnScreen(int[]);
	@Import void getLocationInWindow(int[]);
	@Import import74.View findViewById(int);
	@Import import74.View requireViewById(int);
	@Import import74.View findViewWithTag(IJavaObject);
	@Import void setId(int);
	@Import int getId();
	@Import long getUniqueDrawingId();
	@Import IJavaObject getTag();
	@Import void setTag(IJavaObject);
	@Import IJavaObject getTag(int);
	@Import void setTag(int, IJavaObject);
	@Import bool isInLayout();
	@Import void requestLayout();
	@Import void forceLayout();
	@Import void measure(int, int);
	@Import static int combineMeasuredStates(int, int);
	@Import static int resolveSize(int, int);
	@Import static int resolveSizeAndState(int, int, int);
	@Import static int getDefaultSize(int, int);
	@Import int getMinimumHeight();
	@Import void setMinimumHeight(int);
	@Import int getMinimumWidth();
	@Import void setMinimumWidth(int);
	@Import import100.Animation getAnimation();
	@Import void startAnimation(import100.Animation);
	@Import void clearAnimation();
	@Import void setAnimation(import100.Animation);
	@Import void playSoundEffect(int);
	@Import bool performHapticFeedback(int);
	@Import bool performHapticFeedback(int, int);
	@Import void setSystemUiVisibility(int);
	@Import int getSystemUiVisibility();
	@Import int getWindowSystemUiVisibility();
	@Import void onWindowSystemUiVisibilityChanged(int);
	@Import void dispatchWindowSystemUiVisiblityChanged(int);
	@Import void setOnSystemUiVisibilityChangeListener(import101.View_OnSystemUiVisibilityChangeListener);
	@Import void dispatchSystemUiVisibilityChanged(int);
	@Import bool startDrag(import102.ClipData, import103.View_DragShadowBuilder, IJavaObject, int);
	@Import bool startDragAndDrop(import102.ClipData, import103.View_DragShadowBuilder, IJavaObject, int);
	@Import void cancelDragAndDrop();
	@Import void updateDragShadow(import103.View_DragShadowBuilder);
	@Import bool dispatchDragEvent(import51.DragEvent);
	@Import static import74.View inflate(import0.Context, int, import104.ViewGroup);
	@Import int getOverScrollMode();
	@Import void setOverScrollMode(int);
	@Import void setNestedScrollingEnabled(bool);
	@Import bool isNestedScrollingEnabled();
	@Import bool startNestedScroll(int);
	@Import void stopNestedScroll();
	@Import bool hasNestedScrollingParent();
	@Import bool dispatchNestedScroll(int, int, int, int, int[]);
	@Import bool dispatchNestedPreScroll(int, int, int, int[][]);
	@Import bool dispatchNestedFling(float, float, bool);
	@Import bool dispatchNestedPreFling(float, float);
	@Import void setTextDirection(int);
	@Import int getTextDirection();
	@Import bool canResolveTextDirection();
	@Import bool isTextDirectionResolved();
	@Import void setTextAlignment(int);
	@Import int getTextAlignment();
	@Import bool canResolveTextAlignment();
	@Import bool isTextAlignmentResolved();
	@Import static int generateViewId();
	@Import void setPointerIcon(import36.PointerIcon);
	@Import import36.PointerIcon getPointerIcon();
	@Import bool hasPointerCapture();
	@Import void requestPointerCapture();
	@Import void releasePointerCapture();
	@Import void onPointerCaptureChange(bool);
	@Import void dispatchPointerCaptureChanged(bool);
	@Import bool onCapturedPointerEvent(import37.MotionEvent);
	@Import void setOnCapturedPointerListener(import105.View_OnCapturedPointerListener);
	@Import import106.ViewPropertyAnimator animate();
	@Import void setTransitionName(string);
	@Import string getTransitionName();
	@Import void setTooltipText(import4.CharSequence);
	@Import import4.CharSequence getTooltipText();
	@Import void addOnUnhandledKeyEventListener(import107.View_OnUnhandledKeyEventListener);
	@Import void removeOnUnhandledKeyEventListener(import107.View_OnUnhandledKeyEventListener);
	@Import import108.Class getClass();
	@Import int hashCode();
	@Import bool equals(IJavaObject);
	@Import void notify();
	@Import void notifyAll();
	@Import void wait(long);
	@Import void wait(long, int);
	@Import void wait();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/widget/AutoCompleteTextView;";
}



