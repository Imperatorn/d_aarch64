module android.java.android.widget.TextView_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl;

import import15 = android.java.android.text.TextPaint_d_interface;
import import32 = android.java.android.view.inputmethod.CompletionInfo_d_interface;
import import19 = android.java.android.text.Spannable_Factory_d_interface;
import import39 = android.java.android.view.autofill.AutofillValue_d_interface;
import import10 = android.java.android.content.res.ColorStateList_d_interface;
import import25 = android.java.android.view.PointerIcon_d_interface;
import import41 = android.java.android.view.accessibility.AccessibilityEvent_d_interface;
import import18 = android.java.android.text.Editable_Factory_d_interface;
import import36 = android.java.android.widget.Scroller_d_interface;
import import23 = android.java.android.text.InputFilter_d_interface;
import import6 = android.java.android.text.method.KeyListener_d_interface;
import import17 = android.java.android.os.Parcelable_d_interface;
import import35 = android.java.android.text.TextWatcher_d_interface;
import import24 = android.java.android.graphics.Rect_d_interface;
import import31 = android.java.android.view.inputmethod.ExtractedText_d_interface;
import import43 = android.java.android.view.textclassifier.TextClassifier_d_interface;
import import20 = android.java.android.widget.TextView_BufferType_d_interface;
import import4 = android.java.android.text.Editable_d_interface;
import import8 = android.java.android.text.method.TransformationMethod_d_interface;
import import16 = android.java.android.text.style.URLSpan_d_interface;
import import1 = android.java.android.util.AttributeSet_d_interface;
import import9 = android.java.android.graphics.drawable.Drawable_d_interface;
import import27 = android.java.android.view.KeyEvent_d_interface;
import import22 = android.java.android.os.Bundle_d_interface;
import import7 = android.java.android.text.method.MovementMethod_d_interface;
import import12 = android.java.java.util.Locale_d_interface;
import import13 = android.java.android.os.LocaleList_d_interface;
import import5 = android.java.android.text.Layout_d_interface;
import import29 = android.java.android.view.inputmethod.EditorInfo_d_interface;
import import34 = android.java.android.text.TextUtils_TruncateAt_d_interface;
import import21 = android.java.android.widget.TextView_OnEditorActionListener_d_interface;
import import42 = android.java.android.view.ActionMode_Callback_d_interface;
import import33 = android.java.android.view.inputmethod.CorrectionInfo_d_interface;
import import44 = android.java.android.view.DragEvent_d_interface;
import import3 = android.java.java.lang.CharSequence_d_interface;
import import40 = android.java.android.view.accessibility.AccessibilityNodeInfo_d_interface;
import import2 = android.java.android.graphics.Typeface_d_interface;
import import11 = android.java.android.graphics.PorterDuff_Mode_d_interface;
import import28 = android.java.android.view.inputmethod.InputConnection_d_interface;
import import26 = android.java.android.view.MotionEvent_d_interface;
import import30 = android.java.android.view.inputmethod.ExtractedTextRequest_d_interface;
import import37 = android.java.java.util.ArrayList_d_interface;
import import38 = android.java.android.view.ViewStructure_d_interface;
import import14 = android.java.android.text.PrecomputedText_Params_d_interface;
import import0 = android.java.android.content.Context_d_interface;

final class TextView : IJavaObject {
	@Import this(import0.Context);
	@Import this(import0.Context, import1.AttributeSet);
	@Import this(import0.Context, import1.AttributeSet, int);
	@Import this(import0.Context, import1.AttributeSet, int, int);
	@Import void setAutoSizeTextTypeWithDefaults(int);
	@Import void setAutoSizeTextTypeUniformWithConfiguration(int, int, int, int);
	@Import void setAutoSizeTextTypeUniformWithPresetSizes(int, int[]);
	@Import int getAutoSizeTextType();
	@Import int getAutoSizeStepGranularity();
	@Import int getAutoSizeMinTextSize();
	@Import int getAutoSizeMaxTextSize();
	@Import int[] getAutoSizeTextAvailableSizes();
	@Import void setEnabled(bool);
	@Import void setTypeface(import2.Typeface, int);
	@Import import3.CharSequence getText();
	@Import int length();
	@Import import4.Editable getEditableText();
	@Import int getLineHeight();
	@Import import5.Layout getLayout();
	@Import import6.KeyListener getKeyListener();
	@Import void setKeyListener(import6.KeyListener);
	@Import import7.MovementMethod getMovementMethod();
	@Import void setMovementMethod(import7.MovementMethod);
	@Import import8.TransformationMethod getTransformationMethod();
	@Import void setTransformationMethod(import8.TransformationMethod);
	@Import int getCompoundPaddingTop();
	@Import int getCompoundPaddingBottom();
	@Import int getCompoundPaddingLeft();
	@Import int getCompoundPaddingRight();
	@Import int getCompoundPaddingStart();
	@Import int getCompoundPaddingEnd();
	@Import int getExtendedPaddingTop();
	@Import int getExtendedPaddingBottom();
	@Import int getTotalPaddingLeft();
	@Import int getTotalPaddingRight();
	@Import int getTotalPaddingStart();
	@Import int getTotalPaddingEnd();
	@Import int getTotalPaddingTop();
	@Import int getTotalPaddingBottom();
	@Import void setCompoundDrawables(import9.Drawable, import9.Drawable, import9.Drawable, import9.Drawable);
	@Import void setCompoundDrawablesWithIntrinsicBounds(int, int, int, int);
	@Import void setCompoundDrawablesWithIntrinsicBounds(import9.Drawable, import9.Drawable, import9.Drawable, import9.Drawable);
	@Import void setCompoundDrawablesRelative(import9.Drawable, import9.Drawable, import9.Drawable, import9.Drawable);
	@Import void setCompoundDrawablesRelativeWithIntrinsicBounds(int, int, int, int);
	@Import void setCompoundDrawablesRelativeWithIntrinsicBounds(import9.Drawable, import9.Drawable, import9.Drawable, import9.Drawable);
	@Import import9.Drawable[] getCompoundDrawables();
	@Import import9.Drawable[] getCompoundDrawablesRelative();
	@Import void setCompoundDrawablePadding(int);
	@Import int getCompoundDrawablePadding();
	@Import void setCompoundDrawableTintList(import10.ColorStateList);
	@Import import10.ColorStateList getCompoundDrawableTintList();
	@Import void setCompoundDrawableTintMode(import11.PorterDuff_Mode);
	@Import import11.PorterDuff_Mode getCompoundDrawableTintMode();
	@Import void setPadding(int, int, int, int);
	@Import void setPaddingRelative(int, int, int, int);
	@Import void setFirstBaselineToTopHeight(int);
	@Import void setLastBaselineToBottomHeight(int);
	@Import int getFirstBaselineToTopHeight();
	@Import int getLastBaselineToBottomHeight();
	@Import int getAutoLinkMask();
	@Import void setTextAppearance(int);
	@Import void setTextAppearance(import0.Context, int);
	@Import import12.Locale getTextLocale();
	@Import import13.LocaleList getTextLocales();
	@Import void setTextLocale(import12.Locale);
	@Import void setTextLocales(import13.LocaleList);
	@Import float getTextSize();
	@Import void setTextSize(float);
	@Import void setTextSize(int, float);
	@Import float getTextScaleX();
	@Import void setTextScaleX(float);
	@Import void setTypeface(import2.Typeface);
	@Import import2.Typeface getTypeface();
	@Import void setElegantTextHeight(bool);
	@Import void setFallbackLineSpacing(bool);
	@Import bool isFallbackLineSpacing();
	@Import bool isElegantTextHeight();
	@Import float getLetterSpacing();
	@Import void setLetterSpacing(float);
	@Import string getFontFeatureSettings();
	@Import string getFontVariationSettings();
	@Import void setBreakStrategy(int);
	@Import int getBreakStrategy();
	@Import void setHyphenationFrequency(int);
	@Import int getHyphenationFrequency();
	@Import import14.PrecomputedText_Params getTextMetricsParams();
	@Import void setTextMetricsParams(import14.PrecomputedText_Params);
	@Import void setJustificationMode(int);
	@Import int getJustificationMode();
	@Import void setFontFeatureSettings(string);
	@Import bool setFontVariationSettings(string);
	@Import void setTextColor(int);
	@Import void setTextColor(import10.ColorStateList);
	@Import import10.ColorStateList getTextColors();
	@Import int getCurrentTextColor();
	@Import void setHighlightColor(int);
	@Import int getHighlightColor();
	@Import void setShowSoftInputOnFocus(bool);
	@Import bool getShowSoftInputOnFocus();
	@Import void setShadowLayer(float, float, float, int);
	@Import float getShadowRadius();
	@Import float getShadowDx();
	@Import float getShadowDy();
	@Import int getShadowColor();
	@Import import15.TextPaint getPaint();
	@Import void setAutoLinkMask(int);
	@Import void setLinksClickable(bool);
	@Import bool getLinksClickable();
	@Import import16.URLSpan[] getUrls();
	@Import void setHintTextColor(int);
	@Import void setHintTextColor(import10.ColorStateList);
	@Import import10.ColorStateList getHintTextColors();
	@Import int getCurrentHintTextColor();
	@Import void setLinkTextColor(int);
	@Import void setLinkTextColor(import10.ColorStateList);
	@Import import10.ColorStateList getLinkTextColors();
	@Import void setGravity(int);
	@Import int getGravity();
	@Import int getPaintFlags();
	@Import void setPaintFlags(int);
	@Import void setHorizontallyScrolling(bool);
	@Import void setMinLines(int);
	@Import int getMinLines();
	@Import void setMinHeight(int);
	@Import int getMinHeight();
	@Import void setMaxLines(int);
	@Import int getMaxLines();
	@Import void setMaxHeight(int);
	@Import int getMaxHeight();
	@Import void setLines(int);
	@Import void setHeight(int);
	@Import void setMinEms(int);
	@Import int getMinEms();
	@Import void setMinWidth(int);
	@Import int getMinWidth();
	@Import void setMaxEms(int);
	@Import int getMaxEms();
	@Import void setMaxWidth(int);
	@Import int getMaxWidth();
	@Import void setEms(int);
	@Import void setWidth(int);
	@Import void setLineSpacing(float, float);
	@Import float getLineSpacingMultiplier();
	@Import float getLineSpacingExtra();
	@Import void setLineHeight(int);
	@Import void append(import3.CharSequence);
	@Import void append(import3.CharSequence, int, int);
	@Import void drawableHotspotChanged(float, float);
	@Import import17.Parcelable onSaveInstanceState();
	@Import void onRestoreInstanceState(import17.Parcelable);
	@Import void setFreezesText(bool);
	@Import bool getFreezesText();
	@Import void setEditableFactory(import18.Editable_Factory);
	@Import void setSpannableFactory(import19.Spannable_Factory);
	@Import void setText(import3.CharSequence);
	@Import void setTextKeepState(import3.CharSequence);
	@Import void setText(import3.CharSequence, import20.TextView_BufferType);
	@Import void setText(wchar, int, int[]);
	@Import void setTextKeepState(import3.CharSequence, import20.TextView_BufferType);
	@Import void setText(int);
	@Import void setText(int, import20.TextView_BufferType);
	@Import void setHint(import3.CharSequence);
	@Import void setHint(int);
	@Import import3.CharSequence getHint();
	@Import void setInputType(int);
	@Import void setRawInputType(int);
	@Import int getInputType();
	@Import void setImeOptions(int);
	@Import int getImeOptions();
	@Import void setImeActionLabel(import3.CharSequence, int);
	@Import import3.CharSequence getImeActionLabel();
	@Import int getImeActionId();
	@Import void setOnEditorActionListener(import21.TextView_OnEditorActionListener);
	@Import void onEditorAction(int);
	@Import void setPrivateImeOptions(string);
	@Import string getPrivateImeOptions();
	@Import void setInputExtras(int);
	@Import import22.Bundle getInputExtras(bool);
	@Import void setImeHintLocales(import13.LocaleList);
	@Import import13.LocaleList getImeHintLocales();
	@Import import3.CharSequence getError();
	@Import void setError(import3.CharSequence);
	@Import void setError(import3.CharSequence, import9.Drawable);
	@Import void setFilters(import23.InputFilter[]);
	@Import import23.InputFilter[] getFilters();
	@Import bool onPreDraw();
	@Import void onScreenStateChanged(int);
	@Import void jumpDrawablesToCurrentState();
	@Import void invalidateDrawable(import9.Drawable);
	@Import bool hasOverlappingRendering();
	@Import bool isTextSelectable();
	@Import void setTextIsSelectable(bool);
	@Import void getFocusedRect(import24.Rect);
	@Import int getLineCount();
	@Import int getLineBounds(int, import24.Rect);
	@Import int getBaseline();
	@Import import25.PointerIcon onResolvePointerIcon(import26.MotionEvent, int);
	@Import bool onKeyPreIme(int, import27.KeyEvent);
	@Import bool onKeyDown(int, import27.KeyEvent);
	@Import bool onKeyMultiple(int, int, import27.KeyEvent);
	@Import bool onKeyUp(int, import27.KeyEvent);
	@Import bool onCheckIsTextEditor();
	@Import import28.InputConnection onCreateInputConnection(import29.EditorInfo);
	@Import bool extractText(import30.ExtractedTextRequest, import31.ExtractedText);
	@Import void setExtractedText(import31.ExtractedText);
	@Import void onCommitCompletion(import32.CompletionInfo);
	@Import void onCommitCorrection(import33.CorrectionInfo);
	@Import void beginBatchEdit();
	@Import void endBatchEdit();
	@Import void onBeginBatchEdit();
	@Import void onEndBatchEdit();
	@Import bool onPrivateIMECommand(string, import22.Bundle);
	@Import void setIncludeFontPadding(bool);
	@Import bool getIncludeFontPadding();
	@Import bool bringPointIntoView(int);
	@Import bool moveCursorToVisibleOffset();
	@Import void computeScroll();
	@Import @JavaName("debug") void debug_(int);
	@Import int getSelectionStart();
	@Import int getSelectionEnd();
	@Import bool hasSelection();
	@Import void setSingleLine();
	@Import void setAllCaps(bool);
	@Import bool isAllCaps();
	@Import void setSingleLine(bool);
	@Import void setEllipsize(import34.TextUtils_TruncateAt);
	@Import void setMarqueeRepeatLimit(int);
	@Import int getMarqueeRepeatLimit();
	@Import import34.TextUtils_TruncateAt getEllipsize();
	@Import void setSelectAllOnFocus(bool);
	@Import void setCursorVisible(bool);
	@Import bool isCursorVisible();
	@Import void addTextChangedListener(import35.TextWatcher);
	@Import void removeTextChangedListener(import35.TextWatcher);
	@Import void onWindowFocusChanged(bool);
	@Import void clearComposingText();
	@Import void setSelected(bool);
	@Import bool onTouchEvent(import26.MotionEvent);
	@Import bool onGenericMotionEvent(import26.MotionEvent);
	@Import bool showContextMenu();
	@Import bool showContextMenu(float, float);
	@Import bool didTouchFocusSelect();
	@Import void cancelLongPress();
	@Import bool onTrackballEvent(import26.MotionEvent);
	@Import void setScroller(import36.Scroller);
	@Import void findViewsWithText(import37.ArrayList, import3.CharSequence, int);
	@Import bool onKeyShortcut(int, import27.KeyEvent);
	@Import import3.CharSequence getAccessibilityClassName();
	@Import void onProvideStructure(import38.ViewStructure);
	@Import void onProvideAutofillStructure(import38.ViewStructure, int);
	@Import void autofill(import39.AutofillValue);
	@Import int getAutofillType();
	@Import import39.AutofillValue getAutofillValue();
	@Import void addExtraDataToAccessibilityNodeInfo(import40.AccessibilityNodeInfo, string, import22.Bundle);
	@Import void sendAccessibilityEventUnchecked(import41.AccessibilityEvent);
	@Import bool isInputMethodTarget();
	@Import bool onTextContextMenuItem(int);
	@Import bool performLongClick();
	@Import bool isSuggestionsEnabled();
	@Import void setCustomSelectionActionModeCallback(import42.ActionMode_Callback);
	@Import import42.ActionMode_Callback getCustomSelectionActionModeCallback();
	@Import void setCustomInsertionActionModeCallback(import42.ActionMode_Callback);
	@Import import42.ActionMode_Callback getCustomInsertionActionModeCallback();
	@Import void setTextClassifier(import43.TextClassifier);
	@Import import43.TextClassifier getTextClassifier();
	@Import int getOffsetForPosition(float, float);
	@Import bool onDragEvent(import44.DragEvent);
	@Import void onRtlPropertiesChanged(int);
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/widget/TextView";
}
