module android.java.android.os.Parcel_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl, JavaInterfaceMembers;
static import arsd.jni;

import import9 = android.java.android.util.SizeF_d_interface;
import import1 = android.java.android.os.IBinder_d_interface;
import import3 = android.java.java.io.FileDescriptor_d_interface;
import import0 = android.java.android.os.Parcel_d_interface;
import import20 = android.java.android.os.Parcelable_Creator_d_interface;
import import14 = android.java.java.io.Serializable_d_interface;
import import2 = android.java.android.os.IInterface_d_interface;
import import21 = android.java.java.lang.Class_d_interface;
import import5 = android.java.android.util.ArrayMap_d_interface;
import import12 = android.java.android.util.SparseBooleanArray_d_interface;
import import18 = android.java.java.util.HashMap_d_interface;
import import17 = android.java.java.lang.ClassLoader_d_interface;
import import7 = android.java.android.os.PersistableBundle_d_interface;
import import8 = android.java.android.util.Size_d_interface;
import import6 = android.java.android.os.Bundle_d_interface;
import import16 = android.java.android.os.ParcelFileDescriptor_d_interface;
import import4 = android.java.java.util.Map_d_interface;
import import11 = android.java.android.util.SparseArray_d_interface;
import import10 = android.java.java.util.List_d_interface;
import import19 = android.java.java.util.ArrayList_d_interface;
import import13 = android.java.android.os.Parcelable_d_interface;
import import15 = android.java.java.lang.JavaException_d_interface;

final class Parcel : IJavaObject {
	static immutable string[] _d_canCastTo = [
	];
	@Import static import0.Parcel obtain();
	@Import void recycle();
	@Import int dataSize();
	@Import int dataAvail();
	@Import int dataPosition();
	@Import int dataCapacity();
	@Import void setDataSize(int);
	@Import void setDataPosition(int);
	@Import void setDataCapacity(int);
	@Import byte[] marshall();
	@Import void unmarshall(byte, int, int[]);
	@Import void appendFrom(import0.Parcel, int, int);
	@Import bool hasFileDescriptors();
	@Import void writeInterfaceToken(string);
	@Import void enforceInterface(string);
	@Import void writeByteArray(byte[]);
	@Import void writeByteArray(byte, int, int[]);
	@Import void writeInt(int);
	@Import void writeLong(long);
	@Import void writeFloat(float);
	@Import void writeDouble(double);
	@Import void writeString(string);
	@Import void writeBoolean(bool);
	@Import void writeStrongBinder(import1.IBinder);
	@Import void writeStrongInterface(import2.IInterface);
	@Import void writeFileDescriptor(import3.FileDescriptor);
	@Import void writeByte(byte);
	@Import void writeMap(import4.Map);
	@Import void writeTypedArrayMap(import5.ArrayMap, int);
	@Import void writeBundle(import6.Bundle);
	@Import void writePersistableBundle(import7.PersistableBundle);
	@Import void writeSize(import8.Size);
	@Import void writeSizeF(import9.SizeF);
	@Import void writeList(import10.List);
	@Import void writeArray(IJavaObject[]);
	@Import void writeSparseArray(import11.SparseArray);
	@Import void writeSparseBooleanArray(import12.SparseBooleanArray);
	@Import void writeBooleanArray(bool[]);
	@Import bool[] createBooleanArray();
	@Import void readBooleanArray(bool[]);
	@Import void writeCharArray(wchar[]);
	@Import wchar[] createCharArray();
	@Import void readCharArray(wchar[]);
	@Import void writeIntArray(int[]);
	@Import int[] createIntArray();
	@Import void readIntArray(int[]);
	@Import void writeLongArray(long[]);
	@Import long[] createLongArray();
	@Import void readLongArray(long[]);
	@Import void writeFloatArray(float[]);
	@Import float[] createFloatArray();
	@Import void readFloatArray(float[]);
	@Import void writeDoubleArray(double[]);
	@Import double[] createDoubleArray();
	@Import void readDoubleArray(double[]);
	@Import void writeStringArray(string[]);
	@Import string[] createStringArray();
	@Import void readStringArray(string[]);
	@Import void writeBinderArray(import1.IBinder[]);
	@Import import1.IBinder[] createBinderArray();
	@Import void readBinderArray(import1.IBinder[]);
	@Import void writeTypedList(import10.List);
	@Import void writeTypedSparseArray(import11.SparseArray, int);
	@Import void writeStringList(import10.List);
	@Import void writeBinderList(import10.List);
	@Import void writeParcelableList(import10.List, int);
	@Import void writeTypedArray(import13.Parcelable, int[]);
	@Import void writeTypedObject(import13.Parcelable, int);
	@Import void writeValue(IJavaObject);
	@Import void writeParcelable(import13.Parcelable, int);
	@Import void writeSerializable(import14.Serializable);
	@Import void writeException(import15.JavaException);
	@Import void writeNoException();
	@Import void readException();
	@Import void readException(int, string);
	@Import int readInt();
	@Import long readLong();
	@Import float readFloat();
	@Import double readDouble();
	@Import string readString();
	@Import bool readBoolean();
	@Import import1.IBinder readStrongBinder();
	@Import import16.ParcelFileDescriptor readFileDescriptor();
	@Import byte readByte();
	@Import void readMap(import4.Map, import17.ClassLoader);
	@Import void readList(import10.List, import17.ClassLoader);
	@Import import18.HashMap readHashMap(import17.ClassLoader);
	@Import import6.Bundle readBundle();
	@Import import6.Bundle readBundle(import17.ClassLoader);
	@Import import7.PersistableBundle readPersistableBundle();
	@Import import7.PersistableBundle readPersistableBundle(import17.ClassLoader);
	@Import import8.Size readSize();
	@Import import9.SizeF readSizeF();
	@Import byte[] createByteArray();
	@Import void readByteArray(byte[]);
	@Import import19.ArrayList readArrayList(import17.ClassLoader);
	@Import IJavaObject[] readArray(import17.ClassLoader);
	@Import import11.SparseArray readSparseArray(import17.ClassLoader);
	@Import import12.SparseBooleanArray readSparseBooleanArray();
	@Import import19.ArrayList createTypedArrayList(import20.Parcelable_Creator);
	@Import void readTypedList(import10.List, import20.Parcelable_Creator);
	@Import import11.SparseArray createTypedSparseArray(import20.Parcelable_Creator);
	@Import import5.ArrayMap createTypedArrayMap(import20.Parcelable_Creator);
	@Import import19.ArrayList createStringArrayList();
	@Import import19.ArrayList createBinderArrayList();
	@Import void readStringList(import10.List);
	@Import void readBinderList(import10.List);
	@Import import10.List readParcelableList(import10.List, import17.ClassLoader);
	@Import IJavaObject[] createTypedArray(import20.Parcelable_Creator);
	@Import void readTypedArray(IJavaObject, import20.Parcelable_Creator[]);
	@Import IJavaObject readTypedObject(import20.Parcelable_Creator);
	@Import void writeParcelableArray(import13.Parcelable, int[]);
	@Import IJavaObject readValue(import17.ClassLoader);
	@Import import13.Parcelable readParcelable(import17.ClassLoader);
	@Import import13.Parcelable[] readParcelableArray(import17.ClassLoader);
	@Import import14.Serializable readSerializable();
	@Import import21.Class getClass();
	@Import int hashCode();
	@Import bool equals(IJavaObject);
	@Import @JavaName("toString") string toString_();
	override string toString() { return arsd.jni.javaObjectToString(this); }
	@Import void notify();
	@Import void notifyAll();
	@Import void wait(long);
	@Import void wait(long, int);
	@Import void wait();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/os/Parcel;";
}



