module android.java.android.graphics.drawable.Drawable_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl;

import import1 = android.java.android.graphics.Rect_d_interface;
import import8 = android.java.android.content.res.Resources_Theme_d_interface;
import import0 = android.java.android.graphics.Canvas_d_interface;
import import13 = android.java.android.util.TypedValue_d_interface;
import import15 = android.java.org.xmlpull.v1.XmlPullParser_d_interface;
import import5 = android.java.android.graphics.PorterDuff_Mode_d_interface;
import import4 = android.java.android.graphics.ColorFilter_d_interface;
import import17 = android.java.android.graphics.drawable.Drawable_ConstantState_d_interface;
import import12 = android.java.android.content.res.Resources_d_interface;
import import6 = android.java.android.content.res.ColorStateList_d_interface;
import import14 = android.java.android.graphics.BitmapFactory_Options_d_interface;
import import7 = android.java.android.graphics.drawable.Drawable_d_interface;
import import11 = android.java.java.io.InputStream_d_interface;
import import16 = android.java.android.util.AttributeSet_d_interface;
import import10 = android.java.android.graphics.Outline_d_interface;
import import3 = android.java.java.lang.Runnable_d_interface;
import import2 = android.java.android.graphics.drawable.Drawable_Callback_d_interface;
import import9 = android.java.android.graphics.Region_d_interface;

final class Drawable : IJavaObject {
	@Import void draw(import0.Canvas);
	@Import void setBounds(int, int, int, int);
	@Import void setBounds(import1.Rect);
	@Import void copyBounds(import1.Rect);
	@Import import1.Rect copyBounds();
	@Import import1.Rect getBounds();
	@Import import1.Rect getDirtyBounds();
	@Import void setChangingConfigurations(int);
	@Import int getChangingConfigurations();
	@Import void setDither(bool);
	@Import void setFilterBitmap(bool);
	@Import bool isFilterBitmap();
	@Import void setCallback(import2.Drawable_Callback);
	@Import import2.Drawable_Callback getCallback();
	@Import void invalidateSelf();
	@Import void scheduleSelf(import3.Runnable, long);
	@Import void unscheduleSelf(import3.Runnable);
	@Import int getLayoutDirection();
	@Import bool setLayoutDirection(int);
	@Import bool onLayoutDirectionChanged(int);
	@Import void setAlpha(int);
	@Import int getAlpha();
	@Import void setColorFilter(import4.ColorFilter);
	@Import void setColorFilter(int, import5.PorterDuff_Mode);
	@Import void setTint(int);
	@Import void setTintList(import6.ColorStateList);
	@Import void setTintMode(import5.PorterDuff_Mode);
	@Import import4.ColorFilter getColorFilter();
	@Import void clearColorFilter();
	@Import void setHotspot(float, float);
	@Import void setHotspotBounds(int, int, int, int);
	@Import void getHotspotBounds(import1.Rect);
	@Import bool isStateful();
	@Import bool setState(int[]);
	@Import int[] getState();
	@Import void jumpToCurrentState();
	@Import import7.Drawable getCurrent();
	@Import bool setLevel(int);
	@Import int getLevel();
	@Import bool setVisible(bool, bool);
	@Import bool isVisible();
	@Import void setAutoMirrored(bool);
	@Import bool isAutoMirrored();
	@Import void applyTheme(import8.Resources_Theme);
	@Import bool canApplyTheme();
	@Import int getOpacity();
	@Import static int resolveOpacity(int, int);
	@Import import9.Region getTransparentRegion();
	@Import int getIntrinsicWidth();
	@Import int getIntrinsicHeight();
	@Import int getMinimumWidth();
	@Import int getMinimumHeight();
	@Import bool getPadding(import1.Rect);
	@Import void getOutline(import10.Outline);
	@Import import7.Drawable mutate();
	@Import static import7.Drawable createFromStream(import11.InputStream, string);
	@Import static import7.Drawable createFromResourceStream(import12.Resources, import13.TypedValue, import11.InputStream, string);
	@Import static import7.Drawable createFromResourceStream(import12.Resources, import13.TypedValue, import11.InputStream, string, import14.BitmapFactory_Options);
	@Import static import7.Drawable createFromXml(import12.Resources, import15.XmlPullParser);
	@Import static import7.Drawable createFromXml(import12.Resources, import15.XmlPullParser, import8.Resources_Theme);
	@Import static import7.Drawable createFromXmlInner(import12.Resources, import15.XmlPullParser, import16.AttributeSet);
	@Import static import7.Drawable createFromXmlInner(import12.Resources, import15.XmlPullParser, import16.AttributeSet, import8.Resources_Theme);
	@Import static import7.Drawable createFromPath(string);
	@Import void inflate(import12.Resources, import15.XmlPullParser, import16.AttributeSet);
	@Import void inflate(import12.Resources, import15.XmlPullParser, import16.AttributeSet, import8.Resources_Theme);
	@Import import17.Drawable_ConstantState getConstantState();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/graphics/drawable/Drawable";
}
