module android.java.android.graphics.drawable.ColorStateListDrawable_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl, JavaInterfaceMembers;
static import arsd.jni;

import import8 = android.java.android.graphics.Rect_d_interface;
import import3 = android.java.android.content.res.Resources_Theme_d_interface;
import import4 = android.java.android.graphics.BlendMode_d_interface;
import import1 = android.java.android.graphics.Canvas_d_interface;
import import16 = android.java.android.util.TypedValue_d_interface;
import import18 = android.java.org.xmlpull.v1.XmlPullParser_d_interface;
import import10 = android.java.android.graphics.PorterDuff_Mode_d_interface;
import import5 = android.java.android.graphics.ColorFilter_d_interface;
import import7 = android.java.android.graphics.drawable.Drawable_ConstantState_d_interface;
import import15 = android.java.android.content.res.Resources_d_interface;
import import0 = android.java.android.content.res.ColorStateList_d_interface;
import import12 = android.java.android.graphics.Insets_d_interface;
import import2 = android.java.android.graphics.drawable.Drawable_d_interface;
import import14 = android.java.java.io.InputStream_d_interface;
import import17 = android.java.android.graphics.BitmapFactory_Options_d_interface;
import import13 = android.java.android.graphics.Outline_d_interface;
import import19 = android.java.android.util.AttributeSet_d_interface;
import import20 = android.java.java.lang.Class_d_interface;
import import6 = android.java.java.lang.Runnable_d_interface;
import import9 = android.java.android.graphics.drawable.Drawable_Callback_d_interface;
import import11 = android.java.android.graphics.Region_d_interface;

final class ColorStateListDrawable : IJavaObject {
	static immutable string[] _d_canCastTo = [
		"android/graphics/drawable/Drawable$Callback",
	];
	@Import this(arsd.jni.Default);
	@Import this(import0.ColorStateList);
	@Import void draw(import1.Canvas);
	@Import int getAlpha();
	@Import bool isStateful();
	@Import bool hasFocusStateSpecified();
	@Import import2.Drawable getCurrent();
	@Import void applyTheme(import3.Resources_Theme);
	@Import bool canApplyTheme();
	@Import void setAlpha(int);
	@Import void clearAlpha();
	@Import void setTintList(import0.ColorStateList);
	@Import void setTintBlendMode(import4.BlendMode);
	@Import import5.ColorFilter getColorFilter();
	@Import void setColorFilter(import5.ColorFilter);
	@Import int getOpacity();
	@Import void invalidateDrawable(import2.Drawable);
	@Import void scheduleDrawable(import2.Drawable, import6.Runnable, long);
	@Import void unscheduleDrawable(import2.Drawable, import6.Runnable);
	@Import import7.Drawable_ConstantState getConstantState();
	@Import import0.ColorStateList getColorStateList();
	@Import int getChangingConfigurations();
	@Import import2.Drawable mutate();
	@Import void setColorStateList(import0.ColorStateList);
	@Import void setBounds(int, int, int, int);
	@Import void setBounds(import8.Rect);
	@Import void copyBounds(import8.Rect);
	@Import import8.Rect copyBounds();
	@Import import8.Rect getBounds();
	@Import import8.Rect getDirtyBounds();
	@Import void setChangingConfigurations(int);
	@Import void setDither(bool);
	@Import void setFilterBitmap(bool);
	@Import bool isFilterBitmap();
	@Import void setCallback(import9.Drawable_Callback);
	@Import import9.Drawable_Callback getCallback();
	@Import void invalidateSelf();
	@Import void scheduleSelf(import6.Runnable, long);
	@Import void unscheduleSelf(import6.Runnable);
	@Import int getLayoutDirection();
	@Import bool setLayoutDirection(int);
	@Import bool onLayoutDirectionChanged(int);
	@Import void setColorFilter(int, import10.PorterDuff_Mode);
	@Import void setTint(int);
	@Import void setTintMode(import10.PorterDuff_Mode);
	@Import void clearColorFilter();
	@Import void setHotspot(float, float);
	@Import void setHotspotBounds(int, int, int, int);
	@Import void getHotspotBounds(import8.Rect);
	@Import bool isProjected();
	@Import bool setState(int[]);
	@Import int[] getState();
	@Import void jumpToCurrentState();
	@Import bool setLevel(int);
	@Import int getLevel();
	@Import bool setVisible(bool, bool);
	@Import bool isVisible();
	@Import void setAutoMirrored(bool);
	@Import bool isAutoMirrored();
	@Import static int resolveOpacity(int, int);
	@Import import11.Region getTransparentRegion();
	@Import int getIntrinsicWidth();
	@Import int getIntrinsicHeight();
	@Import int getMinimumWidth();
	@Import int getMinimumHeight();
	@Import bool getPadding(import8.Rect);
	@Import import12.Insets getOpticalInsets();
	@Import void getOutline(import13.Outline);
	@Import static import2.Drawable createFromStream(import14.InputStream, string);
	@Import static import2.Drawable createFromResourceStream(import15.Resources, import16.TypedValue, import14.InputStream, string);
	@Import static import2.Drawable createFromResourceStream(import15.Resources, import16.TypedValue, import14.InputStream, string, import17.BitmapFactory_Options);
	@Import static import2.Drawable createFromXml(import15.Resources, import18.XmlPullParser);
	@Import static import2.Drawable createFromXml(import15.Resources, import18.XmlPullParser, import3.Resources_Theme);
	@Import static import2.Drawable createFromXmlInner(import15.Resources, import18.XmlPullParser, import19.AttributeSet);
	@Import static import2.Drawable createFromXmlInner(import15.Resources, import18.XmlPullParser, import19.AttributeSet, import3.Resources_Theme);
	@Import static import2.Drawable createFromPath(string);
	@Import void inflate(import15.Resources, import18.XmlPullParser, import19.AttributeSet);
	@Import void inflate(import15.Resources, import18.XmlPullParser, import19.AttributeSet, import3.Resources_Theme);
	@Import import20.Class getClass();
	@Import int hashCode();
	@Import bool equals(IJavaObject);
	@Import @JavaName("toString") string toString_();
	override string toString() { return arsd.jni.javaObjectToString(this); }
	@Import void notify();
	@Import void notifyAll();
	@Import void wait(long);
	@Import void wait(long, int);
	@Import void wait();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Landroid/graphics/drawable/ColorStateListDrawable;";
}



