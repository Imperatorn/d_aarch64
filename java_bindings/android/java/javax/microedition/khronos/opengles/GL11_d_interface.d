module android.java.javax.microedition.khronos.opengles.GL11_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl;

import import0 = android.java.java.nio.Buffer_d_interface;
import import2 = android.java.java.nio.IntBuffer_d_interface;
import import1 = android.java.java.nio.FloatBuffer_d_interface;

interface GL11 : IJavaObject {
	@Import void glGetPointerv(int, import0.Buffer[]);
	@Import void glBindBuffer(int, int);
	@Import void glBufferData(int, int, import0.Buffer, int);
	@Import void glBufferSubData(int, int, int, import0.Buffer);
	@Import void glClipPlanef(int, float, int[]);
	@Import void glClipPlanef(int, import1.FloatBuffer);
	@Import void glClipPlanex(int, int, int[]);
	@Import void glClipPlanex(int, import2.IntBuffer);
	@Import void glColor4ub(byte, byte, byte, byte);
	@Import void glColorPointer(int, int, int, int);
	@Import void glDeleteBuffers(int, int, int[]);
	@Import void glDeleteBuffers(int, import2.IntBuffer);
	@Import void glDrawElements(int, int, int, int);
	@Import void glGenBuffers(int, int, int[]);
	@Import void glGenBuffers(int, import2.IntBuffer);
	@Import void glGetBooleanv(int, bool, int[]);
	@Import void glGetBooleanv(int, import2.IntBuffer);
	@Import void glGetBufferParameteriv(int, int, int, int[]);
	@Import void glGetBufferParameteriv(int, int, import2.IntBuffer);
	@Import void glGetClipPlanef(int, float, int[]);
	@Import void glGetClipPlanef(int, import1.FloatBuffer);
	@Import void glGetClipPlanex(int, int, int[]);
	@Import void glGetClipPlanex(int, import2.IntBuffer);
	@Import void glGetFixedv(int, int, int[]);
	@Import void glGetFixedv(int, import2.IntBuffer);
	@Import void glGetFloatv(int, float, int[]);
	@Import void glGetFloatv(int, import1.FloatBuffer);
	@Import void glGetLightfv(int, int, float, int[]);
	@Import void glGetLightfv(int, int, import1.FloatBuffer);
	@Import void glGetLightxv(int, int, int, int[]);
	@Import void glGetLightxv(int, int, import2.IntBuffer);
	@Import void glGetMaterialfv(int, int, float, int[]);
	@Import void glGetMaterialfv(int, int, import1.FloatBuffer);
	@Import void glGetMaterialxv(int, int, int, int[]);
	@Import void glGetMaterialxv(int, int, import2.IntBuffer);
	@Import void glGetTexEnviv(int, int, int, int[]);
	@Import void glGetTexEnviv(int, int, import2.IntBuffer);
	@Import void glGetTexEnvxv(int, int, int, int[]);
	@Import void glGetTexEnvxv(int, int, import2.IntBuffer);
	@Import void glGetTexParameterfv(int, int, float, int[]);
	@Import void glGetTexParameterfv(int, int, import1.FloatBuffer);
	@Import void glGetTexParameteriv(int, int, int, int[]);
	@Import void glGetTexParameteriv(int, int, import2.IntBuffer);
	@Import void glGetTexParameterxv(int, int, int, int[]);
	@Import void glGetTexParameterxv(int, int, import2.IntBuffer);
	@Import bool glIsBuffer(int);
	@Import bool glIsEnabled(int);
	@Import bool glIsTexture(int);
	@Import void glNormalPointer(int, int, int);
	@Import void glPointParameterf(int, float);
	@Import void glPointParameterfv(int, float, int[]);
	@Import void glPointParameterfv(int, import1.FloatBuffer);
	@Import void glPointParameterx(int, int);
	@Import void glPointParameterxv(int, int, int[]);
	@Import void glPointParameterxv(int, import2.IntBuffer);
	@Import void glPointSizePointerOES(int, int, import0.Buffer);
	@Import void glTexCoordPointer(int, int, int, int);
	@Import void glTexEnvi(int, int, int);
	@Import void glTexEnviv(int, int, int, int[]);
	@Import void glTexEnviv(int, int, import2.IntBuffer);
	@Import void glTexParameterfv(int, int, float, int[]);
	@Import void glTexParameterfv(int, int, import1.FloatBuffer);
	@Import void glTexParameteri(int, int, int);
	@Import void glTexParameteriv(int, int, int, int[]);
	@Import void glTexParameteriv(int, int, import2.IntBuffer);
	@Import void glTexParameterxv(int, int, int, int[]);
	@Import void glTexParameterxv(int, int, import2.IntBuffer);
	@Import void glVertexPointer(int, int, int, int);
	public static immutable string _javaParameterString = "Ljavax/microedition/khronos/opengles/GL11";
}
