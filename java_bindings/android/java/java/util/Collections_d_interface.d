module android.java.java.util.Collections_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl, JavaInterfaceMembers;
static import arsd.jni;

import import12 = android.java.java.util.Iterator_d_interface;
import import6 = android.java.java.util.NavigableSet_d_interface;
import import2 = android.java.java.util.Random_d_interface;
import import3 = android.java.java.util.Collection_d_interface;
import import14 = android.java.java.util.Enumeration_d_interface;
import import13 = android.java.java.util.ListIterator_d_interface;
import import8 = android.java.java.util.SortedMap_d_interface;
import import10 = android.java.java.lang.Class_d_interface;
import import4 = android.java.java.util.Set_d_interface;
import import11 = android.java.java.util.Queue_d_interface;
import import16 = android.java.java.util.Deque_d_interface;
import import9 = android.java.java.util.NavigableMap_d_interface;
import import7 = android.java.java.util.Map_d_interface;
import import15 = android.java.java.util.ArrayList_d_interface;
import import0 = android.java.java.util.List_d_interface;
import import5 = android.java.java.util.SortedSet_d_interface;
import import1 = android.java.java.util.Comparator_d_interface;

final class Collections : IJavaObject {
	static immutable string[] _d_canCastTo = [
	];
	@Import static void sort(import0.List);
	@Import static void sort(import0.List, import1.Comparator);
	@Import static int binarySearch(import0.List, IJavaObject);
	@Import static int binarySearch(import0.List, IJavaObject, import1.Comparator);
	@Import static void reverse(import0.List);
	@Import static void shuffle(import0.List);
	@Import static void shuffle(import0.List, import2.Random);
	@Import static void swap(import0.List, int, int);
	@Import static void fill(import0.List, IJavaObject);
	@Import static void copy(import0.List, import0.List);
	@Import static IJavaObject min(import3.Collection);
	@Import static IJavaObject min(import3.Collection, import1.Comparator);
	@Import static IJavaObject max(import3.Collection);
	@Import static IJavaObject max(import3.Collection, import1.Comparator);
	@Import static void rotate(import0.List, int);
	@Import static bool replaceAll(import0.List, IJavaObject, IJavaObject);
	@Import static int indexOfSubList(import0.List, import0.List);
	@Import static int lastIndexOfSubList(import0.List, import0.List);
	@Import static import3.Collection unmodifiableCollection(import3.Collection);
	@Import static import4.Set unmodifiableSet(import4.Set);
	@Import static import5.SortedSet unmodifiableSortedSet(import5.SortedSet);
	@Import static import6.NavigableSet unmodifiableNavigableSet(import6.NavigableSet);
	@Import static import0.List unmodifiableList(import0.List);
	@Import static import7.Map unmodifiableMap(import7.Map);
	@Import static import8.SortedMap unmodifiableSortedMap(import8.SortedMap);
	@Import static import9.NavigableMap unmodifiableNavigableMap(import9.NavigableMap);
	@Import static import3.Collection synchronizedCollection(import3.Collection);
	@Import static import4.Set synchronizedSet(import4.Set);
	@Import static import5.SortedSet synchronizedSortedSet(import5.SortedSet);
	@Import static import6.NavigableSet synchronizedNavigableSet(import6.NavigableSet);
	@Import static import0.List synchronizedList(import0.List);
	@Import static import7.Map synchronizedMap(import7.Map);
	@Import static import8.SortedMap synchronizedSortedMap(import8.SortedMap);
	@Import static import9.NavigableMap synchronizedNavigableMap(import9.NavigableMap);
	@Import static import3.Collection checkedCollection(import3.Collection, import10.Class);
	@Import static import11.Queue checkedQueue(import11.Queue, import10.Class);
	@Import static import4.Set checkedSet(import4.Set, import10.Class);
	@Import static import5.SortedSet checkedSortedSet(import5.SortedSet, import10.Class);
	@Import static import6.NavigableSet checkedNavigableSet(import6.NavigableSet, import10.Class);
	@Import static import0.List checkedList(import0.List, import10.Class);
	@Import static import7.Map checkedMap(import7.Map, import10.Class, import10.Class);
	@Import static import8.SortedMap checkedSortedMap(import8.SortedMap, import10.Class, import10.Class);
	@Import static import9.NavigableMap checkedNavigableMap(import9.NavigableMap, import10.Class, import10.Class);
	@Import static import12.Iterator emptyIterator();
	@Import static import13.ListIterator emptyListIterator();
	@Import static import14.Enumeration emptyEnumeration();
	@Import static import4.Set emptySet();
	@Import static import5.SortedSet emptySortedSet();
	@Import static import6.NavigableSet emptyNavigableSet();
	@Import static import0.List emptyList();
	@Import static import7.Map emptyMap();
	@Import static import8.SortedMap emptySortedMap();
	@Import static import9.NavigableMap emptyNavigableMap();
	@Import static import4.Set singleton(IJavaObject);
	@Import static import0.List singletonList(IJavaObject);
	@Import static import7.Map singletonMap(IJavaObject, IJavaObject);
	@Import static import0.List nCopies(int, IJavaObject);
	@Import static import1.Comparator reverseOrder();
	@Import static import1.Comparator reverseOrder(import1.Comparator);
	@Import static import14.Enumeration enumeration(import3.Collection);
	@Import static import15.ArrayList list(import14.Enumeration);
	@Import static int frequency(import3.Collection, IJavaObject);
	@Import static bool disjoint(import3.Collection, import3.Collection);
	@Import static bool addAll(import3.Collection, IJavaObject[]);
	@Import static import4.Set newSetFromMap(import7.Map);
	@Import static import11.Queue asLifoQueue(import16.Deque);
	@Import import10.Class getClass();
	@Import int hashCode();
	@Import bool equals(IJavaObject);
	@Import @JavaName("toString") string toString_();
	override string toString() { return arsd.jni.javaObjectToString(this); }
	@Import void notify();
	@Import void notifyAll();
	@Import void wait(long);
	@Import void wait(long, int);
	@Import void wait();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Ljava/util/Collections;";
}



