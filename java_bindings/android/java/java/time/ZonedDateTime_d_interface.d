module android.java.java.time.ZonedDateTime_d_interface;
import arsd.jni : IJavaObjectImplementation, JavaPackageId, JavaName, IJavaObject, ImportExportImpl;

import import22 = android.java.java.time.chrono.ChronoLocalDateTime_d_interface;
import import7 = android.java.java.time.Instant_d_interface;
import import9 = android.java.java.lang.CharSequence_d_interface;
import import2 = android.java.java.time.Clock_d_interface;
import import11 = android.java.java.time.temporal.TemporalField_d_interface;
import import10 = android.java.java.time.format.DateTimeFormatter_d_interface;
import import12 = android.java.java.time.temporal.TemporalUnit_d_interface;
import import17 = android.java.java.time.temporal.TemporalAmount_d_interface;
import import4 = android.java.java.time.LocalTime_d_interface;
import import1 = android.java.java.time.ZoneId_d_interface;
import import0 = android.java.java.time.ZonedDateTime_d_interface;
import import20 = android.java.java.time.OffsetDateTime_d_interface;
import import16 = android.java.java.time.temporal.TemporalAdjuster_d_interface;
import import5 = android.java.java.time.LocalDateTime_d_interface;
import import18 = android.java.java.time.temporal.TemporalQuery_d_interface;
import import19 = android.java.java.time.temporal.Temporal_d_interface;
import import15 = android.java.java.time.DayOfWeek_d_interface;
import import21 = android.java.java.time.chrono.ChronoZonedDateTime_d_interface;
import import23 = android.java.java.time.chrono.ChronoLocalDate_d_interface;
import import14 = android.java.java.time.Month_d_interface;
import import3 = android.java.java.time.LocalDate_d_interface;
import import6 = android.java.java.time.ZoneOffset_d_interface;
import import8 = android.java.java.time.temporal.TemporalAccessor_d_interface;
import import13 = android.java.java.time.temporal.ValueRange_d_interface;

final class ZonedDateTime : IJavaObject {
	@Import static import0.ZonedDateTime now();
	@Import static import0.ZonedDateTime now(import1.ZoneId);
	@Import static import0.ZonedDateTime now(import2.Clock);
	@Import static import0.ZonedDateTime of(import3.LocalDate, import4.LocalTime, import1.ZoneId);
	@Import static import0.ZonedDateTime of(import5.LocalDateTime, import1.ZoneId);
	@Import static import0.ZonedDateTime of(int, int, int, int, int, int, int, import1.ZoneId);
	@Import static import0.ZonedDateTime ofLocal(import5.LocalDateTime, import1.ZoneId, import6.ZoneOffset);
	@Import static import0.ZonedDateTime ofInstant(import7.Instant, import1.ZoneId);
	@Import static import0.ZonedDateTime ofInstant(import5.LocalDateTime, import6.ZoneOffset, import1.ZoneId);
	@Import static import0.ZonedDateTime ofStrict(import5.LocalDateTime, import6.ZoneOffset, import1.ZoneId);
	@Import static import0.ZonedDateTime from(import8.TemporalAccessor);
	@Import static import0.ZonedDateTime parse(import9.CharSequence);
	@Import static import0.ZonedDateTime parse(import9.CharSequence, import10.DateTimeFormatter);
	@Import bool isSupported(import11.TemporalField);
	@Import bool isSupported(import12.TemporalUnit);
	@Import import13.ValueRange range(import11.TemporalField);
	@Import int get(import11.TemporalField);
	@Import long getLong(import11.TemporalField);
	@Import import6.ZoneOffset getOffset();
	@Import import0.ZonedDateTime withEarlierOffsetAtOverlap();
	@Import import0.ZonedDateTime withLaterOffsetAtOverlap();
	@Import import1.ZoneId getZone();
	@Import import0.ZonedDateTime withZoneSameLocal(import1.ZoneId);
	@Import import0.ZonedDateTime withZoneSameInstant(import1.ZoneId);
	@Import import0.ZonedDateTime withFixedOffsetZone();
	@Import import5.LocalDateTime toLocalDateTime();
	@Import import3.LocalDate toLocalDate();
	@Import int getYear();
	@Import int getMonthValue();
	@Import import14.Month getMonth();
	@Import int getDayOfMonth();
	@Import int getDayOfYear();
	@Import import15.DayOfWeek getDayOfWeek();
	@Import import4.LocalTime toLocalTime();
	@Import int getHour();
	@Import int getMinute();
	@Import int getSecond();
	@Import int getNano();
	@Import @JavaName("with") import0.ZonedDateTime with_(import16.TemporalAdjuster);
	@Import @JavaName("with") import0.ZonedDateTime with_(import11.TemporalField, long);
	@Import import0.ZonedDateTime withYear(int);
	@Import import0.ZonedDateTime withMonth(int);
	@Import import0.ZonedDateTime withDayOfMonth(int);
	@Import import0.ZonedDateTime withDayOfYear(int);
	@Import import0.ZonedDateTime withHour(int);
	@Import import0.ZonedDateTime withMinute(int);
	@Import import0.ZonedDateTime withSecond(int);
	@Import import0.ZonedDateTime withNano(int);
	@Import import0.ZonedDateTime truncatedTo(import12.TemporalUnit);
	@Import import0.ZonedDateTime plus(import17.TemporalAmount);
	@Import import0.ZonedDateTime plus(long, import12.TemporalUnit);
	@Import import0.ZonedDateTime plusYears(long);
	@Import import0.ZonedDateTime plusMonths(long);
	@Import import0.ZonedDateTime plusWeeks(long);
	@Import import0.ZonedDateTime plusDays(long);
	@Import import0.ZonedDateTime plusHours(long);
	@Import import0.ZonedDateTime plusMinutes(long);
	@Import import0.ZonedDateTime plusSeconds(long);
	@Import import0.ZonedDateTime plusNanos(long);
	@Import import0.ZonedDateTime minus(import17.TemporalAmount);
	@Import import0.ZonedDateTime minus(long, import12.TemporalUnit);
	@Import import0.ZonedDateTime minusYears(long);
	@Import import0.ZonedDateTime minusMonths(long);
	@Import import0.ZonedDateTime minusWeeks(long);
	@Import import0.ZonedDateTime minusDays(long);
	@Import import0.ZonedDateTime minusHours(long);
	@Import import0.ZonedDateTime minusMinutes(long);
	@Import import0.ZonedDateTime minusSeconds(long);
	@Import import0.ZonedDateTime minusNanos(long);
	@Import IJavaObject query(import18.TemporalQuery);
	@Import long until(import19.Temporal, import12.TemporalUnit);
	@Import string format(import10.DateTimeFormatter);
	@Import import20.OffsetDateTime toOffsetDateTime();
	@Import bool equals(IJavaObject);
	@Import int hashCode();
	@Import @JavaName("toString") string toString_();
	@Import import19.Temporal minus(long, import12.TemporalUnit);
	@Import import19.Temporal minus(import17.TemporalAmount);
	@Import import19.Temporal plus(long, import12.TemporalUnit);
	@Import import19.Temporal plus(import17.TemporalAmount);
	@Import @JavaName("with") import19.Temporal with_(import11.TemporalField, long);
	@Import @JavaName("with") import19.Temporal with_(import16.TemporalAdjuster);
	@Import import21.ChronoZonedDateTime minus(long, import12.TemporalUnit);
	@Import import21.ChronoZonedDateTime minus(import17.TemporalAmount);
	@Import import21.ChronoZonedDateTime plus(long, import12.TemporalUnit);
	@Import import21.ChronoZonedDateTime plus(import17.TemporalAmount);
	@Import @JavaName("with") import21.ChronoZonedDateTime with_(import11.TemporalField, long);
	@Import @JavaName("with") import21.ChronoZonedDateTime with_(import16.TemporalAdjuster);
	@Import import21.ChronoZonedDateTime withZoneSameInstant(import1.ZoneId);
	@Import import21.ChronoZonedDateTime withZoneSameLocal(import1.ZoneId);
	@Import import21.ChronoZonedDateTime withLaterOffsetAtOverlap();
	@Import import21.ChronoZonedDateTime withEarlierOffsetAtOverlap();
	@Import import22.ChronoLocalDateTime toLocalDateTime();
	@Import import23.ChronoLocalDate toLocalDate();
	mixin IJavaObjectImplementation!(false);
	public static immutable string _javaParameterString = "Ljava/time/ZonedDateTime";
}
